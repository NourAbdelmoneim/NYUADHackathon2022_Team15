define(['dart_sdk', 'packages/html/src/utils.dart', 'packages/csslib/visitor.dart', 'packages/csslib/src/messages.dart', 'packages/html/src/list_proxy.dart', 'packages/source_span/src/location_mixin.dart', 'packages/html/src/token.dart', 'packages/html/src/html_input_stream.dart', 'packages/source_span/src/span_exception.dart'], (function load__packages__html__src__query_selector_dart(dart_sdk, packages__html__src__utils$46dart, packages__csslib__visitor$46dart, packages__csslib__src__messages$46dart, packages__html__src__list_proxy$46dart, packages__source_span__src__location_mixin$46dart, packages__html__src__token$46dart, packages__html__src__html_input_stream$46dart, packages__source_span__src__span_exception$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const constants = packages__html__src__utils$46dart.src__constants;
  const utils = packages__html__src__utils$46dart.src__utils;
  const visitor = packages__csslib__visitor$46dart.visitor;
  const parser = packages__csslib__visitor$46dart.parser;
  const messages = packages__csslib__src__messages$46dart.src__messages;
  const list_proxy = packages__html__src__list_proxy$46dart.src__list_proxy;
  const file = packages__source_span__src__location_mixin$46dart.src__file;
  const span = packages__source_span__src__location_mixin$46dart.src__span;
  const token$ = packages__html__src__token$46dart.src__token;
  const html_input_stream = packages__html__src__html_input_stream$46dart.src__html_input_stream;
  const encoding_parser = packages__html__src__html_input_stream$46dart.src__encoding_parser;
  const span_exception = packages__source_span__src__span_exception$46dart.src__span_exception;
  var query_selector = Object.create(dart.library);
  var css_class_set = Object.create(dart.library);
  var treebuilder = Object.create(dart.library);
  var tokenizer$ = Object.create(dart.library);
  var parser$ = Object.create(dart.library);
  var dom_parsing = Object.create(dart.library);
  var dom = Object.create(dart.library);
  var $whereType = dartx.whereType;
  var $add = dartx.add;
  var $any = dartx.any;
  var $reversed = dartx.reversed;
  var $runtimeType = dartx.runtimeType;
  var $isNotEmpty = dartx.isNotEmpty;
  var $runes = dartx.runes;
  var $_get = dartx._get;
  var $length = dartx.length;
  var $indexOf = dartx.indexOf;
  var $startsWith = dartx.startsWith;
  var $toLowerCase = dartx.toLowerCase;
  var $split = dartx.split;
  var $endsWith = dartx.endsWith;
  var $contains = dartx.contains;
  var $trim = dartx.trim;
  var $join = dartx.join;
  var $iterator = dartx.iterator;
  var $toSet = dartx.toSet;
  var $containsKey = dartx.containsKey;
  var $forEach = dartx.forEach;
  var $_set = dartx._set;
  var $splitMapJoin = dartx.splitMapJoin;
  var $clear = dartx.clear;
  var $_equals = dartx._equals;
  var $isEmpty = dartx.isEmpty;
  var $last = dartx.last;
  var $removeLast = dartx.removeLast;
  var $keys = dartx.keys;
  var $where = dartx.where;
  var $toList = dartx.toList;
  var $sublist = dartx.sublist;
  var $putIfAbsent = dartx.putIfAbsent;
  var $replaceAll = dartx.replaceAll;
  var $remove = dartx.remove;
  var $substring = dartx.substring;
  var $insert = dartx.insert;
  var $map = dartx.map;
  var $noSuchMethod = dartx.noSuchMethod;
  var $toString = dartx.toString;
  var $hashCode = dartx.hashCode;
  var $compareTo = dartx.compareTo;
  var $addAll = dartx.addAll;
  var $expand = dartx.expand;
  var $insertAll = dartx.insertAll;
  var $reduce = dartx.reduce;
  var $fold = dartx.fold;
  var $every = dartx.every;
  var $firstWhere = dartx.firstWhere;
  var $lastWhere = dartx.lastWhere;
  var $singleWhere = dartx.singleWhere;
  var $getRange = dartx.getRange;
  var $lastIndexOf = dartx.lastIndexOf;
  var $first = dartx.first;
  var $single = dartx.single;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    NodeTobool: () => (T.NodeTobool = dart.constFn(dart.fnType(core.bool, [dom.Node])))(),
    intTobool: () => (T.intTobool = dart.constFn(dart.fnType(core.bool, [core.int])))(),
    StringTobool: () => (T.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    JSArrayOfElement: () => (T.JSArrayOfElement = dart.constFn(_interceptors.JSArray$(dom.Element)))(),
    JSArrayOfMessage: () => (T.JSArrayOfMessage = dart.constFn(_interceptors.JSArray$(messages.Message)))(),
    _IdentityHashSetOfString: () => (T._IdentityHashSetOfString = dart.constFn(collection._IdentityHashSet$(core.String)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    SetOfString: () => (T.SetOfString = dart.constFn(core.Set$(core.String)))(),
    SetOfStringTobool: () => (T.SetOfStringTobool = dart.constFn(dart.fnType(core.bool, [T.SetOfString()])))(),
    ElementN: () => (T.ElementN = dart.constFn(dart.nullable(dom.Element)))(),
    ObjectAndStringTovoid: () => (T.ObjectAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.String])))(),
    LinkedHashMapOfObject$String: () => (T.LinkedHashMapOfObject$String = dart.constFn(collection.LinkedHashMap$(core.Object, core.String)))(),
    LinkedMapOfObject$String: () => (T.LinkedMapOfObject$String = dart.constFn(_js_helper.LinkedMap$(core.Object, core.String)))(),
    LinkedMapOfObject$FileSpan: () => (T.LinkedMapOfObject$FileSpan = dart.constFn(_js_helper.LinkedMap$(core.Object, file.FileSpan)))(),
    StringToString: () => (T.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    MatchToString: () => (T.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    PairOfString$String: () => (T.PairOfString$String = dart.constFn(utils.Pair$(core.String, core.String)))(),
    NodeN: () => (T.NodeN = dart.constFn(dart.nullable(dom.Node)))(),
    JSArrayOfNodeN: () => (T.JSArrayOfNodeN = dart.constFn(_interceptors.JSArray$(T.NodeN())))(),
    TokenN: () => (T.TokenN = dart.constFn(dart.nullable(token$.Token)))(),
    ListQueueOfTokenN: () => (T.ListQueueOfTokenN = dart.constFn(collection.ListQueue$(T.TokenN())))(),
    JSArrayOfTagAttribute: () => (T.JSArrayOfTagAttribute = dart.constFn(_interceptors.JSArray$(token$.TagAttribute)))(),
    StringNTobool: () => (T.StringNTobool = dart.constFn(dart.fnType(core.bool, [T.StringN()])))(),
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    JSArrayOfStringN: () => (T.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T.StringN())))(),
    VoidToString: () => (T.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    LinkedHashSetOfString: () => (T.LinkedHashSetOfString = dart.constFn(collection.LinkedHashSet$(core.String)))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    IdentityMapOfString$ListOfString: () => (T.IdentityMapOfString$ListOfString = dart.constFn(_js_helper.IdentityMap$(core.String, T.ListOfString())))(),
    VoidToListOfString: () => (T.VoidToListOfString = dart.constFn(dart.fnType(T.ListOfString(), [])))(),
    MapOfString$ListOfString: () => (T.MapOfString$ListOfString = dart.constFn(core.Map$(core.String, T.ListOfString())))(),
    VoidToMapOfString$ListOfString: () => (T.VoidToMapOfString$ListOfString = dart.constFn(dart.fnType(T.MapOfString$ListOfString(), [])))(),
    JSArrayOfParseError: () => (T.JSArrayOfParseError = dart.constFn(_interceptors.JSArray$(parser$.ParseError)))(),
    PairOfStringN$StringN: () => (T.PairOfStringN$StringN = dart.constFn(utils.Pair$(T.StringN(), T.StringN())))(),
    JSArrayOfStringToken: () => (T.JSArrayOfStringToken = dart.constFn(_interceptors.JSArray$(token$.StringToken)))(),
    StringTokenToString: () => (T.StringTokenToString = dart.constFn(dart.fnType(core.String, [token$.StringToken])))(),
    SourceSpanN: () => (T.SourceSpanN = dart.constFn(dart.nullable(span.SourceSpan)))(),
    PairOfString$StringN: () => (T.PairOfString$StringN = dart.constFn(utils.Pair$(core.String, T.StringN())))(),
    IterableOfNode: () => (T.IterableOfNode = dart.constFn(core.Iterable$(dom.Node)))(),
    ListOfNode: () => (T.ListOfNode = dart.constFn(core.List$(dom.Node)))(),
    JSArrayOfNode: () => (T.JSArrayOfNode = dart.constFn(_interceptors.JSArray$(dom.Node)))(),
    IterableOfElement: () => (T.IterableOfElement = dart.constFn(core.Iterable$(dom.Element)))(),
    ElementTovoid: () => (T.ElementTovoid = dart.constFn(dart.fnType(dart.void, [dom.Element])))(),
    ElementAndElementToElement: () => (T.ElementAndElementToElement = dart.constFn(dart.fnType(dom.Element, [dom.Element, dom.Element])))(),
    ListOfElement: () => (T.ListOfElement = dart.constFn(core.List$(dom.Element)))(),
    LinkedHashSetOfElement: () => (T.LinkedHashSetOfElement = dart.constFn(collection.LinkedHashSet$(dom.Element)))(),
    VoidToElement: () => (T.VoidToElement = dart.constFn(dart.fnType(dom.Element, [])))(),
    VoidToNElement: () => (T.VoidToNElement = dart.constFn(dart.nullable(T.VoidToElement())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constMap(core.String, core.String, ["body", "html", "head", "html", "caption", "table", "td", "tr", "colgroup", "table", "col", "colgroup", "tr", "tbody", "tbody", "table", "tfoot", "table", "thead", "table", "track", "audio"]);
    },
    get C1() {
      return C[1] = dart.constList([], dart.dynamic);
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: T.PairOfString$String().prototype,
        [Pair_second]: "button",
        [Pair_first]: "http://www.w3.org/1999/xhtml"
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3], dart.dynamic);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: T.PairOfString$String().prototype,
        [Pair_second]: "ol",
        [Pair_first]: "http://www.w3.org/1999/xhtml"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: T.PairOfString$String().prototype,
        [Pair_second]: "ul",
        [Pair_first]: "http://www.w3.org/1999/xhtml"
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6], dart.dynamic);
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: T.PairOfString$String().prototype,
        [Pair_second]: "html",
        [Pair_first]: "http://www.w3.org/1999/xhtml"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: T.PairOfString$String().prototype,
        [Pair_second]: "table",
        [Pair_first]: "http://www.w3.org/1999/xhtml"
      });
    },
    get C7() {
      return C[7] = dart.constList([C[8] || CT.C8, C[9] || CT.C9], dart.dynamic);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: T.PairOfString$String().prototype,
        [Pair_second]: "optgroup",
        [Pair_first]: "http://www.w3.org/1999/xhtml"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: T.PairOfString$String().prototype,
        [Pair_second]: "option",
        [Pair_first]: "http://www.w3.org/1999/xhtml"
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11, C[12] || CT.C12], dart.dynamic);
    },
    get C13() {
      return C[13] = dart.constList(["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], core.String);
    },
    get C14() {
      return C[14] = dart.fn(constants.isDigit, T.StringNTobool());
    },
    get C15() {
      return C[15] = dart.fn(constants.isHexDigit, T.StringNTobool());
    },
    get C16() {
      return C[16] = dart.constList([11, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111], core.int);
    },
    get C17() {
      return C[17] = dart.constList([], core.String);
    },
    get C18() {
      return C[18] = dart.constList(["oO", "cC", "tT", "yY", "pP", "eE"], core.String);
    },
    get C19() {
      return C[19] = dart.constList(["C", "D", "A", "T", "A", "["], core.String);
    },
    get C20() {
      return C[20] = dart.constList(["uU", "bB", "lL", "iI", "cC"], core.String);
    },
    get C21() {
      return C[21] = dart.constList(["yY", "sS", "tT", "eE", "mM"], core.String);
    },
    get C22() {
      return C[22] = dart.constMap(dart.dynamic, dart.dynamic, []);
    },
    get C23() {
      return C[23] = dart.constMap(core.String, core.String, ["attributename", "attributeName", "attributetype", "attributeType", "basefrequency", "baseFrequency", "baseprofile", "baseProfile", "calcmode", "calcMode", "clippathunits", "clipPathUnits", "contentscripttype", "contentScriptType", "contentstyletype", "contentStyleType", "diffuseconstant", "diffuseConstant", "edgemode", "edgeMode", "externalresourcesrequired", "externalResourcesRequired", "filterres", "filterRes", "filterunits", "filterUnits", "glyphref", "glyphRef", "gradienttransform", "gradientTransform", "gradientunits", "gradientUnits", "kernelmatrix", "kernelMatrix", "kernelunitlength", "kernelUnitLength", "keypoints", "keyPoints", "keysplines", "keySplines", "keytimes", "keyTimes", "lengthadjust", "lengthAdjust", "limitingconeangle", "limitingConeAngle", "markerheight", "markerHeight", "markerunits", "markerUnits", "markerwidth", "markerWidth", "maskcontentunits", "maskContentUnits", "maskunits", "maskUnits", "numoctaves", "numOctaves", "pathlength", "pathLength", "patterncontentunits", "patternContentUnits", "patterntransform", "patternTransform", "patternunits", "patternUnits", "pointsatx", "pointsAtX", "pointsaty", "pointsAtY", "pointsatz", "pointsAtZ", "preservealpha", "preserveAlpha", "preserveaspectratio", "preserveAspectRatio", "primitiveunits", "primitiveUnits", "refx", "refX", "refy", "refY", "repeatcount", "repeatCount", "repeatdur", "repeatDur", "requiredextensions", "requiredExtensions", "requiredfeatures", "requiredFeatures", "specularconstant", "specularConstant", "specularexponent", "specularExponent", "spreadmethod", "spreadMethod", "startoffset", "startOffset", "stddeviation", "stdDeviation", "stitchtiles", "stitchTiles", "surfacescale", "surfaceScale", "systemlanguage", "systemLanguage", "tablevalues", "tableValues", "targetx", "targetX", "targety", "targetY", "textlength", "textLength", "viewbox", "viewBox", "viewtarget", "viewTarget", "xchannelselector", "xChannelSelector", "ychannelselector", "yChannelSelector", "zoomandpan", "zoomAndPan"]);
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/1999/xlink",
        [AttributeName_name]: "actuate",
        [AttributeName_prefix]: "xlink"
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/1999/xlink",
        [AttributeName_name]: "arcrole",
        [AttributeName_prefix]: "xlink"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/1999/xlink",
        [AttributeName_name]: "href",
        [AttributeName_prefix]: "xlink"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/1999/xlink",
        [AttributeName_name]: "role",
        [AttributeName_prefix]: "xlink"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/1999/xlink",
        [AttributeName_name]: "show",
        [AttributeName_prefix]: "xlink"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/1999/xlink",
        [AttributeName_name]: "title",
        [AttributeName_prefix]: "xlink"
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/1999/xlink",
        [AttributeName_name]: "type",
        [AttributeName_prefix]: "xlink"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/XML/1998/namespace",
        [AttributeName_name]: "base",
        [AttributeName_prefix]: "xml"
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/XML/1998/namespace",
        [AttributeName_name]: "lang",
        [AttributeName_prefix]: "xml"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/XML/1998/namespace",
        [AttributeName_name]: "space",
        [AttributeName_prefix]: "xml"
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/2000/xmlns/",
        [AttributeName_name]: "xmlns",
        [AttributeName_prefix]: null
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: dom.AttributeName.prototype,
        [AttributeName_namespace]: "http://www.w3.org/2000/xmlns/",
        [AttributeName_name]: "xlink",
        [AttributeName_prefix]: "xmlns"
      });
    },
    get C24() {
      return C[24] = dart.constMap(core.String, dom.AttributeName, ["xlink:actuate", C[25] || CT.C25, "xlink:arcrole", C[26] || CT.C26, "xlink:href", C[27] || CT.C27, "xlink:role", C[28] || CT.C28, "xlink:show", C[29] || CT.C29, "xlink:title", C[30] || CT.C30, "xlink:type", C[31] || CT.C31, "xml:base", C[32] || CT.C32, "xml:lang", C[33] || CT.C33, "xml:space", C[34] || CT.C34, "xmlns", C[35] || CT.C35, "xmlns:xlink", C[36] || CT.C36]);
    },
    get C37() {
      return C[37] = dart.constList(["+//silmaril//dtd html pro v0r11 19970101//", "-//advasoft ltd//dtd html 3.0 aswedit + extensions//", "-//as//dtd html 3.0 aswedit + extensions//", "-//ietf//dtd html 2.0 level 1//", "-//ietf//dtd html 2.0 level 2//", "-//ietf//dtd html 2.0 strict level 1//", "-//ietf//dtd html 2.0 strict level 2//", "-//ietf//dtd html 2.0 strict//", "-//ietf//dtd html 2.0//", "-//ietf//dtd html 2.1e//", "-//ietf//dtd html 3.0//", "-//ietf//dtd html 3.2 final//", "-//ietf//dtd html 3.2//", "-//ietf//dtd html 3//", "-//ietf//dtd html level 0//", "-//ietf//dtd html level 1//", "-//ietf//dtd html level 2//", "-//ietf//dtd html level 3//", "-//ietf//dtd html strict level 0//", "-//ietf//dtd html strict level 1//", "-//ietf//dtd html strict level 2//", "-//ietf//dtd html strict level 3//", "-//ietf//dtd html strict//", "-//ietf//dtd html//", "-//metrius//dtd metrius presentational//", "-//microsoft//dtd internet explorer 2.0 html strict//", "-//microsoft//dtd internet explorer 2.0 html//", "-//microsoft//dtd internet explorer 2.0 tables//", "-//microsoft//dtd internet explorer 3.0 html strict//", "-//microsoft//dtd internet explorer 3.0 html//", "-//microsoft//dtd internet explorer 3.0 tables//", "-//netscape comm. corp.//dtd html//", "-//netscape comm. corp.//dtd strict html//", "-//o'reilly and associates//dtd html 2.0//", "-//o'reilly and associates//dtd html extended 1.0//", "-//o'reilly and associates//dtd html extended relaxed 1.0//", "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//", "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//", "-//spyglass//dtd html 2.0 extended//", "-//sq//dtd html 2.0 hotmetal + extensions//", "-//sun microsystems corp.//dtd hotjava html//", "-//sun microsystems corp.//dtd hotjava strict html//", "-//w3c//dtd html 3 1995-03-24//", "-//w3c//dtd html 3.2 draft//", "-//w3c//dtd html 3.2 final//", "-//w3c//dtd html 3.2//", "-//w3c//dtd html 3.2s draft//", "-//w3c//dtd html 4.0 frameset//", "-//w3c//dtd html 4.0 transitional//", "-//w3c//dtd html experimental 19960712//", "-//w3c//dtd html experimental 970421//", "-//w3c//dtd w3 html//", "-//w3o//dtd w3 html 3.0//", "-//webtechs//dtd mozilla html 2.0//", "-//webtechs//dtd mozilla html//"], core.String);
    },
    get C38() {
      return C[38] = dart.constList(["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"], core.String);
    },
    get C39() {
      return C[39] = dart.constList(["-//w3c//dtd html 4.01 frameset//", "-//w3c//dtd html 4.01 transitional//"], core.String);
    },
    get C40() {
      return C[40] = dart.constList(["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], core.String);
    },
    get C41() {
      return C[41] = dart.constList(["pre", "listing", "textarea"], core.String);
    },
    get C43() {
      return C[43] = dart.constList(["li"], core.String);
    },
    get C44() {
      return C[44] = dart.constList(["dt", "dd"], core.String);
    },
    get C42() {
      return C[42] = dart.constMap(core.String, T.ListOfString(), ["li", C[43] || CT.C43, "dt", C[44] || CT.C44, "dd", C[44] || CT.C44]);
    },
    get C45() {
      return C[45] = dart.constList(["address", "div", "p"], core.String);
    },
    get C46() {
      return C[46] = dart.constList(["table", "tbody", "tfoot", "thead", "tr"], core.String);
    },
    get C47() {
      return C[47] = dart.constList(["tbody", "tfoot", "thead", "html"], core.String);
    },
    get C48() {
      return C[48] = dart.constMap(core.String, core.String, ["altglyph", "altGlyph", "altglyphdef", "altGlyphDef", "altglyphitem", "altGlyphItem", "animatecolor", "animateColor", "animatemotion", "animateMotion", "animatetransform", "animateTransform", "clippath", "clipPath", "feblend", "feBlend", "fecolormatrix", "feColorMatrix", "fecomponenttransfer", "feComponentTransfer", "fecomposite", "feComposite", "feconvolvematrix", "feConvolveMatrix", "fediffuselighting", "feDiffuseLighting", "fedisplacementmap", "feDisplacementMap", "fedistantlight", "feDistantLight", "feflood", "feFlood", "fefunca", "feFuncA", "fefuncb", "feFuncB", "fefuncg", "feFuncG", "fefuncr", "feFuncR", "fegaussianblur", "feGaussianBlur", "feimage", "feImage", "femerge", "feMerge", "femergenode", "feMergeNode", "femorphology", "feMorphology", "feoffset", "feOffset", "fepointlight", "fePointLight", "fespecularlighting", "feSpecularLighting", "fespotlight", "feSpotLight", "fetile", "feTile", "feturbulence", "feTurbulence", "foreignobject", "foreignObject", "glyphref", "glyphRef", "lineargradient", "linearGradient", "radialgradient", "radialGradient", "textpath", "textPath"]);
    },
    get C49() {
      return C[49] = dart.constList(["b", "big", "blockquote", "body", "br", "center", "code", "dd", "div", "dl", "dt", "em", "embed", "h1", "h2", "h3", "h4", "h5", "h6", "head", "hr", "i", "img", "li", "listing", "menu", "meta", "nobr", "ol", "p", "pre", "ruby", "s", "small", "span", "strike", "strong", "sub", "sup", "table", "tt", "u", "ul", "var"], core.String);
    },
    get C50() {
      return C[50] = dart.const(new _js_helper.PrivateSymbol.new('_message', _message));
    },
    get C51() {
      return C[51] = dart.const(new _js_helper.PrivateSymbol.new('_span', _span));
    }
  }, false);
  var C = Array(52).fill(void 0);
  var I = [
    "package:html/src/query_selector.dart",
    "package:html/src/css_class_set.dart",
    "package:html/dom.dart",
    "package:html/src/treebuilder.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/html-0.15.0/lib/src/tokenizer.dart",
    "package:html/src/tokenizer.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/html-0.15.0/lib/parser.dart",
    "package:html/parser.dart",
    "package:html/dom_parsing.dart"
  ];
  var _element = dart.privateName(query_selector, "_element");
  var _unsupported = dart.privateName(query_selector, "_unsupported");
  var _unimplemented = dart.privateName(query_selector, "_unimplemented");
  query_selector.SelectorEvaluator = class SelectorEvaluator extends visitor.Visitor {
    matches(element, selector) {
      this[_element] = element;
      return this.visitSelectorGroup(selector);
    }
    querySelector(root, selector) {
      for (let element of root.nodes[$whereType](dom.Element)) {
        if (this.matches(element, selector)) return element;
        let result = this.querySelector(element, selector);
        if (result != null) return result;
      }
      return null;
    }
    querySelectorAll(root, selector, results) {
      for (let element of root.nodes[$whereType](dom.Element)) {
        if (this.matches(element, selector)) results[$add](element);
        this.querySelectorAll(element, selector, results);
      }
    }
    visitSelectorGroup(group) {
      return group.selectors[$any](dart.bind(this, 'visitSelector'));
    }
    visitSelector(selector) {
      let old = this[_element];
      let result = true;
      let combinator = null;
      for (let s of selector.simpleSelectorSequences[$reversed]) {
        if (combinator == null) {
          result = core.bool.as(s.simpleSelector.visit(this));
        } else if (combinator === 514) {
          do {
            this[_element] = dart.nullCheck(this[_element]).parent;
          } while (this[_element] != null && !core.bool.as(s.simpleSelector.visit(this)));
          if (this[_element] == null) result = false;
        } else if (combinator === 517) {
          do {
            this[_element] = dart.nullCheck(this[_element]).previousElementSibling;
          } while (this[_element] != null && !core.bool.as(s.simpleSelector.visit(this)));
          if (this[_element] == null) result = false;
        }
        if (!result) break;
        switch (s.combinator) {
          case 515:
          {
            this[_element] = dart.nullCheck(this[_element]).previousElementSibling;
            break;
          }
          case 516:
          {
            this[_element] = dart.nullCheck(this[_element]).parent;
            break;
          }
          case 514:
          case 517:
          {
            combinator = s.combinator;
            break;
          }
          case 513:
          {
            break;
          }
          default:
          {
            dart.throw(this[_unsupported](selector));
          }
        }
        if (this[_element] == null) {
          result = false;
          break;
        }
      }
      this[_element] = old;
      return result;
    }
    [_unimplemented](selector) {
      return new core.UnimplementedError.new("'" + dart.str(selector) + "' selector of type " + dart.str(selector[$runtimeType]) + " is not implemented");
    }
    [_unsupported](selector) {
      return new core.FormatException.new("'" + dart.str(selector) + "' is not a valid selector");
    }
    visitPseudoClassSelector(selector) {
      switch (selector.name) {
        case "root":
        {
          return dart.nullCheck(this[_element]).localName === "html" && dart.nullCheck(this[_element]).parentNode == null;
        }
        case "empty":
        {
          return dart.nullCheck(this[_element]).nodes[$any](dart.fn(n => !(dom.Element.is(n) || dom.Text.is(n) && n.text[$isNotEmpty]), T.NodeTobool()));
        }
        case "blank":
        {
          return dart.nullCheck(this[_element]).nodes[$any](dart.fn(n => !(dom.Element.is(n) || dom.Text.is(n) && n.text[$runes][$any](dart.fn(r => !constants.isWhitespaceCC(r), T.intTobool()))), T.NodeTobool()));
        }
        case "first-child":
        {
          return dart.nullCheck(this[_element]).previousElementSibling == null;
        }
        case "last-child":
        {
          return dart.nullCheck(this[_element]).nextElementSibling == null;
        }
        case "only-child":
        {
          return dart.nullCheck(this[_element]).previousElementSibling == null && dart.nullCheck(this[_element]).nextElementSibling == null;
        }
        case "link":
        {
          return dart.nullCheck(this[_element]).attributes[$_get]("href") != null;
        }
        case "visited":
        {
          return false;
        }
      }
      if (query_selector.SelectorEvaluator._isLegacyPsuedoClass(selector.name)) return false;
      dart.throw(this[_unimplemented](selector));
    }
    visitPseudoElementSelector(selector) {
      if (query_selector.SelectorEvaluator._isLegacyPsuedoClass(selector.name)) return false;
      dart.throw(this[_unimplemented](selector));
    }
    static _isLegacyPsuedoClass(name) {
      switch (name) {
        case "before":
        case "after":
        case "first-line":
        case "first-letter":
        {
          return true;
        }
        default:
        {
          return false;
        }
      }
    }
    visitPseudoElementFunctionSelector(s) {
      return dart.throw(this[_unimplemented](s));
    }
    visitPseudoClassFunctionSelector(selector) {
      switch (selector.name) {
        case "nth-child":
        {
          let exprs = selector.expression.expressions;
          if (exprs[$length] === 1 && visitor.LiteralTerm.is(exprs[$_get](0))) {
            let literal = visitor.LiteralTerm.as(exprs[$_get](0));
            let parent = dart.nullCheck(this[_element]).parentNode;
            return parent != null && core.num.as(literal.value) > 0 && parent.nodes[$indexOf](this[_element]) === literal.value;
          }
          break;
        }
        case "lang":
        {
          let toMatch = selector.expression.span.text;
          let lang = query_selector.SelectorEvaluator._getInheritedLanguage(this[_element]);
          return lang != null && lang[$startsWith](toMatch);
        }
      }
      dart.throw(this[_unimplemented](selector));
    }
    static _getInheritedLanguage(node) {
      while (node != null) {
        let lang = node.attributes[$_get]("lang");
        if (lang != null) return lang;
        node = node.parent;
      }
      return null;
    }
    visitNamespaceSelector(selector) {
      if (!core.bool.as(dart.nullCheck(selector.nameAsSimpleSelector).visit(this))) return false;
      if (selector.isNamespaceWildcard) return true;
      if (selector.namespace === "") return dart.nullCheck(this[_element]).namespaceUri == null;
      dart.throw(this[_unimplemented](selector));
    }
    visitElementSelector(selector) {
      return selector.isWildcard || dart.nullCheck(this[_element]).localName === selector.name[$toLowerCase]();
    }
    visitIdSelector(selector) {
      return dart.nullCheck(this[_element]).id === selector.name;
    }
    visitClassSelector(selector) {
      return dart.nullCheck(this[_element]).classes.contains(selector.name);
    }
    visitNegationSelector(selector) {
      return !core.bool.as(dart.nullCheck(selector.negationArg).visit(this));
    }
    visitAttributeSelector(selector) {
      let value = dart.nullCheck(this[_element]).attributes[$_get](selector.name[$toLowerCase]());
      if (value == null) return false;
      if (selector.operatorKind === 535) return true;
      let select = dart.str(selector.value);
      switch (selector.operatorKind) {
        case 28:
        {
          return value === select;
        }
        case 530:
        {
          return value[$split](" ")[$any](dart.fn(v => v[$isNotEmpty] && v === select, T.StringTobool()));
        }
        case 531:
        {
          return value[$startsWith](select) && (value.length === select.length || value[$_get](select.length) === "-");
        }
        case 532:
        {
          return value[$startsWith](select);
        }
        case 533:
        {
          return value[$endsWith](select);
        }
        case 534:
        {
          return value[$contains](select);
        }
        default:
        {
          dart.throw(this[_unsupported](selector));
        }
      }
    }
  };
  (query_selector.SelectorEvaluator.new = function() {
    this[_element] = null;
    ;
  }).prototype = query_selector.SelectorEvaluator.prototype;
  dart.addTypeTests(query_selector.SelectorEvaluator);
  dart.addTypeCaches(query_selector.SelectorEvaluator);
  dart.setMethodSignature(query_selector.SelectorEvaluator, () => ({
    __proto__: dart.getMethods(query_selector.SelectorEvaluator.__proto__),
    matches: dart.fnType(core.bool, [dom.Element, visitor.SelectorGroup]),
    querySelector: dart.fnType(dart.nullable(dom.Element), [dom.Node, visitor.SelectorGroup]),
    querySelectorAll: dart.fnType(dart.void, [dom.Node, visitor.SelectorGroup, core.List$(dom.Element)]),
    visitSelectorGroup: dart.fnType(core.bool, [visitor.SelectorGroup]),
    visitSelector: dart.fnType(core.bool, [visitor.Selector]),
    [_unimplemented]: dart.fnType(core.UnimplementedError, [visitor.SimpleSelector]),
    [_unsupported]: dart.fnType(core.FormatException, [dart.dynamic]),
    visitPseudoClassSelector: dart.fnType(core.bool, [visitor.PseudoClassSelector]),
    visitPseudoElementSelector: dart.fnType(core.bool, [visitor.PseudoElementSelector]),
    visitPseudoElementFunctionSelector: dart.fnType(core.bool, [visitor.PseudoElementFunctionSelector]),
    visitPseudoClassFunctionSelector: dart.fnType(core.bool, [visitor.PseudoClassFunctionSelector]),
    visitNamespaceSelector: dart.fnType(core.bool, [visitor.NamespaceSelector]),
    visitElementSelector: dart.fnType(core.bool, [visitor.ElementSelector]),
    visitIdSelector: dart.fnType(core.bool, [visitor.IdSelector]),
    visitClassSelector: dart.fnType(core.bool, [visitor.ClassSelector]),
    visitNegationSelector: dart.fnType(core.bool, [visitor.NegationSelector]),
    visitAttributeSelector: dart.fnType(core.bool, [visitor.AttributeSelector])
  }));
  dart.setLibraryUri(query_selector.SelectorEvaluator, I[0]);
  dart.setFieldSignature(query_selector.SelectorEvaluator, () => ({
    __proto__: dart.getFields(query_selector.SelectorEvaluator.__proto__),
    [_element]: dart.fieldType(dart.nullable(dom.Element))
  }));
  query_selector.matches = function matches(node, selector) {
    return new query_selector.SelectorEvaluator.new().matches(node, query_selector._parseSelectorList(selector));
  };
  query_selector.querySelector = function querySelector(node, selector) {
    return new query_selector.SelectorEvaluator.new().querySelector(node, query_selector._parseSelectorList(selector));
  };
  query_selector.querySelectorAll = function querySelectorAll(node, selector) {
    let results = T.JSArrayOfElement().of([]);
    new query_selector.SelectorEvaluator.new().querySelectorAll(node, query_selector._parseSelectorList(selector), results);
    return results;
  };
  query_selector._parseSelectorList = function _parseSelectorList(selector) {
    let errors = T.JSArrayOfMessage().of([]);
    let group = parser.parseSelectorGroup(selector, {errors: errors});
    if (group == null || errors[$isNotEmpty]) {
      dart.throw(new core.FormatException.new("'" + selector + "' is not a valid selector: " + dart.str(errors)));
    }
    return group;
  };
  var _element$ = dart.privateName(css_class_set, "_element");
  var _modify = dart.privateName(css_class_set, "_modify");
  css_class_set._CssClassSetImpl = class _CssClassSetImpl extends collection.SetBase$(core.String) {
    toString() {
      return this.readClasses()[$join](" ");
    }
    toggle(value, shouldAdd = null) {
      let s = this.readClasses();
      let result = false;
      shouldAdd == null ? shouldAdd = !s.contains(value) : null;
      if (dart.test(shouldAdd)) {
        s.add(value);
        result = true;
      } else {
        s.remove(value);
      }
      this.writeClasses(s);
      return result;
    }
    get frozen() {
      return false;
    }
    get iterator() {
      return this.readClasses().iterator;
    }
    get length() {
      return this.readClasses()[$length];
    }
    contains(value) {
      return this.readClasses().contains(value);
    }
    lookup(value) {
      return this.contains(value) ? T.StringN().as(value) : null;
    }
    toSet() {
      return this.readClasses().toSet();
    }
    add(value) {
      core.String.as(value);
      return this[_modify](dart.fn(s => s.add(value), T.SetOfStringTobool()));
    }
    remove(value) {
      if (!(typeof value == 'string')) return false;
      let s = this.readClasses();
      let result = s.remove(value);
      this.writeClasses(s);
      return result;
    }
    toggleAll(iterable, shouldAdd = null) {
      for (let e of iterable) {
        this.toggle(e, shouldAdd);
      }
    }
    [_modify](f) {
      let s = this.readClasses();
      let ret = f(s);
      this.writeClasses(s);
      return ret;
    }
  };
  (css_class_set._CssClassSetImpl.new = function() {
    ;
  }).prototype = css_class_set._CssClassSetImpl.prototype;
  dart.addTypeTests(css_class_set._CssClassSetImpl);
  dart.addTypeCaches(css_class_set._CssClassSetImpl);
  css_class_set._CssClassSetImpl[dart.implements] = () => [css_class_set.CssClassSet];
  dart.setMethodSignature(css_class_set._CssClassSetImpl, () => ({
    __proto__: dart.getMethods(css_class_set._CssClassSetImpl.__proto__),
    toggle: dart.fnType(core.bool, [core.String], [dart.nullable(core.bool)]),
    contains: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    [$contains]: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    lookup: dart.fnType(dart.nullable(core.String), [dart.nullable(core.Object)]),
    toSet: dart.fnType(core.Set$(core.String), []),
    [$toSet]: dart.fnType(core.Set$(core.String), []),
    add: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    remove: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    toggleAll: dart.fnType(dart.void, [core.Iterable$(core.String)], [dart.nullable(core.bool)]),
    [_modify]: dart.fnType(core.bool, [dart.fnType(core.bool, [core.Set$(core.String)])])
  }));
  dart.setGetterSignature(css_class_set._CssClassSetImpl, () => ({
    __proto__: dart.getGetters(css_class_set._CssClassSetImpl.__proto__),
    frozen: core.bool,
    iterator: core.Iterator$(core.String),
    [$iterator]: core.Iterator$(core.String),
    length: core.int,
    [$length]: core.int
  }));
  dart.setLibraryUri(css_class_set._CssClassSetImpl, I[1]);
  dart.defineExtensionMethods(css_class_set._CssClassSetImpl, ['toString', 'contains', 'toSet']);
  dart.defineExtensionAccessors(css_class_set._CssClassSetImpl, ['iterator', 'length']);
  css_class_set.ElementCssClassSet = class ElementCssClassSet extends css_class_set._CssClassSetImpl {
    readClasses() {
      let s = new (T._IdentityHashSetOfString()).new();
      let classname = this[_element$].className;
      for (let name of classname[$split](" ")) {
        let trimmed = name[$trim]();
        if (trimmed[$isNotEmpty]) {
          s.add(trimmed);
        }
      }
      return s;
    }
    writeClasses(s) {
      this[_element$].className = s[$join](" ");
    }
  };
  (css_class_set.ElementCssClassSet.new = function(_element) {
    this[_element$] = _element;
    ;
  }).prototype = css_class_set.ElementCssClassSet.prototype;
  dart.addTypeTests(css_class_set.ElementCssClassSet);
  dart.addTypeCaches(css_class_set.ElementCssClassSet);
  dart.setMethodSignature(css_class_set.ElementCssClassSet, () => ({
    __proto__: dart.getMethods(css_class_set.ElementCssClassSet.__proto__),
    readClasses: dart.fnType(core.Set$(core.String), []),
    writeClasses: dart.fnType(dart.void, [core.Set$(core.String)])
  }));
  dart.setLibraryUri(css_class_set.ElementCssClassSet, I[1]);
  dart.setFieldSignature(css_class_set.ElementCssClassSet, () => ({
    __proto__: dart.getFields(css_class_set.ElementCssClassSet.__proto__),
    [_element$]: dart.finalFieldType(dom.Element)
  }));
  css_class_set.CssClassSet = class CssClassSet extends core.Object {
    [Symbol.iterator]() {
      return new dart.JsIterator(this[$iterator]);
    }
  };
  (css_class_set.CssClassSet.new = function() {
    ;
  }).prototype = css_class_set.CssClassSet.prototype;
  dart.addTypeTests(css_class_set.CssClassSet);
  dart.addTypeCaches(css_class_set.CssClassSet);
  css_class_set.CssClassSet[dart.implements] = () => [core.Set$(core.String)];
  dart.setLibraryUri(css_class_set.CssClassSet, I[1]);
  var namespaceUri$ = dart.privateName(dom, "Element.namespaceUri");
  var localName$ = dart.privateName(dom, "Element.localName");
  var endSourceSpan = dart.privateName(dom, "Element.endSourceSpan");
  var _outerHtml = dart.privateName(dom, "_outerHtml");
  var _innerHtml = dart.privateName(dom, "_innerHtml");
  var _addInnerHtml = dart.privateName(dom, "_addInnerHtml");
  var _addOuterHtml = dart.privateName(dom, "_addOuterHtml");
  var _clone = dart.privateName(dom, "_clone");
  var parentNode = dart.privateName(dom, "Node.parentNode");
  var attributes = dart.privateName(dom, "Node.attributes");
  var sourceSpan = dart.privateName(dom, "Node.sourceSpan");
  var __Node_nodes = dart.privateName(dom, "_#Node#nodes");
  var __Node_nodes_isSet = dart.privateName(dom, "_#Node#nodes#isSet");
  var _elements = dart.privateName(dom, "_elements");
  var _attributeSpans = dart.privateName(dom, "_attributeSpans");
  var _attributeValueSpans = dart.privateName(dom, "_attributeValueSpans");
  var _ensureAttributeSpans = dart.privateName(dom, "_ensureAttributeSpans");
  dom.Node = class Node extends core.Object {
    get parentNode() {
      return this[parentNode];
    }
    set parentNode(value) {
      this[parentNode] = value;
    }
    get attributes() {
      return this[attributes];
    }
    set attributes(value) {
      this[attributes] = value;
    }
    get sourceSpan() {
      return this[sourceSpan];
    }
    set sourceSpan(value) {
      this[sourceSpan] = value;
    }
    get parent() {
      let parentNode = this.parentNode;
      return dom.Element.is(parentNode) ? parentNode : null;
    }
    get nodes() {
      let t1, t0;
      t0 = this[__Node_nodes];
      return t0 == null ? (t1 = new dom.NodeList.__(this), this[__Node_nodes] == null ? this[__Node_nodes] = t1 : dart.throw(new _internal.LateError.fieldADI("nodes"))) : t0;
    }
    get attributeSpans() {
      this[_ensureAttributeSpans]();
      return this[_attributeSpans];
    }
    get attributeValueSpans() {
      this[_ensureAttributeSpans]();
      return this[_attributeValueSpans];
    }
    get children() {
      let t0;
      t0 = this[_elements];
      return t0 == null ? this[_elements] = new dom.FilteredElementList.new(this) : t0;
    }
    get [_outerHtml]() {
      let str = new core.StringBuffer.new();
      this[_addOuterHtml](str);
      return str.toString();
    }
    get [_innerHtml]() {
      let str = new core.StringBuffer.new();
      this[_addInnerHtml](str);
      return str.toString();
    }
    get text() {
      return null;
    }
    set text(value) {
    }
    append(node) {
      return this.nodes.add(node);
    }
    get firstChild() {
      return this.nodes[$isNotEmpty] ? this.nodes._get(0) : null;
    }
    [_addInnerHtml](str) {
      for (let child of this.nodes) {
        child[_addOuterHtml](str);
      }
    }
    remove() {
      let t0;
      t0 = this.parentNode;
      t0 == null ? null : t0.nodes.remove(this);
      return this;
    }
    insertBefore(node, refNode) {
      if (refNode == null) {
        this.nodes.add(node);
      } else {
        this.nodes.insert(this.nodes[$indexOf](refNode), node);
      }
    }
    replaceWith(otherNode) {
      if (this.parentNode == null) {
        dart.throw(new core.UnsupportedError.new("Node must have a parent to replace it."));
      }
      dart.nullCheck(this.parentNode).nodes._set(dart.nullCheck(this.parentNode).nodes[$indexOf](this), otherNode);
      return this;
    }
    hasContent() {
      return this.nodes[$isNotEmpty];
    }
    reparentChildren(newParent) {
      newParent.nodes.addAll(this.nodes);
      this.nodes.clear();
    }
    hasChildNodes() {
      return this.nodes[$isNotEmpty];
    }
    contains(node) {
      return this.nodes[$contains](node);
    }
    [_ensureAttributeSpans]() {
      if (this[_attributeSpans] != null) return;
      let attributeSpans = this[_attributeSpans] = new (T.LinkedMapOfObject$FileSpan()).new();
      let attributeValueSpans = this[_attributeValueSpans] = new (T.LinkedMapOfObject$FileSpan()).new();
      if (this.sourceSpan == null) return;
      let tokenizer = new tokenizer$.HtmlTokenizer.new(dart.nullCheck(this.sourceSpan).text, {generateSpans: true, attributeSpans: true});
      tokenizer.moveNext();
      let token = token$.StartTagToken.as(tokenizer.current);
      if (token.attributeSpans == null) return;
      for (let attr of dart.nullCheck(token.attributeSpans)) {
        let offset = dart.nullCheck(this.sourceSpan).start.offset;
        let name = dart.nullCheck(attr.name);
        attributeSpans[$_set](name, dart.nullCheck(this.sourceSpan).file.span(offset + attr.start, offset + attr.end));
        if (attr.startValue != null) {
          attributeValueSpans[$_set](name, dart.nullCheck(this.sourceSpan).file.span(offset + dart.nullCheck(attr.startValue), offset + attr.endValue));
        }
      }
    }
    [_clone](T, shallowClone, deep) {
      if (deep) {
        for (let child of this.nodes) {
          shallowClone.append(child.clone(true));
        }
      }
      return shallowClone;
    }
  };
  (dom.Node.__ = function() {
    this[parentNode] = null;
    this[attributes] = new (T.LinkedMapOfObject$String()).new();
    this[__Node_nodes] = null;
    this[__Node_nodes_isSet] = false;
    this[_elements] = null;
    this[sourceSpan] = null;
    this[_attributeSpans] = null;
    this[_attributeValueSpans] = null;
    ;
  }).prototype = dom.Node.prototype;
  dart.addTypeTests(dom.Node);
  dart.addTypeCaches(dom.Node);
  dart.setMethodSignature(dom.Node, () => ({
    __proto__: dart.getMethods(dom.Node.__proto__),
    append: dart.fnType(dart.void, [dom.Node]),
    [_addInnerHtml]: dart.fnType(dart.void, [core.StringBuffer]),
    remove: dart.fnType(dom.Node, []),
    insertBefore: dart.fnType(dart.void, [dom.Node, dart.nullable(dom.Node)]),
    replaceWith: dart.fnType(dom.Node, [dom.Node]),
    hasContent: dart.fnType(core.bool, []),
    reparentChildren: dart.fnType(dart.void, [dom.Node]),
    hasChildNodes: dart.fnType(core.bool, []),
    contains: dart.fnType(core.bool, [dom.Node]),
    [_ensureAttributeSpans]: dart.fnType(dart.void, []),
    [_clone]: dart.gFnType(T => [T, [T, core.bool]], T => [dom.Node])
  }));
  dart.setGetterSignature(dom.Node, () => ({
    __proto__: dart.getGetters(dom.Node.__proto__),
    parent: dart.nullable(dom.Element),
    nodes: dom.NodeList,
    attributeSpans: dart.nullable(collection.LinkedHashMap$(core.Object, file.FileSpan)),
    attributeValueSpans: dart.nullable(collection.LinkedHashMap$(core.Object, file.FileSpan)),
    children: core.List$(dom.Element),
    [_outerHtml]: core.String,
    [_innerHtml]: core.String,
    text: dart.nullable(core.String),
    firstChild: dart.nullable(dom.Node)
  }));
  dart.setSetterSignature(dom.Node, () => ({
    __proto__: dart.getSetters(dom.Node.__proto__),
    text: dart.nullable(core.String)
  }));
  dart.setLibraryUri(dom.Node, I[2]);
  dart.setFieldSignature(dom.Node, () => ({
    __proto__: dart.getFields(dom.Node.__proto__),
    parentNode: dart.fieldType(dart.nullable(dom.Node)),
    attributes: dart.fieldType(collection.LinkedHashMap$(core.Object, core.String)),
    [__Node_nodes]: dart.fieldType(dart.nullable(dom.NodeList)),
    [__Node_nodes_isSet]: dart.fieldType(core.bool),
    [_elements]: dart.fieldType(dart.nullable(core.List$(dom.Element))),
    sourceSpan: dart.fieldType(dart.nullable(file.FileSpan)),
    [_attributeSpans]: dart.fieldType(dart.nullable(collection.LinkedHashMap$(core.Object, file.FileSpan))),
    [_attributeValueSpans]: dart.fieldType(dart.nullable(collection.LinkedHashMap$(core.Object, file.FileSpan)))
  }));
  dart.defineLazy(dom.Node, {
    /*dom.Node.ATTRIBUTE_NODE*/get ATTRIBUTE_NODE() {
      return 2;
    },
    /*dom.Node.CDATA_SECTION_NODE*/get CDATA_SECTION_NODE() {
      return 4;
    },
    /*dom.Node.COMMENT_NODE*/get COMMENT_NODE() {
      return 8;
    },
    /*dom.Node.DOCUMENT_FRAGMENT_NODE*/get DOCUMENT_FRAGMENT_NODE() {
      return 11;
    },
    /*dom.Node.DOCUMENT_NODE*/get DOCUMENT_NODE() {
      return 9;
    },
    /*dom.Node.DOCUMENT_TYPE_NODE*/get DOCUMENT_TYPE_NODE() {
      return 10;
    },
    /*dom.Node.ELEMENT_NODE*/get ELEMENT_NODE() {
      return 1;
    },
    /*dom.Node.ENTITY_NODE*/get ENTITY_NODE() {
      return 6;
    },
    /*dom.Node.ENTITY_REFERENCE_NODE*/get ENTITY_REFERENCE_NODE() {
      return 5;
    },
    /*dom.Node.NOTATION_NODE*/get NOTATION_NODE() {
      return 12;
    },
    /*dom.Node.PROCESSING_INSTRUCTION_NODE*/get PROCESSING_INSTRUCTION_NODE() {
      return 7;
    },
    /*dom.Node.TEXT_NODE*/get TEXT_NODE() {
      return 3;
    }
  }, false);
  dom._ParentNode = class _ParentNode extends core.Object {
    querySelector(selector) {
      return query_selector.querySelector(this, selector);
    }
    querySelectorAll(selector) {
      return query_selector.querySelectorAll(this, selector);
    }
  };
  (dom._ParentNode.new = function() {
    ;
  }).prototype = dom._ParentNode.prototype;
  dart.addTypeTests(dom._ParentNode);
  dart.addTypeCaches(dom._ParentNode);
  dom._ParentNode[dart.implements] = () => [dom.Node];
  dart.setMethodSignature(dom._ParentNode, () => ({
    __proto__: dart.getMethods(dom._ParentNode.__proto__),
    querySelector: dart.fnType(dart.nullable(dom.Element), [core.String]),
    querySelectorAll: dart.fnType(core.List$(dom.Element), [core.String])
  }));
  dart.setLibraryUri(dom._ParentNode, I[2]);
  dom._ElementAndDocument = class _ElementAndDocument extends core.Object {
    getElementsByTagName(localName) {
      return this.querySelectorAll(localName);
    }
    getElementsByClassName(classNames) {
      return this.querySelectorAll(classNames[$splitMapJoin](" ", {onNonMatch: dart.fn(m => m[$isNotEmpty] ? "." + m : m, T.StringToString()), onMatch: dart.fn(m => "", T.MatchToString())}));
    }
  };
  (dom._ElementAndDocument.new = function() {
    ;
  }).prototype = dom._ElementAndDocument.prototype;
  dart.addTypeTests(dom._ElementAndDocument);
  dart.addTypeCaches(dom._ElementAndDocument);
  dom._ElementAndDocument[dart.implements] = () => [dom._ParentNode];
  dart.setMethodSignature(dom._ElementAndDocument, () => ({
    __proto__: dart.getMethods(dom._ElementAndDocument.__proto__),
    getElementsByTagName: dart.fnType(core.List$(dom.Element), [core.String]),
    getElementsByClassName: dart.fnType(core.List$(dom.Element), [core.String])
  }));
  dart.setLibraryUri(dom._ElementAndDocument, I[2]);
  const Node__ParentNode$36 = class Node__ParentNode extends dom.Node {};
  (Node__ParentNode$36.__ = function() {
    Node__ParentNode$36.__proto__.__.call(this);
  }).prototype = Node__ParentNode$36.prototype;
  dart.applyMixin(Node__ParentNode$36, dom._ParentNode);
  const Node__ElementAndDocument$36 = class Node__ElementAndDocument extends Node__ParentNode$36 {};
  (Node__ElementAndDocument$36.__ = function() {
    Node__ElementAndDocument$36.__proto__.__.call(this);
  }).prototype = Node__ElementAndDocument$36.prototype;
  dart.applyMixin(Node__ElementAndDocument$36, dom._ElementAndDocument);
  dom.Element = class Element extends Node__ElementAndDocument$36 {
    get namespaceUri() {
      return this[namespaceUri$];
    }
    set namespaceUri(value) {
      super.namespaceUri = value;
    }
    get localName() {
      return this[localName$];
    }
    set localName(value) {
      super.localName = value;
    }
    get endSourceSpan() {
      return this[endSourceSpan];
    }
    set endSourceSpan(value) {
      this[endSourceSpan] = value;
    }
    static html(html) {
      let parentTag = "div";
      let tag = null;
      let match = dom.Element._startTagRegexp.firstMatch(html);
      if (match != null) {
        tag = dart.nullCheck(match.group(1))[$toLowerCase]();
        if (dom.Element._customParentTagMap[$containsKey](tag)) {
          parentTag = dart.nullCheck(dom.Element._customParentTagMap[$_get](tag));
        }
      }
      let fragment = parser$.parseFragment(html, {container: parentTag});
      let element = null;
      if (fragment.children[$length] === 1) {
        element = fragment.children[$_get](0);
      } else if (parentTag === "html" && fragment.children[$length] === 2) {
        element = fragment.children[$_get](tag === "head" ? 0 : 1);
      } else {
        dart.throw(new core.ArgumentError.new("HTML had " + dart.str(fragment.children[$length]) + " " + "top level elements but 1 expected"));
      }
      element.remove();
      return element;
    }
    get nodeType() {
      return 1;
    }
    get previousElementSibling() {
      if (this.parentNode == null) return null;
      let siblings = dart.nullCheck(this.parentNode).nodes;
      for (let i = siblings[$indexOf](this) - 1; i >= 0; i = i - 1) {
        let s = siblings._get(i);
        if (dom.Element.is(s)) return s;
      }
      return null;
    }
    get nextElementSibling() {
      let parentNode = this.parentNode;
      if (parentNode == null) return null;
      let siblings = parentNode.nodes;
      for (let i = siblings[$indexOf](this) + 1; i < siblings.length; i = i + 1) {
        let s = siblings._get(i);
        if (dom.Element.is(s)) return s;
      }
      return null;
    }
    toString() {
      let prefix = constants.Namespaces.getPrefix(this.namespaceUri);
      return "<" + (prefix == null ? "" : dart.str(prefix) + " ") + dart.str(this.localName) + ">";
    }
    get text() {
      return dom._getText(this);
    }
    set text(value) {
      return dom._setText(this, value);
    }
    get outerHtml() {
      return this[_outerHtml];
    }
    get innerHtml() {
      return this[_innerHtml];
    }
    set innerHtml(value) {
      this.nodes.clear();
      this.nodes.addAll(parser$.parseFragment(value, {container: dart.nullCheck(this.localName)}).nodes);
    }
    [_addOuterHtml](str) {
      str.write("<");
      str.write(dom.Element._getSerializationPrefix(this.namespaceUri));
      str.write(this.localName);
      if (this.attributes[$isNotEmpty]) {
        this.attributes[$forEach](dart.fn((key, v) => {
          str.write(" ");
          str.write(key);
          str.write("=\"");
          str.write(dom_parsing.htmlSerializeEscape(v, {attributeMode: true}));
          str.write("\"");
        }, T.ObjectAndStringTovoid()));
      }
      str.write(">");
      if (this.nodes[$isNotEmpty]) {
        if (this.localName === "pre" || this.localName === "textarea" || this.localName === "listing") {
          let first = this.nodes._get(0);
          if (dom.Text.is(first) && first.data[$startsWith]("\n")) {
            str.write("\n");
          }
        }
        this[_addInnerHtml](str);
      }
      if (!dom_parsing.isVoidElement(this.localName)) str.write("</" + dart.str(this.localName) + ">");
    }
    static _getSerializationPrefix(uri) {
      if (uri == null || uri === "http://www.w3.org/1999/xhtml" || uri === constants.Namespaces.mathml || uri === "http://www.w3.org/2000/svg") {
        return "";
      }
      let prefix = constants.Namespaces.getPrefix(uri);
      return prefix == null ? "" : dart.str(prefix) + ":";
    }
    clone(deep) {
      let t0;
      let result = (t0 = new dom.Element.__(this.localName, this.namespaceUri), (() => {
        t0.attributes = T.LinkedHashMapOfObject$String().from(this.attributes);
        return t0;
      })());
      return this[_clone](dom.Element, result, deep);
    }
    get id() {
      let t0;
      let result = this.attributes[$_get]("id");
      t0 = result;
      return t0 == null ? "" : t0;
    }
    set id(value) {
      this.attributes[$_set]("id", value);
    }
    get className() {
      let t0;
      let result = this.attributes[$_get]("class");
      t0 = result;
      return t0 == null ? "" : t0;
    }
    set className(value) {
      this.attributes[$_set]("class", value);
    }
    get classes() {
      return new css_class_set.ElementCssClassSet.new(this);
    }
  };
  (dom.Element.__ = function(localName, namespaceUri = null) {
    this[endSourceSpan] = null;
    this[localName$] = localName;
    this[namespaceUri$] = namespaceUri;
    dom.Element.__proto__.__.call(this);
    ;
  }).prototype = dom.Element.prototype;
  (dom.Element.tag = function(localName) {
    this[endSourceSpan] = null;
    this[localName$] = localName;
    this[namespaceUri$] = "http://www.w3.org/1999/xhtml";
    dom.Element.__proto__.__.call(this);
    ;
  }).prototype = dom.Element.prototype;
  dart.addTypeTests(dom.Element);
  dart.addTypeCaches(dom.Element);
  dart.setMethodSignature(dom.Element, () => ({
    __proto__: dart.getMethods(dom.Element.__proto__),
    [_addOuterHtml]: dart.fnType(dart.void, [core.StringBuffer]),
    clone: dart.fnType(dom.Element, [core.bool])
  }));
  dart.setGetterSignature(dom.Element, () => ({
    __proto__: dart.getGetters(dom.Element.__proto__),
    nodeType: core.int,
    previousElementSibling: dart.nullable(dom.Element),
    nextElementSibling: dart.nullable(dom.Element),
    text: core.String,
    outerHtml: core.String,
    innerHtml: core.String,
    id: core.String,
    className: core.String,
    classes: css_class_set.CssClassSet
  }));
  dart.setSetterSignature(dom.Element, () => ({
    __proto__: dart.getSetters(dom.Element.__proto__),
    innerHtml: core.String,
    id: core.String,
    className: core.String
  }));
  dart.setLibraryUri(dom.Element, I[2]);
  dart.setFieldSignature(dom.Element, () => ({
    __proto__: dart.getFields(dom.Element.__proto__),
    namespaceUri: dart.finalFieldType(dart.nullable(core.String)),
    localName: dart.finalFieldType(dart.nullable(core.String)),
    endSourceSpan: dart.fieldType(dart.nullable(file.FileSpan))
  }));
  dart.defineExtensionMethods(dom.Element, ['toString']);
  dart.defineLazy(dom.Element, {
    /*dom.Element._startTagRegexp*/get _startTagRegexp() {
      return core.RegExp.new("<(\\w+)");
    },
    /*dom.Element._customParentTagMap*/get _customParentTagMap() {
      return C[0] || CT.C0;
    }
  }, false);
  treebuilder.ActiveFormattingElements = class ActiveFormattingElements extends list_proxy.ListProxy$(dart.nullable(dom.Element)) {
    add(node) {
      T.ElementN().as(node);
      let equalCount = 0;
      if (node != null) {
        for (let element of this[$reversed]) {
          if (element == null) {
            break;
          }
          if (treebuilder._nodesEqual(element, node)) {
            equalCount = equalCount + 1;
          }
          if (equalCount === 3) {
            this.remove(element);
            break;
          }
        }
      }
      super.add(node);
    }
  };
  (treebuilder.ActiveFormattingElements.new = function() {
    treebuilder.ActiveFormattingElements.__proto__.new.call(this);
    ;
  }).prototype = treebuilder.ActiveFormattingElements.prototype;
  dart.addTypeTests(treebuilder.ActiveFormattingElements);
  dart.addTypeCaches(treebuilder.ActiveFormattingElements);
  dart.setLibraryUri(treebuilder.ActiveFormattingElements, I[3]);
  dart.defineExtensionMethods(treebuilder.ActiveFormattingElements, ['add']);
  var defaultNamespace = dart.privateName(treebuilder, "TreeBuilder.defaultNamespace");
  var openElements = dart.privateName(treebuilder, "TreeBuilder.openElements");
  var activeFormattingElements = dart.privateName(treebuilder, "TreeBuilder.activeFormattingElements");
  var headPointer = dart.privateName(treebuilder, "TreeBuilder.headPointer");
  var formPointer = dart.privateName(treebuilder, "TreeBuilder.formPointer");
  var insertFromTable = dart.privateName(treebuilder, "TreeBuilder.insertFromTable");
  var __TreeBuilder_document = dart.privateName(treebuilder, "_#TreeBuilder#document");
  var Pair_second = dart.privateName(utils, "Pair.second");
  var Pair_first = dart.privateName(utils, "Pair.first");
  treebuilder.TreeBuilder = class TreeBuilder extends core.Object {
    get defaultNamespace() {
      return this[defaultNamespace];
    }
    set defaultNamespace(value) {
      super.defaultNamespace = value;
    }
    get openElements() {
      return this[openElements];
    }
    set openElements(value) {
      super.openElements = value;
    }
    get activeFormattingElements() {
      return this[activeFormattingElements];
    }
    set activeFormattingElements(value) {
      super.activeFormattingElements = value;
    }
    get headPointer() {
      return this[headPointer];
    }
    set headPointer(value) {
      this[headPointer] = value;
    }
    get formPointer() {
      return this[formPointer];
    }
    set formPointer(value) {
      this[formPointer] = value;
    }
    get insertFromTable() {
      return this[insertFromTable];
    }
    set insertFromTable(value) {
      this[insertFromTable] = value;
    }
    get document() {
      let t0;
      t0 = this[__TreeBuilder_document];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("document")) : t0;
    }
    set document(t0) {
      this[__TreeBuilder_document] = t0;
    }
    reset() {
      this.openElements[$clear]();
      this.activeFormattingElements[$clear]();
      this.headPointer = null;
      this.formPointer = null;
      this.insertFromTable = false;
      this.document = new dom.Document.new();
    }
    elementInScope(target, opts) {
      let variant = opts && 'variant' in opts ? opts.variant : null;
      let exactNode = dom.Node.is(target);
      let listElements1 = constants.scopingElements;
      let listElements2 = C[1] || CT.C1;
      let invert = false;
      if (variant != null) {
        switch (variant) {
          case "button":
          {
            listElements2 = C[2] || CT.C2;
            break;
          }
          case "list":
          {
            listElements2 = C[4] || CT.C4;
            break;
          }
          case "table":
          {
            listElements1 = C[7] || CT.C7;
            break;
          }
          case "select":
          {
            listElements1 = C[10] || CT.C10;
            invert = true;
            break;
          }
          default:
          {
            dart.throw(new core.StateError.new("We should never reach this point"));
          }
        }
      }
      for (let node of this.openElements[$reversed]) {
        if (!exactNode && core.identical(node.localName, target) || exactNode && node[$_equals](target)) {
          return true;
        } else if (invert !== (listElements1[$contains](parser$.getElementNameTuple(node)) || listElements2[$contains](parser$.getElementNameTuple(node)))) {
          return false;
        }
      }
      dart.throw(new core.StateError.new("We should never reach this point"));
    }
    reconstructActiveFormattingElements() {
      let t1;
      if (this.activeFormattingElements[$isEmpty]) {
        return;
      }
      let i = this.activeFormattingElements.length - 1;
      let entry = this.activeFormattingElements._get(i);
      if (entry == null || this.openElements[$contains](entry)) {
        return;
      }
      while (entry != null && !this.openElements[$contains](entry)) {
        if (i === 0) {
          i = -1;
          break;
        }
        i = i - 1;
        entry = this.activeFormattingElements._get(i);
      }
      while (true) {
        i = i + 1;
        entry = this.activeFormattingElements._get(i);
        let cloneToken = (t1 = new token$.StartTagToken.new(dart.nullCheck(entry).localName, {namespace: entry.namespaceUri, data: T.LinkedHashMapOfObject$String().from(entry.attributes)}), (() => {
          t1.span = entry.sourceSpan;
          return t1;
        })());
        let element = this.insertElement(cloneToken);
        this.activeFormattingElements._set(i, element);
        if (element[$_equals](this.activeFormattingElements[$last])) {
          break;
        }
      }
    }
    clearActiveFormattingElements() {
      let entry = this.activeFormattingElements[$removeLast]();
      while (this.activeFormattingElements[$isNotEmpty] && entry != null) {
        entry = this.activeFormattingElements[$removeLast]();
      }
    }
    elementInActiveFormattingElements(name) {
      for (let item of this.activeFormattingElements[$reversed]) {
        if (item == null) {
          break;
        } else if (item.localName == name) {
          return item;
        }
      }
      return null;
    }
    insertRoot(token) {
      let element = this.createElement(token);
      this.openElements[$add](element);
      this.document.nodes.add(element);
    }
    insertDoctype(token) {
      let t1;
      let doctype = (t1 = new dom.DocumentType.new(token.name, token.publicId, token.systemId), (() => {
        t1.sourceSpan = token.span;
        return t1;
      })());
      this.document.nodes.add(doctype);
    }
    insertComment(token, parent = null) {
      let t1;
      parent == null ? parent = this.openElements[$last] : null;
      parent.nodes.add((t1 = new dom.Comment.new(token.data), (() => {
        t1.sourceSpan = token.span;
        return t1;
      })()));
    }
    createElement(token) {
      let t1, t1$;
      let name = token.name;
      let namespace = (t1 = token.namespace, t1 == null ? this.defaultNamespace : t1);
      let element = (t1$ = this.document.createElementNS(namespace, name), (() => {
        t1$.attributes = token.data;
        t1$.sourceSpan = token.span;
        return t1$;
      })());
      return element;
    }
    insertElement(token) {
      if (this.insertFromTable) return this.insertElementTable(token);
      return this.insertElementNormal(token);
    }
    insertElementNormal(token) {
      let t1, t1$;
      let name = token.name;
      let namespace = (t1 = token.namespace, t1 == null ? this.defaultNamespace : t1);
      let element = (t1$ = this.document.createElementNS(namespace, name), (() => {
        t1$.attributes = token.data;
        t1$.sourceSpan = token.span;
        return t1$;
      })());
      this.openElements[$last].nodes.add(element);
      this.openElements[$add](element);
      return element;
    }
    insertElementTable(token) {
      let element = this.createElement(token);
      if (!constants.tableInsertModeElements[$contains](this.openElements[$last].localName)) {
        return this.insertElementNormal(token);
      } else {
        let nodePos = this.getTableMisnestedNodePosition();
        if (nodePos[$_get](1) == null) {
          dart.nullCheck(nodePos[$_get](0)).nodes.add(element);
        } else {
          dart.nullCheck(nodePos[$_get](0)).insertBefore(element, nodePos[$_get](1));
        }
        this.openElements[$add](element);
      }
      return element;
    }
    insertText(data, span) {
      let parent = this.openElements[$last];
      if (!this.insertFromTable || this.insertFromTable && !constants.tableInsertModeElements[$contains](this.openElements[$last].localName)) {
        treebuilder.TreeBuilder._insertText(parent, data, span);
      } else {
        let nodePos = this.getTableMisnestedNodePosition();
        treebuilder.TreeBuilder._insertText(dart.nullCheck(nodePos[$_get](0)), data, span, T.ElementN().as(nodePos[$_get](1)));
      }
    }
    static _insertText(parent, data, span, refNode = null) {
      let t1, t1$;
      let nodes = parent.nodes;
      if (refNode == null) {
        if (nodes[$isNotEmpty] && dom.Text.is(nodes[$last])) {
          let last = dom.Text.as(nodes[$last]);
          last.appendData(data);
          if (span != null) {
            last.sourceSpan = span.file.span(dart.nullCheck(last.sourceSpan).start.offset, span.end.offset);
          }
        } else {
          nodes.add((t1 = new dom.Text.new(data), (() => {
            t1.sourceSpan = span;
            return t1;
          })()));
        }
      } else {
        let index = nodes[$indexOf](refNode);
        if (index > 0 && dom.Text.is(nodes._get(index - 1))) {
          let last = dom.Text.as(nodes._get(index - 1));
          last.appendData(data);
        } else {
          nodes.insert(index, (t1$ = new dom.Text.new(data), (() => {
            t1$.sourceSpan = span;
            return t1$;
          })()));
        }
      }
    }
    getTableMisnestedNodePosition() {
      let lastTable = null;
      let fosterParent = null;
      let insertBefore = null;
      for (let elm of this.openElements[$reversed]) {
        if (elm.localName === "table") {
          lastTable = elm;
          break;
        }
      }
      if (lastTable != null) {
        if (lastTable.parentNode != null) {
          fosterParent = lastTable.parentNode;
          insertBefore = lastTable;
        } else {
          fosterParent = this.openElements[$_get](this.openElements[$indexOf](lastTable) - 1);
        }
      } else {
        fosterParent = this.openElements[$_get](0);
      }
      return T.JSArrayOfNodeN().of([fosterParent, insertBefore]);
    }
    generateImpliedEndTags(exclude = null) {
      let name = this.openElements[$last].localName;
      if (name != exclude && (C[13] || CT.C13)[$contains](name)) {
        this.openElements[$removeLast]();
        this.generateImpliedEndTags(exclude);
      }
    }
    getDocument() {
      return this.document;
    }
    getFragment() {
      let fragment = new dom.DocumentFragment.new();
      this.openElements[$_get](0).reparentChildren(fragment);
      return fragment;
    }
  };
  (treebuilder.TreeBuilder.new = function(namespaceHTMLElements) {
    this[__TreeBuilder_document] = null;
    this[openElements] = T.JSArrayOfElement().of([]);
    this[activeFormattingElements] = new treebuilder.ActiveFormattingElements.new();
    this[headPointer] = null;
    this[formPointer] = null;
    this[insertFromTable] = false;
    this[defaultNamespace] = namespaceHTMLElements ? "http://www.w3.org/1999/xhtml" : null;
    this.reset();
  }).prototype = treebuilder.TreeBuilder.prototype;
  dart.addTypeTests(treebuilder.TreeBuilder);
  dart.addTypeCaches(treebuilder.TreeBuilder);
  dart.setMethodSignature(treebuilder.TreeBuilder, () => ({
    __proto__: dart.getMethods(treebuilder.TreeBuilder.__proto__),
    reset: dart.fnType(dart.void, []),
    elementInScope: dart.fnType(core.bool, [dart.dynamic], {variant: dart.nullable(core.String)}, {}),
    reconstructActiveFormattingElements: dart.fnType(dart.void, []),
    clearActiveFormattingElements: dart.fnType(dart.void, []),
    elementInActiveFormattingElements: dart.fnType(dart.nullable(dom.Element), [dart.nullable(core.String)]),
    insertRoot: dart.fnType(dart.void, [token$.StartTagToken]),
    insertDoctype: dart.fnType(dart.void, [token$.DoctypeToken]),
    insertComment: dart.fnType(dart.void, [token$.StringToken], [dart.nullable(dom.Node)]),
    createElement: dart.fnType(dom.Element, [token$.StartTagToken]),
    insertElement: dart.fnType(dom.Element, [token$.StartTagToken]),
    insertElementNormal: dart.fnType(dom.Element, [token$.StartTagToken]),
    insertElementTable: dart.fnType(dom.Element, [token$.StartTagToken]),
    insertText: dart.fnType(dart.void, [core.String, dart.nullable(file.FileSpan)]),
    getTableMisnestedNodePosition: dart.fnType(core.List$(dart.nullable(dom.Node)), []),
    generateImpliedEndTags: dart.fnType(dart.void, [], [dart.nullable(core.String)]),
    getDocument: dart.fnType(dom.Document, []),
    getFragment: dart.fnType(dom.DocumentFragment, [])
  }));
  dart.setGetterSignature(treebuilder.TreeBuilder, () => ({
    __proto__: dart.getGetters(treebuilder.TreeBuilder.__proto__),
    document: dom.Document
  }));
  dart.setSetterSignature(treebuilder.TreeBuilder, () => ({
    __proto__: dart.getSetters(treebuilder.TreeBuilder.__proto__),
    document: dom.Document
  }));
  dart.setLibraryUri(treebuilder.TreeBuilder, I[3]);
  dart.setFieldSignature(treebuilder.TreeBuilder, () => ({
    __proto__: dart.getFields(treebuilder.TreeBuilder.__proto__),
    defaultNamespace: dart.finalFieldType(dart.nullable(core.String)),
    [__TreeBuilder_document]: dart.fieldType(dart.nullable(dom.Document)),
    openElements: dart.finalFieldType(core.List$(dom.Element)),
    activeFormattingElements: dart.finalFieldType(treebuilder.ActiveFormattingElements),
    headPointer: dart.fieldType(dart.nullable(dom.Node)),
    formPointer: dart.fieldType(dart.nullable(dom.Element)),
    insertFromTable: dart.fieldType(core.bool)
  }));
  treebuilder._mapEquals = function _mapEquals(a, b) {
    if (a[$length] !== b[$length]) return false;
    if (a[$isEmpty]) return true;
    for (let keyA of a[$keys]) {
      let valB = b[$_get](keyA);
      if (valB == null && !b[$containsKey](keyA)) {
        return false;
      }
      if (!dart.equals(a[$_get](keyA), valB)) {
        return false;
      }
    }
    return true;
  };
  treebuilder._nodesEqual = function _nodesEqual(node1, node2) {
    return parser$.getElementNameTuple(node1)._equals(parser$.getElementNameTuple(node2)) && treebuilder._mapEquals(node1.attributes, node2.attributes);
  };
  var stream = dart.privateName(tokenizer$, "HtmlTokenizer.stream");
  var lowercaseElementName$ = dart.privateName(tokenizer$, "HtmlTokenizer.lowercaseElementName");
  var lowercaseAttrName$ = dart.privateName(tokenizer$, "HtmlTokenizer.lowercaseAttrName");
  var generateSpans$ = dart.privateName(tokenizer$, "HtmlTokenizer.generateSpans");
  var attributeSpans$ = dart.privateName(tokenizer$, "HtmlTokenizer.attributeSpans");
  var parser$0 = dart.privateName(tokenizer$, "HtmlTokenizer.parser");
  var tokenQueue = dart.privateName(tokenizer$, "HtmlTokenizer.tokenQueue");
  var currentToken = dart.privateName(tokenizer$, "HtmlTokenizer.currentToken");
  var __HtmlTokenizer_state = dart.privateName(tokenizer$, "_#HtmlTokenizer#state");
  var _buffer = dart.privateName(tokenizer$, "_buffer");
  var __HtmlTokenizer__lastOffset = dart.privateName(tokenizer$, "_#HtmlTokenizer#_lastOffset");
  var _attributes = dart.privateName(tokenizer$, "_attributes");
  var _attributeNames = dart.privateName(tokenizer$, "_attributeNames");
  var _current = dart.privateName(tokenizer$, "_current");
  var _attributeName = dart.privateName(tokenizer$, "_attributeName");
  var _attributeValue = dart.privateName(tokenizer$, "_attributeValue");
  var _lastOffset = dart.privateName(tokenizer$, "_lastOffset");
  var _markAttributeEnd = dart.privateName(tokenizer$, "_markAttributeEnd");
  var _markAttributeValueStart = dart.privateName(tokenizer$, "_markAttributeValueStart");
  var _markAttributeValueEnd = dart.privateName(tokenizer$, "_markAttributeValueEnd");
  var _markAttributeNameEnd = dart.privateName(tokenizer$, "_markAttributeNameEnd");
  var _addAttribute = dart.privateName(tokenizer$, "_addAttribute");
  var _addToken = dart.privateName(tokenizer$, "_addToken");
  var _tokenIsAppropriate = dart.privateName(tokenizer$, "_tokenIsAppropriate");
  tokenizer$.HtmlTokenizer = class HtmlTokenizer extends core.Object {
    get stream() {
      return this[stream];
    }
    set stream(value) {
      super.stream = value;
    }
    get lowercaseElementName() {
      return this[lowercaseElementName$];
    }
    set lowercaseElementName(value) {
      super.lowercaseElementName = value;
    }
    get lowercaseAttrName() {
      return this[lowercaseAttrName$];
    }
    set lowercaseAttrName(value) {
      super.lowercaseAttrName = value;
    }
    get generateSpans() {
      return this[generateSpans$];
    }
    set generateSpans(value) {
      super.generateSpans = value;
    }
    get attributeSpans() {
      return this[attributeSpans$];
    }
    set attributeSpans(value) {
      super.attributeSpans = value;
    }
    get parser() {
      return this[parser$0];
    }
    set parser(value) {
      this[parser$0] = value;
    }
    get tokenQueue() {
      return this[tokenQueue];
    }
    set tokenQueue(value) {
      super.tokenQueue = value;
    }
    get currentToken() {
      return this[currentToken];
    }
    set currentToken(value) {
      this[currentToken] = value;
    }
    get state() {
      let t1;
      t1 = this[__HtmlTokenizer_state];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("state")) : t1;
    }
    set state(t1) {
      this[__HtmlTokenizer_state] = t1;
    }
    get [_lastOffset]() {
      let t2;
      t2 = this[__HtmlTokenizer__lastOffset];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_lastOffset")) : t2;
    }
    set [_lastOffset](t2) {
      this[__HtmlTokenizer__lastOffset] = t2;
    }
    get currentTagToken() {
      return token$.TagToken.as(this.currentToken);
    }
    get currentDoctypeToken() {
      return token$.DoctypeToken.as(this.currentToken);
    }
    get currentStringToken() {
      return token$.StringToken.as(this.currentToken);
    }
    get current() {
      return dart.nullCheck(this[_current]);
    }
    [_markAttributeEnd](offset) {
      dart.nullCheck(this[_attributes])[$last].value = dart.str(this[_attributeValue]);
      if (this.attributeSpans) dart.nullCheck(this[_attributes])[$last].end = this.stream.position + offset;
    }
    [_markAttributeValueStart](offset) {
      if (this.attributeSpans) dart.nullCheck(this[_attributes])[$last].startValue = this.stream.position + offset;
    }
    [_markAttributeValueEnd](offset) {
      if (this.attributeSpans) dart.nullCheck(this[_attributes])[$last].endValue = this.stream.position + offset;
      this[_markAttributeEnd](offset);
    }
    [_markAttributeNameEnd](offset) {
      return this[_markAttributeEnd](offset);
    }
    [_addAttribute](name) {
      this[_attributes] == null ? this[_attributes] = T.JSArrayOfTagAttribute().of([]) : null;
      this[_attributeName].clear();
      this[_attributeName].write(name);
      this[_attributeValue].clear();
      let attr = new token$.TagAttribute.new();
      dart.nullCheck(this[_attributes])[$add](attr);
      if (this.attributeSpans) attr.start = this.stream.position - name.length;
    }
    moveNext() {
      while (this.stream.errors[$isEmpty] && this.tokenQueue[$isEmpty]) {
        if (!this.state()) {
          this[_current] = null;
          return false;
        }
      }
      if (this.stream.errors[$isNotEmpty]) {
        this[_current] = new token$.ParseErrorToken.new(this.stream.errors.removeFirst());
      } else {
        if (!this.tokenQueue[$isNotEmpty]) dart.assertFailed(null, I[4], 136, 14, "tokenQueue.isNotEmpty");
        this[_current] = this.tokenQueue.removeFirst();
      }
      return true;
    }
    reset() {
      this[_lastOffset] = 0;
      this.tokenQueue.clear();
      this.currentToken = null;
      this[_buffer].clear();
      this[_attributes] = null;
      this[_attributeNames] = null;
      this.state = dart.bind(this, 'dataState');
    }
    [_addToken](token) {
      if (this.generateSpans && token.span == null) {
        let offset = this.stream.position;
        token.span = dart.nullCheck(this.stream.fileInfo).span(this[_lastOffset], offset);
        if (!token$.ParseErrorToken.is(token)) {
          this[_lastOffset] = offset;
        }
      }
      this.tokenQueue.add(token);
    }
    consumeNumberEntity(isHex) {
      let allowed = C[14] || CT.C14;
      let radix = 10;
      if (isHex) {
        allowed = C[15] || CT.C15;
        radix = 16;
      }
      let charStack = [];
      let c = this.stream.char();
      while (allowed(c) && c != constants.eof) {
        charStack[$add](c);
        c = this.stream.char();
      }
      let charAsInt = core.int.parse(charStack[$join](), {radix: radix});
      let char = constants.replacementCharacters[$_get](charAsInt);
      if (char != null) {
        this[_addToken](new token$.ParseErrorToken.new("illegal-codepoint-for-numeric-entity", {messageParams: new _js_helper.LinkedMap.from(["charAsInt", charAsInt])}));
      } else if (55296 <= charAsInt && charAsInt <= 57343 || charAsInt > 1114111) {
        char = "�";
        this[_addToken](new token$.ParseErrorToken.new("illegal-codepoint-for-numeric-entity", {messageParams: new _js_helper.LinkedMap.from(["charAsInt", charAsInt])}));
      } else {
        if (1 <= charAsInt && charAsInt <= 8 || 14 <= charAsInt && charAsInt <= 31 || 127 <= charAsInt && charAsInt <= 159 || 64976 <= charAsInt && charAsInt <= 65007 || (C[16] || CT.C16)[$contains](charAsInt)) {
          this[_addToken](new token$.ParseErrorToken.new("illegal-codepoint-for-numeric-entity", {messageParams: new _js_helper.LinkedMap.from(["charAsInt", charAsInt])}));
        }
        char = core.String.fromCharCodes(T.JSArrayOfint().of([charAsInt]));
      }
      if (c !== ";") {
        this[_addToken](new token$.ParseErrorToken.new("numeric-entity-without-semicolon"));
        this.stream.unget(c);
      }
      return char;
    }
    consumeEntity(opts) {
      let t3;
      let allowedChar = opts && 'allowedChar' in opts ? opts.allowedChar : null;
      let fromAttribute = opts && 'fromAttribute' in opts ? opts.fromAttribute : false;
      let output = "&";
      let charStack = T.JSArrayOfStringN().of([this.stream.char()]);
      if (constants.isWhitespace(charStack[$_get](0)) || charStack[$_get](0) === "<" || charStack[$_get](0) === "&" || charStack[$_get](0) == constants.eof || allowedChar == charStack[$_get](0)) {
        this.stream.unget(charStack[$_get](0));
      } else if (charStack[$_get](0) === "#") {
        let hex = false;
        charStack[$add](this.stream.char());
        if (charStack[$last] === "x" || charStack[$last] === "X") {
          hex = true;
          charStack[$add](this.stream.char());
        }
        if (hex && constants.isHexDigit(charStack[$last]) || !hex && constants.isDigit(charStack[$last])) {
          this.stream.unget(charStack[$last]);
          output = this.consumeNumberEntity(hex);
        } else {
          this[_addToken](new token$.ParseErrorToken.new("expected-numeric-entity"));
          this.stream.unget(charStack[$removeLast]());
          output = "&" + charStack[$join]();
        }
      } else {
        let filteredEntityList = (t3 = tokenizer$.entitiesByFirstChar[$_get](dart.nullCheck(charStack[$_get](0))), t3 == null ? C[17] || CT.C17 : t3);
        while (charStack[$last] != constants.eof) {
          let name = charStack[$join]();
          filteredEntityList = filteredEntityList[$where](dart.fn(e => e[$startsWith](name), T.StringTobool()))[$toList]();
          if (filteredEntityList[$isEmpty]) {
            break;
          }
          charStack[$add](this.stream.char());
        }
        let entityName = null;
        let entityLen = null;
        for (let t3$ = entityLen = charStack[$length] - 1; entityLen > 1; entityLen = entityLen - 1) {
          let possibleEntityName = charStack[$sublist](0, entityLen)[$join]();
          if (constants.entities[$containsKey](possibleEntityName)) {
            entityName = possibleEntityName;
            break;
          }
        }
        if (entityName != null) {
          let lastChar = entityName[$_get](entityName.length - 1);
          if (lastChar !== ";") {
            this[_addToken](new token$.ParseErrorToken.new("named-entity-without-semicolon"));
          }
          if (lastChar !== ";" && fromAttribute && (constants.isLetterOrDigit(charStack[$_get](entityLen)) || charStack[$_get](entityLen) === "=")) {
            this.stream.unget(charStack[$removeLast]());
            output = "&" + charStack[$join]();
          } else {
            output = constants.entities[$_get](entityName);
            this.stream.unget(charStack[$removeLast]());
            output = dart.str(output) + utils.slice(T.StringN(), charStack, entityLen)[$join]();
          }
        } else {
          this[_addToken](new token$.ParseErrorToken.new("expected-named-entity"));
          this.stream.unget(charStack[$removeLast]());
          output = "&" + charStack[$join]();
        }
      }
      if (fromAttribute) {
        this[_attributeValue].write(output);
      } else {
        let token = null;
        if (constants.isWhitespace(output)) {
          token = new token$.SpaceCharactersToken.new(output);
        } else {
          token = new token$.CharactersToken.new(output);
        }
        this[_addToken](token);
      }
    }
    processEntityInAttribute(allowedChar) {
      this.consumeEntity({allowedChar: allowedChar, fromAttribute: true});
    }
    emitCurrentToken() {
      let t4;
      let token = dart.nullCheck(this.currentToken);
      if (token$.TagToken.is(token)) {
        if (this.lowercaseElementName) {
          token.name = (t4 = token.name, t4 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t4));
        }
        if (token$.EndTagToken.is(token)) {
          if (this[_attributes] != null) {
            this[_addToken](new token$.ParseErrorToken.new("attributes-in-end-tag"));
          }
          if (token.selfClosing) {
            this[_addToken](new token$.ParseErrorToken.new("this-closing-flag-on-end-tag"));
          }
        } else if (token$.StartTagToken.is(token)) {
          token.data = new (T.LinkedMapOfObject$String()).new();
          if (this[_attributes] != null) {
            for (let attr of dart.nullCheck(this[_attributes])) {
              token.data[$putIfAbsent](dart.nullCheck(attr.name), dart.fn(() => attr.value, T.VoidToString()));
            }
            if (this.attributeSpans) token.attributeSpans = this[_attributes];
          }
        }
        this[_attributes] = null;
        this[_attributeNames] = null;
      }
      this[_addToken](token);
      this.state = dart.bind(this, 'dataState');
    }
    dataState() {
      let data = this.stream.char();
      if (data === "&") {
        this.state = dart.bind(this, 'entityDataState');
      } else if (data === "<") {
        this.state = dart.bind(this, 'tagOpenState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new(" "));
      } else if (data == constants.eof) {
        return false;
      } else if (constants.isWhitespace(data)) {
        this[_addToken](new token$.SpaceCharactersToken.new(dart.str(data) + this.stream.charsUntil(" \n\r\t\f", true)));
      } else {
        let chars = this.stream.charsUntil("&< ");
        this[_addToken](new token$.CharactersToken.new(dart.str(data) + chars));
      }
      return true;
    }
    entityDataState() {
      this.consumeEntity();
      this.state = dart.bind(this, 'dataState');
      return true;
    }
    rcdataState() {
      let data = this.stream.char();
      if (data === "&") {
        this.state = dart.bind(this, 'characterReferenceInRcdata');
      } else if (data === "<") {
        this.state = dart.bind(this, 'rcdataLessThanSignState');
      } else if (data == constants.eof) {
        return false;
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
      } else if (constants.isWhitespace(data)) {
        this[_addToken](new token$.SpaceCharactersToken.new(dart.str(data) + this.stream.charsUntil(" \n\r\t\f", true)));
      } else {
        let chars = this.stream.charsUntil("&<");
        this[_addToken](new token$.CharactersToken.new(dart.str(data) + chars));
      }
      return true;
    }
    characterReferenceInRcdata() {
      this.consumeEntity();
      this.state = dart.bind(this, 'rcdataState');
      return true;
    }
    rawtextState() {
      let data = this.stream.char();
      if (data === "<") {
        this.state = dart.bind(this, 'rawtextLessThanSignState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
      } else if (data == constants.eof) {
        return false;
      } else {
        let chars = this.stream.charsUntil("< ");
        this[_addToken](new token$.CharactersToken.new(dart.str(data) + chars));
      }
      return true;
    }
    scriptDataState() {
      let data = this.stream.char();
      if (data === "<") {
        this.state = dart.bind(this, 'scriptDataLessThanSignState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
      } else if (data == constants.eof) {
        return false;
      } else {
        let chars = this.stream.charsUntil("< ");
        this[_addToken](new token$.CharactersToken.new(dart.str(data) + chars));
      }
      return true;
    }
    plaintextState() {
      let data = this.stream.char();
      if (data == constants.eof) {
        return false;
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
      } else {
        this[_addToken](new token$.CharactersToken.new(dart.str(data) + this.stream.charsUntil(" ")));
      }
      return true;
    }
    tagOpenState() {
      let data = this.stream.char();
      if (data === "!") {
        this.state = dart.bind(this, 'markupDeclarationOpenState');
      } else if (data === "/") {
        this.state = dart.bind(this, 'closeTagOpenState');
      } else if (constants.isLetter(data)) {
        this.currentToken = new token$.StartTagToken.new(data);
        this.state = dart.bind(this, 'tagNameState');
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("expected-tag-name-but-got-right-bracket"));
        this[_addToken](new token$.CharactersToken.new("<>"));
        this.state = dart.bind(this, 'dataState');
      } else if (data === "?") {
        this[_addToken](new token$.ParseErrorToken.new("expected-tag-name-but-got-question-mark"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'bogusCommentState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("expected-tag-name"));
        this[_addToken](new token$.CharactersToken.new("<"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'dataState');
      }
      return true;
    }
    closeTagOpenState() {
      let data = this.stream.char();
      if (constants.isLetter(data)) {
        this.currentToken = new token$.EndTagToken.new(data);
        this.state = dart.bind(this, 'tagNameState');
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("expected-closing-tag-but-got-right-bracket"));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("expected-closing-tag-but-got-eof"));
        this[_addToken](new token$.CharactersToken.new("</"));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("expected-closing-tag-but-got-char", {messageParams: new _js_helper.LinkedMap.from(["data", data])}));
        this.stream.unget(data);
        this.state = dart.bind(this, 'bogusCommentState');
      }
      return true;
    }
    tagNameState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.state = dart.bind(this, 'beforeAttributeNameState');
      } else if (data === ">") {
        this.emitCurrentToken();
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-tag-name"));
        this.state = dart.bind(this, 'dataState');
      } else if (data === "/") {
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentTagToken.name = dart.str(this.currentTagToken.name) + "�";
      } else {
        this.currentTagToken.name = dart.str(this.currentTagToken.name) + dart.str(data);
      }
      return true;
    }
    rcdataLessThanSignState() {
      let data = this.stream.char();
      if (data === "/") {
        this[_buffer].clear();
        this.state = dart.bind(this, 'rcdataEndTagOpenState');
      } else {
        this[_addToken](new token$.CharactersToken.new("<"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'rcdataState');
      }
      return true;
    }
    rcdataEndTagOpenState() {
      let data = this.stream.char();
      if (constants.isLetter(data)) {
        this[_buffer].write(data);
        this.state = dart.bind(this, 'rcdataEndTagNameState');
      } else {
        this[_addToken](new token$.CharactersToken.new("</"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'rcdataState');
      }
      return true;
    }
    [_tokenIsAppropriate]() {
      return token$.TagToken.is(this.currentToken) && dart.nullCheck(this.currentTagToken.name)[$toLowerCase]() === dart.str(this[_buffer])[$toLowerCase]();
    }
    rcdataEndTagNameState() {
      let appropriate = this[_tokenIsAppropriate]();
      let data = this.stream.char();
      if (constants.isWhitespace(data) && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'beforeAttributeNameState');
      } else if (data === "/" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data === ">" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.emitCurrentToken();
        this.state = dart.bind(this, 'dataState');
      } else if (constants.isLetter(data)) {
        this[_buffer].write(data);
      } else {
        this[_addToken](new token$.CharactersToken.new("</" + dart.str(this[_buffer])));
        this.stream.unget(data);
        this.state = dart.bind(this, 'rcdataState');
      }
      return true;
    }
    rawtextLessThanSignState() {
      let data = this.stream.char();
      if (data === "/") {
        this[_buffer].clear();
        this.state = dart.bind(this, 'rawtextEndTagOpenState');
      } else {
        this[_addToken](new token$.CharactersToken.new("<"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'rawtextState');
      }
      return true;
    }
    rawtextEndTagOpenState() {
      let data = this.stream.char();
      if (constants.isLetter(data)) {
        this[_buffer].write(data);
        this.state = dart.bind(this, 'rawtextEndTagNameState');
      } else {
        this[_addToken](new token$.CharactersToken.new("</"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'rawtextState');
      }
      return true;
    }
    rawtextEndTagNameState() {
      let appropriate = this[_tokenIsAppropriate]();
      let data = this.stream.char();
      if (constants.isWhitespace(data) && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'beforeAttributeNameState');
      } else if (data === "/" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data === ">" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.emitCurrentToken();
        this.state = dart.bind(this, 'dataState');
      } else if (constants.isLetter(data)) {
        this[_buffer].write(data);
      } else {
        this[_addToken](new token$.CharactersToken.new("</" + dart.str(this[_buffer])));
        this.stream.unget(data);
        this.state = dart.bind(this, 'rawtextState');
      }
      return true;
    }
    scriptDataLessThanSignState() {
      let data = this.stream.char();
      if (data === "/") {
        this[_buffer].clear();
        this.state = dart.bind(this, 'scriptDataEndTagOpenState');
      } else if (data === "!") {
        this[_addToken](new token$.CharactersToken.new("<!"));
        this.state = dart.bind(this, 'scriptDataEscapeStartState');
      } else {
        this[_addToken](new token$.CharactersToken.new("<"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataState');
      }
      return true;
    }
    scriptDataEndTagOpenState() {
      let data = this.stream.char();
      if (constants.isLetter(data)) {
        this[_buffer].write(data);
        this.state = dart.bind(this, 'scriptDataEndTagNameState');
      } else {
        this[_addToken](new token$.CharactersToken.new("</"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataState');
      }
      return true;
    }
    scriptDataEndTagNameState() {
      let appropriate = this[_tokenIsAppropriate]();
      let data = this.stream.char();
      if (constants.isWhitespace(data) && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'beforeAttributeNameState');
      } else if (data === "/" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data === ">" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.emitCurrentToken();
        this.state = dart.bind(this, 'dataState');
      } else if (constants.isLetter(data)) {
        this[_buffer].write(data);
      } else {
        this[_addToken](new token$.CharactersToken.new("</" + dart.str(this[_buffer])));
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataState');
      }
      return true;
    }
    scriptDataEscapeStartState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
        this.state = dart.bind(this, 'scriptDataEscapeStartDashState');
      } else {
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataState');
      }
      return true;
    }
    scriptDataEscapeStartDashState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
        this.state = dart.bind(this, 'scriptDataEscapedDashDashState');
      } else {
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataState');
      }
      return true;
    }
    scriptDataEscapedState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
        this.state = dart.bind(this, 'scriptDataEscapedDashState');
      } else if (data === "<") {
        this.state = dart.bind(this, 'scriptDataEscapedLessThanSignState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
      } else if (data == constants.eof) {
        this.state = dart.bind(this, 'dataState');
      } else {
        let chars = this.stream.charsUntil("<- ");
        this[_addToken](new token$.CharactersToken.new(dart.str(data) + chars));
      }
      return true;
    }
    scriptDataEscapedDashState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
        this.state = dart.bind(this, 'scriptDataEscapedDashDashState');
      } else if (data === "<") {
        this.state = dart.bind(this, 'scriptDataEscapedLessThanSignState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
        this.state = dart.bind(this, 'scriptDataEscapedState');
      } else if (data == constants.eof) {
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.CharactersToken.new(data));
        this.state = dart.bind(this, 'scriptDataEscapedState');
      }
      return true;
    }
    scriptDataEscapedDashDashState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
      } else if (data === "<") {
        this.state = dart.bind(this, 'scriptDataEscapedLessThanSignState');
      } else if (data === ">") {
        this[_addToken](new token$.CharactersToken.new(">"));
        this.state = dart.bind(this, 'scriptDataState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
        this.state = dart.bind(this, 'scriptDataEscapedState');
      } else if (data == constants.eof) {
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.CharactersToken.new(data));
        this.state = dart.bind(this, 'scriptDataEscapedState');
      }
      return true;
    }
    scriptDataEscapedLessThanSignState() {
      let data = this.stream.char();
      if (data === "/") {
        this[_buffer].clear();
        this.state = dart.bind(this, 'scriptDataEscapedEndTagOpenState');
      } else if (constants.isLetter(data)) {
        this[_addToken](new token$.CharactersToken.new("<" + dart.str(data)));
        this[_buffer].clear();
        this[_buffer].write(data);
        this.state = dart.bind(this, 'scriptDataDoubleEscapeStartState');
      } else {
        this[_addToken](new token$.CharactersToken.new("<"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataEscapedState');
      }
      return true;
    }
    scriptDataEscapedEndTagOpenState() {
      let data = this.stream.char();
      if (constants.isLetter(data)) {
        this[_buffer].clear();
        this[_buffer].write(data);
        this.state = dart.bind(this, 'scriptDataEscapedEndTagNameState');
      } else {
        this[_addToken](new token$.CharactersToken.new("</"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataEscapedState');
      }
      return true;
    }
    scriptDataEscapedEndTagNameState() {
      let appropriate = this[_tokenIsAppropriate]();
      let data = this.stream.char();
      if (constants.isWhitespace(data) && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'beforeAttributeNameState');
      } else if (data === "/" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data === ">" && appropriate) {
        this.currentToken = new token$.EndTagToken.new(dart.str(this[_buffer]));
        this.emitCurrentToken();
        this.state = dart.bind(this, 'dataState');
      } else if (constants.isLetter(data)) {
        this[_buffer].write(data);
      } else {
        this[_addToken](new token$.CharactersToken.new("</" + dart.str(this[_buffer])));
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataEscapedState');
      }
      return true;
    }
    scriptDataDoubleEscapeStartState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data) || data === "/" || data === ">") {
        this[_addToken](new token$.CharactersToken.new(data));
        if (dart.str(this[_buffer])[$toLowerCase]() === "script") {
          this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
        } else {
          this.state = dart.bind(this, 'scriptDataEscapedState');
        }
      } else if (constants.isLetter(data)) {
        this[_addToken](new token$.CharactersToken.new(data));
        this[_buffer].write(data);
      } else {
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataEscapedState');
      }
      return true;
    }
    scriptDataDoubleEscapedState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedDashState');
      } else if (data === "<") {
        this[_addToken](new token$.CharactersToken.new("<"));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedLessThanSignState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-script-in-script"));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.CharactersToken.new(data));
      }
      return true;
    }
    scriptDataDoubleEscapedDashState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedDashDashState');
      } else if (data === "<") {
        this[_addToken](new token$.CharactersToken.new("<"));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedLessThanSignState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-script-in-script"));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.CharactersToken.new(data));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
      }
      return true;
    }
    scriptDataDoubleEscapedDashDashState() {
      let data = this.stream.char();
      if (data === "-") {
        this[_addToken](new token$.CharactersToken.new("-"));
      } else if (data === "<") {
        this[_addToken](new token$.CharactersToken.new("<"));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedLessThanSignState');
      } else if (data === ">") {
        this[_addToken](new token$.CharactersToken.new(">"));
        this.state = dart.bind(this, 'scriptDataState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addToken](new token$.CharactersToken.new("�"));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-script-in-script"));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.CharactersToken.new(data));
        this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
      }
      return true;
    }
    scriptDataDoubleEscapedLessThanSignState() {
      let data = this.stream.char();
      if (data === "/") {
        this[_addToken](new token$.CharactersToken.new("/"));
        this[_buffer].clear();
        this.state = dart.bind(this, 'scriptDataDoubleEscapeEndState');
      } else {
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
      }
      return true;
    }
    scriptDataDoubleEscapeEndState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data) || data === "/" || data === ">") {
        this[_addToken](new token$.CharactersToken.new(data));
        if (dart.str(this[_buffer])[$toLowerCase]() === "script") {
          this.state = dart.bind(this, 'scriptDataEscapedState');
        } else {
          this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
        }
      } else if (constants.isLetter(data)) {
        this[_addToken](new token$.CharactersToken.new(data));
        this[_buffer].write(data);
      } else {
        this.stream.unget(data);
        this.state = dart.bind(this, 'scriptDataDoubleEscapedState');
      }
      return true;
    }
    beforeAttributeNameState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.stream.charsUntil(" \n\r\t\f", true);
      } else if (data != null && constants.isLetter(data)) {
        this[_addAttribute](data);
        this.state = dart.bind(this, 'attributeNameState');
      } else if (data === ">") {
        this.emitCurrentToken();
      } else if (data === "/") {
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("expected-attribute-name-but-got-eof"));
        this.state = dart.bind(this, 'dataState');
      } else if ("'\"=<"[$contains](dart.nullCheck(data))) {
        this[_addToken](new token$.ParseErrorToken.new("invalid-character-in-attribute-name"));
        this[_addAttribute](data);
        this.state = dart.bind(this, 'attributeNameState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addAttribute]("�");
        this.state = dart.bind(this, 'attributeNameState');
      } else {
        this[_addAttribute](data);
        this.state = dart.bind(this, 'attributeNameState');
      }
      return true;
    }
    attributeNameState() {
      let data = this.stream.char();
      let leavingThisState = true;
      let emitToken = false;
      if (data === "=") {
        this.state = dart.bind(this, 'beforeAttributeValueState');
      } else if (constants.isLetter(data)) {
        this[_attributeName].write(data);
        this[_attributeName].write(this.stream.charsUntil(constants.asciiLetters, true));
        leavingThisState = false;
      } else if (data === ">") {
        emitToken = true;
      } else if (constants.isWhitespace(data)) {
        this.state = dart.bind(this, 'afterAttributeNameState');
      } else if (data === "/") {
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_attributeName].write("�");
        leavingThisState = false;
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-attribute-name"));
        this.state = dart.bind(this, 'dataState');
      } else if ("'\"<"[$contains](dart.nullCheck(data))) {
        this[_addToken](new token$.ParseErrorToken.new("invalid-character-in-attribute-name"));
        this[_attributeName].write(data);
        leavingThisState = false;
      } else {
        this[_attributeName].write(data);
        leavingThisState = false;
      }
      if (leavingThisState) {
        this[_markAttributeNameEnd](-1);
        let attrName = this[_attributeName].toString();
        if (this.lowercaseAttrName) {
          attrName = constants['AsciiUpperToLower|toAsciiLowerCase'](attrName);
        }
        dart.nullCheck(this[_attributes])[$last].name = attrName;
        this[_attributeNames] == null ? this[_attributeNames] = T.LinkedHashSetOfString().new() : null;
        if (dart.nullCheck(this[_attributeNames]).contains(attrName)) {
          this[_addToken](new token$.ParseErrorToken.new("duplicate-attribute"));
        }
        dart.nullCheck(this[_attributeNames]).add(attrName);
        if (emitToken) {
          this.emitCurrentToken();
        }
      }
      return true;
    }
    afterAttributeNameState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.stream.charsUntil(" \n\r\t\f", true);
      } else if (data === "=") {
        this.state = dart.bind(this, 'beforeAttributeValueState');
      } else if (data === ">") {
        this.emitCurrentToken();
      } else if (data != null && constants.isLetter(data)) {
        this[_addAttribute](data);
        this.state = dart.bind(this, 'attributeNameState');
      } else if (data === "/") {
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_addAttribute]("�");
        this.state = dart.bind(this, 'attributeNameState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("expected-end-of-tag-but-got-eof"));
        this.state = dart.bind(this, 'dataState');
      } else if ("'\"<"[$contains](dart.nullCheck(data))) {
        this[_addToken](new token$.ParseErrorToken.new("invalid-character-after-attribute-name"));
        this[_addAttribute](data);
        this.state = dart.bind(this, 'attributeNameState');
      } else {
        this[_addAttribute](data);
        this.state = dart.bind(this, 'attributeNameState');
      }
      return true;
    }
    beforeAttributeValueState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.stream.charsUntil(" \n\r\t\f", true);
      } else if (data === "\"") {
        this[_markAttributeValueStart](0);
        this.state = dart.bind(this, 'attributeValueDoubleQuotedState');
      } else if (data === "&") {
        this.state = dart.bind(this, 'attributeValueUnQuotedState');
        this.stream.unget(data);
        this[_markAttributeValueStart](0);
      } else if (data === "'") {
        this[_markAttributeValueStart](0);
        this.state = dart.bind(this, 'attributeValueSingleQuotedState');
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("expected-attribute-value-but-got-right-bracket"));
        this.emitCurrentToken();
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_markAttributeValueStart](-1);
        this[_attributeValue].write("�");
        this.state = dart.bind(this, 'attributeValueUnQuotedState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("expected-attribute-value-but-got-eof"));
        this.state = dart.bind(this, 'dataState');
      } else if ("=<`"[$contains](dart.nullCheck(data))) {
        this[_addToken](new token$.ParseErrorToken.new("equals-in-unquoted-attribute-value"));
        this[_markAttributeValueStart](-1);
        this[_attributeValue].write(data);
        this.state = dart.bind(this, 'attributeValueUnQuotedState');
      } else {
        this[_markAttributeValueStart](-1);
        this[_attributeValue].write(data);
        this.state = dart.bind(this, 'attributeValueUnQuotedState');
      }
      return true;
    }
    attributeValueDoubleQuotedState() {
      let data = this.stream.char();
      if (data === "\"") {
        this[_markAttributeValueEnd](-1);
        this[_markAttributeEnd](0);
        this.state = dart.bind(this, 'afterAttributeValueState');
      } else if (data === "&") {
        this.processEntityInAttribute("\"");
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_attributeValue].write("�");
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-attribute-value-double-quote"));
        this[_markAttributeValueEnd](-1);
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_attributeValue].write(data);
        this[_attributeValue].write(this.stream.charsUntil("\"&"));
      }
      return true;
    }
    attributeValueSingleQuotedState() {
      let data = this.stream.char();
      if (data === "'") {
        this[_markAttributeValueEnd](-1);
        this[_markAttributeEnd](0);
        this.state = dart.bind(this, 'afterAttributeValueState');
      } else if (data === "&") {
        this.processEntityInAttribute("'");
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_attributeValue].write("�");
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-attribute-value-single-quote"));
        this[_markAttributeValueEnd](-1);
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_attributeValue].write(data);
        this[_attributeValue].write(this.stream.charsUntil("'&"));
      }
      return true;
    }
    attributeValueUnQuotedState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this[_markAttributeValueEnd](-1);
        this.state = dart.bind(this, 'beforeAttributeNameState');
      } else if (data === "&") {
        this.processEntityInAttribute(">");
      } else if (data === ">") {
        this[_markAttributeValueEnd](-1);
        this.emitCurrentToken();
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-attribute-value-no-quotes"));
        this[_markAttributeValueEnd](-1);
        this.state = dart.bind(this, 'dataState');
      } else if ("\"'=<`"[$contains](dart.nullCheck(data))) {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-character-in-unquoted-attribute-value"));
        this[_attributeValue].write(data);
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this[_attributeValue].write("�");
      } else {
        this[_attributeValue].write(data);
        this[_attributeValue].write(this.stream.charsUntil("&>\"'=<`" + " \n\r\t\f"));
      }
      return true;
    }
    afterAttributeValueState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.state = dart.bind(this, 'beforeAttributeNameState');
      } else if (data === ">") {
        this.emitCurrentToken();
      } else if (data === "/") {
        this.state = dart.bind(this, 'selfClosingStartTagState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-EOF-after-attribute-value"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-character-after-attribute-value"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'beforeAttributeNameState');
      }
      return true;
    }
    selfClosingStartTagState() {
      let data = this.stream.char();
      if (data === ">") {
        this.currentTagToken.selfClosing = true;
        this.emitCurrentToken();
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-EOF-after-solidus-in-tag"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-character-after-soldius-in-tag"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'beforeAttributeNameState');
      }
      return true;
    }
    bogusCommentState() {
      let data = this.stream.charsUntil(">");
      data = data[$replaceAll](" ", "�");
      this[_addToken](new token$.CommentToken.new(data));
      this.stream.char();
      this.state = dart.bind(this, 'dataState');
      return true;
    }
    markupDeclarationOpenState() {
      let charStack = T.JSArrayOfStringN().of([this.stream.char()]);
      if (charStack[$last] === "-") {
        charStack[$add](this.stream.char());
        if (charStack[$last] === "-") {
          this.currentToken = new token$.CommentToken.new();
          this.state = dart.bind(this, 'commentStartState');
          return true;
        }
      } else if (charStack[$last] === "d" || charStack[$last] === "D") {
        let matched = true;
        for (let expected of C[18] || CT.C18) {
          let char = this.stream.char();
          charStack[$add](char);
          if (char == constants.eof || !expected[$contains](dart.nullCheck(char))) {
            matched = false;
            break;
          }
        }
        if (matched) {
          this.currentToken = new token$.DoctypeToken.new({correct: true});
          this.state = dart.bind(this, 'doctypeState');
          return true;
        }
      } else if (charStack[$last] === "[" && this.parser != null && dart.nullCheck(this.parser).tree.openElements[$isNotEmpty] && dart.nullCheck(this.parser).tree.openElements[$last].namespaceUri != dart.nullCheck(this.parser).tree.defaultNamespace) {
        let matched = true;
        for (let expected of C[19] || CT.C19) {
          charStack[$add](this.stream.char());
          if (charStack[$last] !== expected) {
            matched = false;
            break;
          }
        }
        if (matched) {
          this.state = dart.bind(this, 'cdataSectionState');
          return true;
        }
      }
      this[_addToken](new token$.ParseErrorToken.new("expected-dashes-or-doctype"));
      while (charStack[$isNotEmpty]) {
        this.stream.unget(charStack[$removeLast]());
      }
      this.state = dart.bind(this, 'bogusCommentState');
      return true;
    }
    commentStartState() {
      let data = this.stream.char();
      if (data === "-") {
        this.state = dart.bind(this, 'commentStartDashState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentStringToken.add("�");
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("incorrect-comment"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-comment"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentStringToken.add(dart.nullCheck(data));
        this.state = dart.bind(this, 'commentState');
      }
      return true;
    }
    commentStartDashState() {
      let data = this.stream.char();
      if (data === "-") {
        this.state = dart.bind(this, 'commentEndState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentStringToken.add("-�");
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("incorrect-comment"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-comment"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentStringToken.add("-").add(dart.nullCheck(data));
        this.state = dart.bind(this, 'commentState');
      }
      return true;
    }
    commentState() {
      let data = this.stream.char();
      if (data === "-") {
        this.state = dart.bind(this, 'commentEndDashState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentStringToken.add("�");
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-comment"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentStringToken.add(dart.nullCheck(data)).add(this.stream.charsUntil("- "));
      }
      return true;
    }
    commentEndDashState() {
      let data = this.stream.char();
      if (data === "-") {
        this.state = dart.bind(this, 'commentEndState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentStringToken.add("-�");
        this.state = dart.bind(this, 'commentState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-comment-end-dash"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentStringToken.add("-").add(dart.nullCheck(data));
        this.state = dart.bind(this, 'commentState');
      }
      return true;
    }
    commentEndState() {
      let data = this.stream.char();
      if (data === ">") {
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentStringToken.add("--�");
        this.state = dart.bind(this, 'commentState');
      } else if (data === "!") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-bang-after-double-dash-in-comment"));
        this.state = dart.bind(this, 'commentEndBangState');
      } else if (data === "-") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-dash-after-double-dash-in-comment"));
        this.currentStringToken.add(dart.nullCheck(data));
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-comment-double-dash"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-comment"));
        this.currentStringToken.add("--").add(dart.nullCheck(data));
        this.state = dart.bind(this, 'commentState');
      }
      return true;
    }
    commentEndBangState() {
      let data = this.stream.char();
      if (data === ">") {
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data === "-") {
        this.currentStringToken.add("--!");
        this.state = dart.bind(this, 'commentEndDashState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentStringToken.add("--!�");
        this.state = dart.bind(this, 'commentState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-comment-end-bang-state"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentStringToken.add("--!").add(dart.nullCheck(data));
        this.state = dart.bind(this, 'commentState');
      }
      return true;
    }
    doctypeState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.state = dart.bind(this, 'beforeDoctypeNameState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("expected-doctype-name-but-got-eof"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("need-space-after-doctype"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'beforeDoctypeNameState');
      }
      return true;
    }
    beforeDoctypeNameState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        return true;
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("expected-doctype-name-but-got-right-bracket"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentDoctypeToken.name = "�";
        this.state = dart.bind(this, 'doctypeNameState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("expected-doctype-name-but-got-eof"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentDoctypeToken.name = data;
        this.state = dart.bind(this, 'doctypeNameState');
      }
      return true;
    }
    doctypeNameState() {
      let t4, t4$, t4$0;
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.currentDoctypeToken.name = (t4 = this.currentDoctypeToken.name, t4 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t4));
        this.state = dart.bind(this, 'afterDoctypeNameState');
      } else if (data === ">") {
        this.currentDoctypeToken.name = (t4$ = this.currentDoctypeToken.name, t4$ == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t4$));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentDoctypeToken.name = dart.str(this.currentDoctypeToken.name) + "�";
        this.state = dart.bind(this, 'doctypeNameState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype-name"));
        this.currentDoctypeToken.correct = false;
        this.currentDoctypeToken.name = (t4$0 = this.currentDoctypeToken.name, t4$0 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t4$0));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentDoctypeToken.name = dart.str(this.currentDoctypeToken.name) + dart.str(data);
      }
      return true;
    }
    afterDoctypeNameState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        return true;
      } else if (data === ">") {
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this.currentDoctypeToken.correct = false;
        this.stream.unget(data);
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        if (data === "p" || data === "P") {
          let matched = true;
          for (let expected of C[20] || CT.C20) {
            data = this.stream.char();
            if (data == constants.eof || !expected[$contains](dart.nullCheck(data))) {
              matched = false;
              break;
            }
          }
          if (matched) {
            this.state = dart.bind(this, 'afterDoctypePublicKeywordState');
            return true;
          }
        } else if (data === "s" || data === "S") {
          let matched = true;
          for (let expected of C[21] || CT.C21) {
            data = this.stream.char();
            if (data == constants.eof || !expected[$contains](dart.nullCheck(data))) {
              matched = false;
              break;
            }
          }
          if (matched) {
            this.state = dart.bind(this, 'afterDoctypeSystemKeywordState');
            return true;
          }
        }
        this.stream.unget(data);
        this[_addToken](new token$.ParseErrorToken.new("expected-space-or-right-bracket-in-doctype", {messageParams: new _js_helper.LinkedMap.from(["data", data])}));
        this.currentDoctypeToken.correct = false;
        this.state = dart.bind(this, 'bogusDoctypeState');
      }
      return true;
    }
    afterDoctypePublicKeywordState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.state = dart.bind(this, 'beforeDoctypePublicIdentifierState');
      } else if (data === "'" || data === "\"") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'beforeDoctypePublicIdentifierState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.stream.unget(data);
        this.state = dart.bind(this, 'beforeDoctypePublicIdentifierState');
      }
      return true;
    }
    beforeDoctypePublicIdentifierState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        return true;
      } else if (data === "\"") {
        this.currentDoctypeToken.publicId = "";
        this.state = dart.bind(this, 'doctypePublicIdentifierDoubleQuotedState');
      } else if (data === "'") {
        this.currentDoctypeToken.publicId = "";
        this.state = dart.bind(this, 'doctypePublicIdentifierSingleQuotedState');
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-end-of-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this.state = dart.bind(this, 'bogusDoctypeState');
      }
      return true;
    }
    doctypePublicIdentifierDoubleQuotedState() {
      let data = this.stream.char();
      if (data === "\"") {
        this.state = dart.bind(this, 'afterDoctypePublicIdentifierState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentDoctypeToken.publicId = dart.str(this.currentDoctypeToken.publicId) + "�";
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-end-of-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentDoctypeToken.publicId = dart.str(this.currentDoctypeToken.publicId) + dart.str(data);
      }
      return true;
    }
    doctypePublicIdentifierSingleQuotedState() {
      let data = this.stream.char();
      if (data === "'") {
        this.state = dart.bind(this, 'afterDoctypePublicIdentifierState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentDoctypeToken.publicId = dart.str(this.currentDoctypeToken.publicId) + "�";
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-end-of-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentDoctypeToken.publicId = dart.str(this.currentDoctypeToken.publicId) + dart.str(data);
      }
      return true;
    }
    afterDoctypePublicIdentifierState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.state = dart.bind(this, 'betweenDoctypePublicAndSystemIdentifiersState');
      } else if (data === ">") {
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data === "\"") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.currentDoctypeToken.systemId = "";
        this.state = dart.bind(this, 'doctypeSystemIdentifierDoubleQuotedState');
      } else if (data === "'") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.currentDoctypeToken.systemId = "";
        this.state = dart.bind(this, 'doctypeSystemIdentifierSingleQuotedState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this.state = dart.bind(this, 'bogusDoctypeState');
      }
      return true;
    }
    betweenDoctypePublicAndSystemIdentifiersState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        return true;
      } else if (data === ">") {
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data === "\"") {
        this.currentDoctypeToken.systemId = "";
        this.state = dart.bind(this, 'doctypeSystemIdentifierDoubleQuotedState');
      } else if (data === "'") {
        this.currentDoctypeToken.systemId = "";
        this.state = dart.bind(this, 'doctypeSystemIdentifierSingleQuotedState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this.state = dart.bind(this, 'bogusDoctypeState');
      }
      return true;
    }
    afterDoctypeSystemKeywordState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        this.state = dart.bind(this, 'beforeDoctypeSystemIdentifierState');
      } else if (data === "'" || data === "\"") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.stream.unget(data);
        this.state = dart.bind(this, 'beforeDoctypeSystemIdentifierState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.stream.unget(data);
        this.state = dart.bind(this, 'beforeDoctypeSystemIdentifierState');
      }
      return true;
    }
    beforeDoctypeSystemIdentifierState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        return true;
      } else if (data === "\"") {
        this.currentDoctypeToken.systemId = "";
        this.state = dart.bind(this, 'doctypeSystemIdentifierDoubleQuotedState');
      } else if (data === "'") {
        this.currentDoctypeToken.systemId = "";
        this.state = dart.bind(this, 'doctypeSystemIdentifierSingleQuotedState');
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this.state = dart.bind(this, 'bogusDoctypeState');
      }
      return true;
    }
    doctypeSystemIdentifierDoubleQuotedState() {
      let data = this.stream.char();
      if (data === "\"") {
        this.state = dart.bind(this, 'afterDoctypeSystemIdentifierState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentDoctypeToken.systemId = dart.str(this.currentDoctypeToken.systemId) + "�";
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-end-of-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentDoctypeToken.systemId = dart.str(this.currentDoctypeToken.systemId) + dart.str(data);
      }
      return true;
    }
    doctypeSystemIdentifierSingleQuotedState() {
      let data = this.stream.char();
      if (data === "'") {
        this.state = dart.bind(this, 'afterDoctypeSystemIdentifierState');
      } else if (data === " ") {
        this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
        this.currentDoctypeToken.systemId = dart.str(this.currentDoctypeToken.systemId) + "�";
      } else if (data === ">") {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-end-of-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this.currentDoctypeToken.systemId = dart.str(this.currentDoctypeToken.systemId) + dart.str(data);
      }
      return true;
    }
    afterDoctypeSystemIdentifierState() {
      let data = this.stream.char();
      if (constants.isWhitespace(data)) {
        return true;
      } else if (data === ">") {
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this[_addToken](new token$.ParseErrorToken.new("eof-in-doctype"));
        this.currentDoctypeToken.correct = false;
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else {
        this[_addToken](new token$.ParseErrorToken.new("unexpected-char-in-doctype"));
        this.state = dart.bind(this, 'bogusDoctypeState');
      }
      return true;
    }
    bogusDoctypeState() {
      let data = this.stream.char();
      if (data === ">") {
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      } else if (data == constants.eof) {
        this.stream.unget(data);
        this[_addToken](dart.nullCheck(this.currentToken));
        this.state = dart.bind(this, 'dataState');
      }
      return true;
    }
    cdataSectionState() {
      let data = T.JSArrayOfString().of([]);
      let matchedEnd = 0;
      while (true) {
        let ch = this.stream.char();
        if (ch == null) {
          break;
        }
        if (ch === " ") {
          this[_addToken](new token$.ParseErrorToken.new("invalid-codepoint"));
          ch = "�";
        }
        data[$add](ch);
        if (ch === "]" && matchedEnd < 2) {
          matchedEnd = matchedEnd + 1;
        } else if (ch === ">" && matchedEnd === 2) {
          data[$removeLast]();
          data[$removeLast]();
          data[$removeLast]();
          break;
        } else {
          matchedEnd = 0;
        }
      }
      if (data[$isNotEmpty]) {
        this[_addToken](new token$.CharactersToken.new(data[$join]()));
      }
      this.state = dart.bind(this, 'dataState');
      return true;
    }
  };
  (tokenizer$.HtmlTokenizer.new = function(doc, opts) {
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let parseMeta = opts && 'parseMeta' in opts ? opts.parseMeta : true;
    let lowercaseElementName = opts && 'lowercaseElementName' in opts ? opts.lowercaseElementName : true;
    let lowercaseAttrName = opts && 'lowercaseAttrName' in opts ? opts.lowercaseAttrName : true;
    let generateSpans = opts && 'generateSpans' in opts ? opts.generateSpans : false;
    let sourceUrl = opts && 'sourceUrl' in opts ? opts.sourceUrl : null;
    let attributeSpans = opts && 'attributeSpans' in opts ? opts.attributeSpans : false;
    this[parser$0] = null;
    this[currentToken] = null;
    this[__HtmlTokenizer_state] = null;
    this[_buffer] = new core.StringBuffer.new();
    this[__HtmlTokenizer__lastOffset] = null;
    this[_attributes] = null;
    this[_attributeNames] = null;
    this[_current] = null;
    this[_attributeName] = new core.StringBuffer.new();
    this[_attributeValue] = new core.StringBuffer.new();
    this[lowercaseElementName$] = lowercaseElementName;
    this[lowercaseAttrName$] = lowercaseAttrName;
    this[generateSpans$] = generateSpans;
    this[attributeSpans$] = attributeSpans;
    this[stream] = new html_input_stream.HtmlInputStream.new(doc, encoding, parseMeta, generateSpans, sourceUrl);
    this[tokenQueue] = new (T.ListQueueOfTokenN()).new();
    this.reset();
  }).prototype = tokenizer$.HtmlTokenizer.prototype;
  dart.addTypeTests(tokenizer$.HtmlTokenizer);
  dart.addTypeCaches(tokenizer$.HtmlTokenizer);
  tokenizer$.HtmlTokenizer[dart.implements] = () => [core.Iterator$(token$.Token)];
  dart.setMethodSignature(tokenizer$.HtmlTokenizer, () => ({
    __proto__: dart.getMethods(tokenizer$.HtmlTokenizer.__proto__),
    [_markAttributeEnd]: dart.fnType(dart.void, [core.int]),
    [_markAttributeValueStart]: dart.fnType(dart.void, [core.int]),
    [_markAttributeValueEnd]: dart.fnType(dart.void, [core.int]),
    [_markAttributeNameEnd]: dart.fnType(dart.void, [core.int]),
    [_addAttribute]: dart.fnType(dart.void, [core.String]),
    moveNext: dart.fnType(core.bool, []),
    reset: dart.fnType(dart.void, []),
    [_addToken]: dart.fnType(dart.void, [token$.Token]),
    consumeNumberEntity: dart.fnType(core.String, [core.bool]),
    consumeEntity: dart.fnType(dart.void, [], {allowedChar: dart.nullable(core.String), fromAttribute: core.bool}, {}),
    processEntityInAttribute: dart.fnType(dart.void, [core.String]),
    emitCurrentToken: dart.fnType(dart.void, []),
    dataState: dart.fnType(core.bool, []),
    entityDataState: dart.fnType(core.bool, []),
    rcdataState: dart.fnType(core.bool, []),
    characterReferenceInRcdata: dart.fnType(core.bool, []),
    rawtextState: dart.fnType(core.bool, []),
    scriptDataState: dart.fnType(core.bool, []),
    plaintextState: dart.fnType(core.bool, []),
    tagOpenState: dart.fnType(core.bool, []),
    closeTagOpenState: dart.fnType(core.bool, []),
    tagNameState: dart.fnType(core.bool, []),
    rcdataLessThanSignState: dart.fnType(core.bool, []),
    rcdataEndTagOpenState: dart.fnType(core.bool, []),
    [_tokenIsAppropriate]: dart.fnType(core.bool, []),
    rcdataEndTagNameState: dart.fnType(core.bool, []),
    rawtextLessThanSignState: dart.fnType(core.bool, []),
    rawtextEndTagOpenState: dart.fnType(core.bool, []),
    rawtextEndTagNameState: dart.fnType(core.bool, []),
    scriptDataLessThanSignState: dart.fnType(core.bool, []),
    scriptDataEndTagOpenState: dart.fnType(core.bool, []),
    scriptDataEndTagNameState: dart.fnType(core.bool, []),
    scriptDataEscapeStartState: dart.fnType(core.bool, []),
    scriptDataEscapeStartDashState: dart.fnType(core.bool, []),
    scriptDataEscapedState: dart.fnType(core.bool, []),
    scriptDataEscapedDashState: dart.fnType(core.bool, []),
    scriptDataEscapedDashDashState: dart.fnType(core.bool, []),
    scriptDataEscapedLessThanSignState: dart.fnType(core.bool, []),
    scriptDataEscapedEndTagOpenState: dart.fnType(core.bool, []),
    scriptDataEscapedEndTagNameState: dart.fnType(core.bool, []),
    scriptDataDoubleEscapeStartState: dart.fnType(core.bool, []),
    scriptDataDoubleEscapedState: dart.fnType(core.bool, []),
    scriptDataDoubleEscapedDashState: dart.fnType(core.bool, []),
    scriptDataDoubleEscapedDashDashState: dart.fnType(core.bool, []),
    scriptDataDoubleEscapedLessThanSignState: dart.fnType(core.bool, []),
    scriptDataDoubleEscapeEndState: dart.fnType(core.bool, []),
    beforeAttributeNameState: dart.fnType(core.bool, []),
    attributeNameState: dart.fnType(core.bool, []),
    afterAttributeNameState: dart.fnType(core.bool, []),
    beforeAttributeValueState: dart.fnType(core.bool, []),
    attributeValueDoubleQuotedState: dart.fnType(core.bool, []),
    attributeValueSingleQuotedState: dart.fnType(core.bool, []),
    attributeValueUnQuotedState: dart.fnType(core.bool, []),
    afterAttributeValueState: dart.fnType(core.bool, []),
    selfClosingStartTagState: dart.fnType(core.bool, []),
    bogusCommentState: dart.fnType(core.bool, []),
    markupDeclarationOpenState: dart.fnType(core.bool, []),
    commentStartState: dart.fnType(core.bool, []),
    commentStartDashState: dart.fnType(core.bool, []),
    commentState: dart.fnType(core.bool, []),
    commentEndDashState: dart.fnType(core.bool, []),
    commentEndState: dart.fnType(core.bool, []),
    commentEndBangState: dart.fnType(core.bool, []),
    doctypeState: dart.fnType(core.bool, []),
    beforeDoctypeNameState: dart.fnType(core.bool, []),
    doctypeNameState: dart.fnType(core.bool, []),
    afterDoctypeNameState: dart.fnType(core.bool, []),
    afterDoctypePublicKeywordState: dart.fnType(core.bool, []),
    beforeDoctypePublicIdentifierState: dart.fnType(core.bool, []),
    doctypePublicIdentifierDoubleQuotedState: dart.fnType(core.bool, []),
    doctypePublicIdentifierSingleQuotedState: dart.fnType(core.bool, []),
    afterDoctypePublicIdentifierState: dart.fnType(core.bool, []),
    betweenDoctypePublicAndSystemIdentifiersState: dart.fnType(core.bool, []),
    afterDoctypeSystemKeywordState: dart.fnType(core.bool, []),
    beforeDoctypeSystemIdentifierState: dart.fnType(core.bool, []),
    doctypeSystemIdentifierDoubleQuotedState: dart.fnType(core.bool, []),
    doctypeSystemIdentifierSingleQuotedState: dart.fnType(core.bool, []),
    afterDoctypeSystemIdentifierState: dart.fnType(core.bool, []),
    bogusDoctypeState: dart.fnType(core.bool, []),
    cdataSectionState: dart.fnType(core.bool, [])
  }));
  dart.setGetterSignature(tokenizer$.HtmlTokenizer, () => ({
    __proto__: dart.getGetters(tokenizer$.HtmlTokenizer.__proto__),
    state: dart.fnType(core.bool, []),
    [_lastOffset]: core.int,
    currentTagToken: token$.TagToken,
    currentDoctypeToken: token$.DoctypeToken,
    currentStringToken: token$.StringToken,
    current: token$.Token
  }));
  dart.setSetterSignature(tokenizer$.HtmlTokenizer, () => ({
    __proto__: dart.getSetters(tokenizer$.HtmlTokenizer.__proto__),
    state: dart.fnType(core.bool, []),
    [_lastOffset]: core.int
  }));
  dart.setLibraryUri(tokenizer$.HtmlTokenizer, I[5]);
  dart.setFieldSignature(tokenizer$.HtmlTokenizer, () => ({
    __proto__: dart.getFields(tokenizer$.HtmlTokenizer.__proto__),
    stream: dart.finalFieldType(html_input_stream.HtmlInputStream),
    lowercaseElementName: dart.finalFieldType(core.bool),
    lowercaseAttrName: dart.finalFieldType(core.bool),
    generateSpans: dart.finalFieldType(core.bool),
    attributeSpans: dart.finalFieldType(core.bool),
    parser: dart.fieldType(dart.nullable(parser$.HtmlParser)),
    tokenQueue: dart.finalFieldType(collection.Queue$(dart.nullable(token$.Token))),
    currentToken: dart.fieldType(dart.nullable(token$.Token)),
    [__HtmlTokenizer_state]: dart.fieldType(dart.nullable(dart.fnType(core.bool, []))),
    [_buffer]: dart.finalFieldType(core.StringBuffer),
    [__HtmlTokenizer__lastOffset]: dart.fieldType(dart.nullable(core.int)),
    [_attributes]: dart.fieldType(dart.nullable(core.List$(token$.TagAttribute))),
    [_attributeNames]: dart.fieldType(dart.nullable(core.Set$(core.String))),
    [_current]: dart.fieldType(dart.nullable(token$.Token)),
    [_attributeName]: dart.finalFieldType(core.StringBuffer),
    [_attributeValue]: dart.finalFieldType(core.StringBuffer)
  }));
  dart.defineLazy(tokenizer$, {
    /*tokenizer$.entitiesByFirstChar*/get entitiesByFirstChar() {
      return dart.fn(() => {
        let result = new (T.IdentityMapOfString$ListOfString()).new();
        for (let k of constants.entities[$keys]) {
          result[$putIfAbsent](k[$_get](0), dart.fn(() => T.JSArrayOfString().of([]), T.VoidToListOfString()))[$add](k);
        }
        return result;
      }, T.VoidToMapOfString$ListOfString())();
    },
    set entitiesByFirstChar(_) {}
  }, false);
  var strict$ = dart.privateName(parser$, "HtmlParser.strict");
  var generateSpans$0 = dart.privateName(parser$, "HtmlParser.generateSpans");
  var tokenizer = dart.privateName(parser$, "HtmlParser.tokenizer");
  var tree$ = dart.privateName(parser$, "HtmlParser.tree");
  var errors = dart.privateName(parser$, "HtmlParser.errors");
  var firstStartTag = dart.privateName(parser$, "HtmlParser.firstStartTag");
  var compatMode = dart.privateName(parser$, "HtmlParser.compatMode");
  var innerHTML = dart.privateName(parser$, "HtmlParser.innerHTML");
  var originalPhase = dart.privateName(parser$, "HtmlParser.originalPhase");
  var framesetOK = dart.privateName(parser$, "HtmlParser.framesetOK");
  var __HtmlParser_phase = dart.privateName(parser$, "_#HtmlParser#phase");
  var __HtmlParser__initialPhase = dart.privateName(parser$, "_#HtmlParser#_initialPhase");
  var __HtmlParser__initialPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_initialPhase#isSet");
  var __HtmlParser__beforeHtmlPhase = dart.privateName(parser$, "_#HtmlParser#_beforeHtmlPhase");
  var __HtmlParser__beforeHtmlPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_beforeHtmlPhase#isSet");
  var __HtmlParser__beforeHeadPhase = dart.privateName(parser$, "_#HtmlParser#_beforeHeadPhase");
  var __HtmlParser__beforeHeadPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_beforeHeadPhase#isSet");
  var __HtmlParser__inHeadPhase = dart.privateName(parser$, "_#HtmlParser#_inHeadPhase");
  var __HtmlParser__inHeadPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inHeadPhase#isSet");
  var __HtmlParser__afterHeadPhase = dart.privateName(parser$, "_#HtmlParser#_afterHeadPhase");
  var __HtmlParser__afterHeadPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_afterHeadPhase#isSet");
  var __HtmlParser__inBodyPhase = dart.privateName(parser$, "_#HtmlParser#_inBodyPhase");
  var __HtmlParser__inBodyPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inBodyPhase#isSet");
  var __HtmlParser__textPhase = dart.privateName(parser$, "_#HtmlParser#_textPhase");
  var __HtmlParser__textPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_textPhase#isSet");
  var __HtmlParser__inTablePhase = dart.privateName(parser$, "_#HtmlParser#_inTablePhase");
  var __HtmlParser__inTablePhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inTablePhase#isSet");
  var __HtmlParser__inTableTextPhase = dart.privateName(parser$, "_#HtmlParser#_inTableTextPhase");
  var __HtmlParser__inTableTextPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inTableTextPhase#isSet");
  var __HtmlParser__inCaptionPhase = dart.privateName(parser$, "_#HtmlParser#_inCaptionPhase");
  var __HtmlParser__inCaptionPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inCaptionPhase#isSet");
  var __HtmlParser__inColumnGroupPhase = dart.privateName(parser$, "_#HtmlParser#_inColumnGroupPhase");
  var __HtmlParser__inColumnGroupPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inColumnGroupPhase#isSet");
  var __HtmlParser__inTableBodyPhase = dart.privateName(parser$, "_#HtmlParser#_inTableBodyPhase");
  var __HtmlParser__inTableBodyPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inTableBodyPhase#isSet");
  var __HtmlParser__inRowPhase = dart.privateName(parser$, "_#HtmlParser#_inRowPhase");
  var __HtmlParser__inRowPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inRowPhase#isSet");
  var __HtmlParser__inCellPhase = dart.privateName(parser$, "_#HtmlParser#_inCellPhase");
  var __HtmlParser__inCellPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inCellPhase#isSet");
  var __HtmlParser__inSelectPhase = dart.privateName(parser$, "_#HtmlParser#_inSelectPhase");
  var __HtmlParser__inSelectPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inSelectPhase#isSet");
  var __HtmlParser__inSelectInTablePhase = dart.privateName(parser$, "_#HtmlParser#_inSelectInTablePhase");
  var __HtmlParser__inSelectInTablePhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inSelectInTablePhase#isSet");
  var __HtmlParser__inForeignContentPhase = dart.privateName(parser$, "_#HtmlParser#_inForeignContentPhase");
  var __HtmlParser__inForeignContentPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inForeignContentPhase#isSet");
  var __HtmlParser__afterBodyPhase = dart.privateName(parser$, "_#HtmlParser#_afterBodyPhase");
  var __HtmlParser__afterBodyPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_afterBodyPhase#isSet");
  var __HtmlParser__inFramesetPhase = dart.privateName(parser$, "_#HtmlParser#_inFramesetPhase");
  var __HtmlParser__inFramesetPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_inFramesetPhase#isSet");
  var __HtmlParser__afterFramesetPhase = dart.privateName(parser$, "_#HtmlParser#_afterFramesetPhase");
  var __HtmlParser__afterFramesetPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_afterFramesetPhase#isSet");
  var __HtmlParser__afterAfterBodyPhase = dart.privateName(parser$, "_#HtmlParser#_afterAfterBodyPhase");
  var __HtmlParser__afterAfterBodyPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_afterAfterBodyPhase#isSet");
  var __HtmlParser__afterAfterFramesetPhase = dart.privateName(parser$, "_#HtmlParser#_afterAfterFramesetPhase");
  var __HtmlParser__afterAfterFramesetPhase_isSet = dart.privateName(parser$, "_#HtmlParser#_afterAfterFramesetPhase#isSet");
  var _initialPhase = dart.privateName(parser$, "_initialPhase");
  var _beforeHtmlPhase = dart.privateName(parser$, "_beforeHtmlPhase");
  var _beforeHeadPhase = dart.privateName(parser$, "_beforeHeadPhase");
  var _inHeadPhase = dart.privateName(parser$, "_inHeadPhase");
  var _afterHeadPhase = dart.privateName(parser$, "_afterHeadPhase");
  var _inBodyPhase = dart.privateName(parser$, "_inBodyPhase");
  var _textPhase = dart.privateName(parser$, "_textPhase");
  var _inTablePhase = dart.privateName(parser$, "_inTablePhase");
  var _inTableTextPhase = dart.privateName(parser$, "_inTableTextPhase");
  var _inCaptionPhase = dart.privateName(parser$, "_inCaptionPhase");
  var _inColumnGroupPhase = dart.privateName(parser$, "_inColumnGroupPhase");
  var _inTableBodyPhase = dart.privateName(parser$, "_inTableBodyPhase");
  var _inRowPhase = dart.privateName(parser$, "_inRowPhase");
  var _inCellPhase = dart.privateName(parser$, "_inCellPhase");
  var _inSelectPhase = dart.privateName(parser$, "_inSelectPhase");
  var _inSelectInTablePhase = dart.privateName(parser$, "_inSelectInTablePhase");
  var _inForeignContentPhase = dart.privateName(parser$, "_inForeignContentPhase");
  var _afterBodyPhase = dart.privateName(parser$, "_afterBodyPhase");
  var _inFramesetPhase = dart.privateName(parser$, "_inFramesetPhase");
  var _afterFramesetPhase = dart.privateName(parser$, "_afterFramesetPhase");
  var _afterAfterBodyPhase = dart.privateName(parser$, "_afterAfterBodyPhase");
  var _afterAfterFramesetPhase = dart.privateName(parser$, "_afterAfterFramesetPhase");
  var _parse = dart.privateName(parser$, "_parse");
  var _lastSpan = dart.privateName(parser$, "_lastSpan");
  var AttributeName_namespace = dart.privateName(dom, "AttributeName.namespace");
  var AttributeName_name = dart.privateName(dom, "AttributeName.name");
  var AttributeName_prefix = dart.privateName(dom, "AttributeName.prefix");
  parser$.HtmlParser = class HtmlParser extends core.Object {
    get strict() {
      return this[strict$];
    }
    set strict(value) {
      super.strict = value;
    }
    get generateSpans() {
      return this[generateSpans$0];
    }
    set generateSpans(value) {
      super.generateSpans = value;
    }
    get tokenizer() {
      return this[tokenizer];
    }
    set tokenizer(value) {
      super.tokenizer = value;
    }
    get tree() {
      return this[tree$];
    }
    set tree(value) {
      super.tree = value;
    }
    get errors() {
      return this[errors];
    }
    set errors(value) {
      super.errors = value;
    }
    get firstStartTag() {
      return this[firstStartTag];
    }
    set firstStartTag(value) {
      this[firstStartTag] = value;
    }
    get compatMode() {
      return this[compatMode];
    }
    set compatMode(value) {
      this[compatMode] = value;
    }
    get innerHTML() {
      return this[innerHTML];
    }
    set innerHTML(value) {
      this[innerHTML] = value;
    }
    get originalPhase() {
      return this[originalPhase];
    }
    set originalPhase(value) {
      this[originalPhase] = value;
    }
    get framesetOK() {
      return this[framesetOK];
    }
    set framesetOK(value) {
      this[framesetOK] = value;
    }
    get phase() {
      let t4;
      t4 = this[__HtmlParser_phase];
      return t4 == null ? this[__HtmlParser_phase] = this[_initialPhase] : t4;
    }
    set phase(t4) {
      this[__HtmlParser_phase] = t4;
    }
    get [_initialPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__initialPhase];
      return t5 == null ? (t6 = new parser$.InitialPhase.new(this), this[__HtmlParser__initialPhase] == null ? this[__HtmlParser__initialPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_initialPhase"))) : t5;
    }
    get [_beforeHtmlPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__beforeHtmlPhase];
      return t5 == null ? (t6 = new parser$.BeforeHtmlPhase.new(this), this[__HtmlParser__beforeHtmlPhase] == null ? this[__HtmlParser__beforeHtmlPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_beforeHtmlPhase"))) : t5;
    }
    get [_beforeHeadPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__beforeHeadPhase];
      return t5 == null ? (t6 = new parser$.BeforeHeadPhase.new(this), this[__HtmlParser__beforeHeadPhase] == null ? this[__HtmlParser__beforeHeadPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_beforeHeadPhase"))) : t5;
    }
    get [_inHeadPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inHeadPhase];
      return t5 == null ? (t6 = new parser$.InHeadPhase.new(this), this[__HtmlParser__inHeadPhase] == null ? this[__HtmlParser__inHeadPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inHeadPhase"))) : t5;
    }
    get [_afterHeadPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__afterHeadPhase];
      return t5 == null ? (t6 = new parser$.AfterHeadPhase.new(this), this[__HtmlParser__afterHeadPhase] == null ? this[__HtmlParser__afterHeadPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_afterHeadPhase"))) : t5;
    }
    get [_inBodyPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inBodyPhase];
      return t5 == null ? (t6 = new parser$.InBodyPhase.new(this), this[__HtmlParser__inBodyPhase] == null ? this[__HtmlParser__inBodyPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inBodyPhase"))) : t5;
    }
    get [_textPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__textPhase];
      return t5 == null ? (t6 = new parser$.TextPhase.new(this), this[__HtmlParser__textPhase] == null ? this[__HtmlParser__textPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_textPhase"))) : t5;
    }
    get [_inTablePhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inTablePhase];
      return t5 == null ? (t6 = new parser$.InTablePhase.new(this), this[__HtmlParser__inTablePhase] == null ? this[__HtmlParser__inTablePhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inTablePhase"))) : t5;
    }
    get [_inTableTextPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inTableTextPhase];
      return t5 == null ? (t6 = new parser$.InTableTextPhase.new(this), this[__HtmlParser__inTableTextPhase] == null ? this[__HtmlParser__inTableTextPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inTableTextPhase"))) : t5;
    }
    get [_inCaptionPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inCaptionPhase];
      return t5 == null ? (t6 = new parser$.InCaptionPhase.new(this), this[__HtmlParser__inCaptionPhase] == null ? this[__HtmlParser__inCaptionPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inCaptionPhase"))) : t5;
    }
    get [_inColumnGroupPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inColumnGroupPhase];
      return t5 == null ? (t6 = new parser$.InColumnGroupPhase.new(this), this[__HtmlParser__inColumnGroupPhase] == null ? this[__HtmlParser__inColumnGroupPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inColumnGroupPhase"))) : t5;
    }
    get [_inTableBodyPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inTableBodyPhase];
      return t5 == null ? (t6 = new parser$.InTableBodyPhase.new(this), this[__HtmlParser__inTableBodyPhase] == null ? this[__HtmlParser__inTableBodyPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inTableBodyPhase"))) : t5;
    }
    get [_inRowPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inRowPhase];
      return t5 == null ? (t6 = new parser$.InRowPhase.new(this), this[__HtmlParser__inRowPhase] == null ? this[__HtmlParser__inRowPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inRowPhase"))) : t5;
    }
    get [_inCellPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inCellPhase];
      return t5 == null ? (t6 = new parser$.InCellPhase.new(this), this[__HtmlParser__inCellPhase] == null ? this[__HtmlParser__inCellPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inCellPhase"))) : t5;
    }
    get [_inSelectPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inSelectPhase];
      return t5 == null ? (t6 = new parser$.InSelectPhase.new(this), this[__HtmlParser__inSelectPhase] == null ? this[__HtmlParser__inSelectPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inSelectPhase"))) : t5;
    }
    get [_inSelectInTablePhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inSelectInTablePhase];
      return t5 == null ? (t6 = new parser$.InSelectInTablePhase.new(this), this[__HtmlParser__inSelectInTablePhase] == null ? this[__HtmlParser__inSelectInTablePhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inSelectInTablePhase"))) : t5;
    }
    get [_inForeignContentPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inForeignContentPhase];
      return t5 == null ? (t6 = new parser$.InForeignContentPhase.new(this), this[__HtmlParser__inForeignContentPhase] == null ? this[__HtmlParser__inForeignContentPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inForeignContentPhase"))) : t5;
    }
    get [_afterBodyPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__afterBodyPhase];
      return t5 == null ? (t6 = new parser$.AfterBodyPhase.new(this), this[__HtmlParser__afterBodyPhase] == null ? this[__HtmlParser__afterBodyPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_afterBodyPhase"))) : t5;
    }
    get [_inFramesetPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__inFramesetPhase];
      return t5 == null ? (t6 = new parser$.InFramesetPhase.new(this), this[__HtmlParser__inFramesetPhase] == null ? this[__HtmlParser__inFramesetPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_inFramesetPhase"))) : t5;
    }
    get [_afterFramesetPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__afterFramesetPhase];
      return t5 == null ? (t6 = new parser$.AfterFramesetPhase.new(this), this[__HtmlParser__afterFramesetPhase] == null ? this[__HtmlParser__afterFramesetPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_afterFramesetPhase"))) : t5;
    }
    get [_afterAfterBodyPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__afterAfterBodyPhase];
      return t5 == null ? (t6 = new parser$.AfterAfterBodyPhase.new(this), this[__HtmlParser__afterAfterBodyPhase] == null ? this[__HtmlParser__afterAfterBodyPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_afterAfterBodyPhase"))) : t5;
    }
    get [_afterAfterFramesetPhase]() {
      let t6, t5;
      t5 = this[__HtmlParser__afterAfterFramesetPhase];
      return t5 == null ? (t6 = new parser$.AfterAfterFramesetPhase.new(this), this[__HtmlParser__afterAfterFramesetPhase] == null ? this[__HtmlParser__afterAfterFramesetPhase] = t6 : dart.throw(new _internal.LateError.fieldADI("_afterAfterFramesetPhase"))) : t5;
    }
    get innerHTMLMode() {
      return this.innerHTML != null;
    }
    parse() {
      this.innerHTML = null;
      this[_parse]();
      return this.tree.getDocument();
    }
    parseFragment(container = "div") {
      core.ArgumentError.checkNotNull(core.String, container, "container");
      this.innerHTML = container[$toLowerCase]();
      this[_parse]();
      return this.tree.getFragment();
    }
    [_parse]() {
      this.reset();
      while (true) {
        try {
          this.mainLoop();
          break;
        } catch (e) {
          let _ = dart.getThrown(e);
          if (constants.ReparseException.is(_)) {
            this.reset();
          } else
            throw e;
        }
      }
    }
    reset() {
      this.tokenizer.reset();
      this.tree.reset();
      this.firstStartTag = false;
      this.errors[$clear]();
      this.compatMode = "no quirks";
      if (this.innerHTMLMode) {
        if (constants.cdataElements[$contains](this.innerHTML)) {
          this.tokenizer.state = dart.bind(this.tokenizer, 'rcdataState');
        } else if (constants.rcdataElements[$contains](this.innerHTML)) {
          this.tokenizer.state = dart.bind(this.tokenizer, 'rawtextState');
        } else if (this.innerHTML === "plaintext") {
          this.tokenizer.state = dart.bind(this.tokenizer, 'plaintextState');
        } else {
        }
        this.phase = this[_beforeHtmlPhase];
        this[_beforeHtmlPhase].insertHtmlElement();
        this.resetInsertionMode();
      } else {
        this.phase = this[_initialPhase];
      }
      this.framesetOK = true;
    }
    isHTMLIntegrationPoint(element) {
      let t6;
      if (element.localName === "annotation-xml" && element.namespaceUri === constants.Namespaces.mathml) {
        let enc = (t6 = element.attributes[$_get]("encoding"), t6 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t6));
        return enc === "text/html" || enc === "application/xhtml+xml";
      } else {
        return constants.htmlIntegrationPointElements[$contains](new (T.PairOfStringN$StringN()).new(element.namespaceUri, element.localName));
      }
    }
    isMathMLTextIntegrationPoint(element) {
      return constants.mathmlTextIntegrationPointElements[$contains](new (T.PairOfStringN$StringN()).new(element.namespaceUri, element.localName));
    }
    inForeignContent(token, type) {
      if (this.tree.openElements[$isEmpty]) return false;
      let node = this.tree.openElements[$last];
      if (node.namespaceUri == this.tree.defaultNamespace) return false;
      if (this.isMathMLTextIntegrationPoint(node)) {
        if (type === 2 && token$.StartTagToken.as(token).name !== "mglyph" && token.name !== "malignmark") {
          return false;
        }
        if (type === 1 || type === 0) {
          return false;
        }
      }
      if (node.localName === "annotation-xml" && type === 2 && token$.StartTagToken.as(token).name === "svg") {
        return false;
      }
      if (this.isHTMLIntegrationPoint(node)) {
        if (type === 2 || type === 1 || type === 0) {
          return false;
        }
      }
      return true;
    }
    mainLoop() {
      while (this.tokenizer.moveNext()) {
        let token = this.tokenizer.current;
        let newToken = token;
        let type = null;
        while (newToken != null) {
          type = newToken.kind;
          if (type === 6) {
            let error = token$.ParseErrorToken.as(newToken);
            this.parseError(error.span, error.data, error.messageParams);
            newToken = null;
          } else {
            let localPhase = this.phase;
            if (this.inForeignContent(token, type)) {
              localPhase = this[_inForeignContentPhase];
            }
            switch (type) {
              case 1:
              {
                newToken = localPhase.processCharacters(token$.CharactersToken.as(newToken));
                break;
              }
              case 0:
              {
                newToken = localPhase.processSpaceCharacters(token$.SpaceCharactersToken.as(newToken));
                break;
              }
              case 2:
              {
                newToken = localPhase.processStartTag(token$.StartTagToken.as(newToken));
                break;
              }
              case 3:
              {
                newToken = localPhase.processEndTag(token$.EndTagToken.as(newToken));
                break;
              }
              case 4:
              {
                newToken = localPhase.processComment(token$.CommentToken.as(newToken));
                break;
              }
              case 5:
              {
                newToken = localPhase.processDoctype(token$.DoctypeToken.as(newToken));
                break;
              }
            }
          }
        }
        if (token$.StartTagToken.is(token)) {
          if (token.selfClosing && !token.selfClosingAcknowledged) {
            this.parseError(token.span, "non-void-element-with-trailing-solidus", new _js_helper.LinkedMap.from(["name", token.name]));
          }
        }
      }
      let reprocess = true;
      let reprocessPhases = [];
      while (reprocess) {
        reprocessPhases[$add](this.phase);
        reprocess = this.phase.processEOF();
        if (reprocess) {
          if (!!reprocessPhases[$contains](this.phase)) dart.assertFailed(null, I[6], 339, 16, "!reprocessPhases.contains(phase)");
        }
      }
    }
    get [_lastSpan]() {
      let t6;
      t6 = this.tokenizer.stream.fileInfo;
      return t6 == null ? null : t6.location(this.tokenizer.stream.position).pointSpan();
    }
    parseError(span, errorcode, datavars = C[22] || CT.C22) {
      if (!this.generateSpans && span == null) {
        span = this[_lastSpan];
      }
      let err = new parser$.ParseError.new(errorcode, span, datavars);
      this.errors[$add](err);
      if (this.strict) dart.throw(err);
    }
    adjustMathMLAttributes(token) {
      let orig = token.data[$remove]("definitionurl");
      if (orig != null) {
        token.data[$_set]("definitionURL", orig);
      }
    }
    adjustSVGAttributes(token) {
      let replacements = C[23] || CT.C23;
      for (let originalName of token.data[$keys][$toList]()) {
        let svgName = replacements[$_get](core.String.as(originalName));
        if (svgName != null) {
          token.data[$_set](svgName, dart.nullCheck(token.data[$remove](originalName)));
        }
      }
    }
    adjustForeignAttributes(token) {
      let replacements = C[24] || CT.C24;
      for (let originalName of token.data[$keys][$toList]()) {
        let foreignName = replacements[$_get](core.String.as(originalName));
        if (foreignName != null) {
          token.data[$_set](foreignName, dart.nullCheck(token.data[$remove](originalName)));
        }
      }
    }
    resetInsertionMode() {
      for (let node of this.tree.openElements[$reversed]) {
        let nodeName = node.localName;
        let last = node[$_equals](this.tree.openElements[$_get](0));
        if (last) {
          if (!this.innerHTMLMode) dart.assertFailed(null, I[6], 474, 16, "innerHTMLMode");
          nodeName = this.innerHTML;
        }
        switch (nodeName) {
          case "select":
          case "colgroup":
          case "head":
          case "html":
          {
            if (!this.innerHTMLMode) dart.assertFailed(null, I[6], 484, 18, "innerHTMLMode");
            break;
          }
        }
        if (!last && node.namespaceUri != this.tree.defaultNamespace) {
          continue;
        }
        switch (nodeName) {
          case "select":
          {
            this.phase = this[_inSelectPhase];
            return;
          }
          case "td":
          {
            this.phase = this[_inCellPhase];
            return;
          }
          case "th":
          {
            this.phase = this[_inCellPhase];
            return;
          }
          case "tr":
          {
            this.phase = this[_inRowPhase];
            return;
          }
          case "tbody":
          {
            this.phase = this[_inTableBodyPhase];
            return;
          }
          case "thead":
          {
            this.phase = this[_inTableBodyPhase];
            return;
          }
          case "tfoot":
          {
            this.phase = this[_inTableBodyPhase];
            return;
          }
          case "caption":
          {
            this.phase = this[_inCaptionPhase];
            return;
          }
          case "colgroup":
          {
            this.phase = this[_inColumnGroupPhase];
            return;
          }
          case "table":
          {
            this.phase = this[_inTablePhase];
            return;
          }
          case "head":
          {
            this.phase = this[_inBodyPhase];
            return;
          }
          case "body":
          {
            this.phase = this[_inBodyPhase];
            return;
          }
          case "frameset":
          {
            this.phase = this[_inFramesetPhase];
            return;
          }
          case "html":
          {
            this.phase = this[_beforeHeadPhase];
            return;
          }
        }
      }
      this.phase = this[_inBodyPhase];
    }
    parseRCDataRawtext(token, contentType) {
      if (!(contentType === "RAWTEXT" || contentType === "RCDATA")) dart.assertFailed(null, I[6], 541, 12, "contentType == 'RAWTEXT' || contentType == 'RCDATA'");
      this.tree.insertElement(token$.StartTagToken.as(token));
      if (contentType === "RAWTEXT") {
        this.tokenizer.state = dart.bind(this.tokenizer, 'rawtextState');
      } else {
        this.tokenizer.state = dart.bind(this.tokenizer, 'rcdataState');
      }
      this.originalPhase = this.phase;
      this.phase = this[_textPhase];
    }
  };
  (parser$.HtmlParser.new = function(input, opts) {
    let t4;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let parseMeta = opts && 'parseMeta' in opts ? opts.parseMeta : true;
    let lowercaseElementName = opts && 'lowercaseElementName' in opts ? opts.lowercaseElementName : true;
    let lowercaseAttrName = opts && 'lowercaseAttrName' in opts ? opts.lowercaseAttrName : true;
    let strict = opts && 'strict' in opts ? opts.strict : false;
    let generateSpans = opts && 'generateSpans' in opts ? opts.generateSpans : false;
    let sourceUrl = opts && 'sourceUrl' in opts ? opts.sourceUrl : null;
    let tree = opts && 'tree' in opts ? opts.tree : null;
    this[errors] = T.JSArrayOfParseError().of([]);
    this[firstStartTag] = false;
    this[compatMode] = "no quirks";
    this[innerHTML] = null;
    this[__HtmlParser_phase] = null;
    this[originalPhase] = null;
    this[framesetOK] = true;
    this[__HtmlParser__initialPhase] = null;
    this[__HtmlParser__initialPhase_isSet] = false;
    this[__HtmlParser__beforeHtmlPhase] = null;
    this[__HtmlParser__beforeHtmlPhase_isSet] = false;
    this[__HtmlParser__beforeHeadPhase] = null;
    this[__HtmlParser__beforeHeadPhase_isSet] = false;
    this[__HtmlParser__inHeadPhase] = null;
    this[__HtmlParser__inHeadPhase_isSet] = false;
    this[__HtmlParser__afterHeadPhase] = null;
    this[__HtmlParser__afterHeadPhase_isSet] = false;
    this[__HtmlParser__inBodyPhase] = null;
    this[__HtmlParser__inBodyPhase_isSet] = false;
    this[__HtmlParser__textPhase] = null;
    this[__HtmlParser__textPhase_isSet] = false;
    this[__HtmlParser__inTablePhase] = null;
    this[__HtmlParser__inTablePhase_isSet] = false;
    this[__HtmlParser__inTableTextPhase] = null;
    this[__HtmlParser__inTableTextPhase_isSet] = false;
    this[__HtmlParser__inCaptionPhase] = null;
    this[__HtmlParser__inCaptionPhase_isSet] = false;
    this[__HtmlParser__inColumnGroupPhase] = null;
    this[__HtmlParser__inColumnGroupPhase_isSet] = false;
    this[__HtmlParser__inTableBodyPhase] = null;
    this[__HtmlParser__inTableBodyPhase_isSet] = false;
    this[__HtmlParser__inRowPhase] = null;
    this[__HtmlParser__inRowPhase_isSet] = false;
    this[__HtmlParser__inCellPhase] = null;
    this[__HtmlParser__inCellPhase_isSet] = false;
    this[__HtmlParser__inSelectPhase] = null;
    this[__HtmlParser__inSelectPhase_isSet] = false;
    this[__HtmlParser__inSelectInTablePhase] = null;
    this[__HtmlParser__inSelectInTablePhase_isSet] = false;
    this[__HtmlParser__inForeignContentPhase] = null;
    this[__HtmlParser__inForeignContentPhase_isSet] = false;
    this[__HtmlParser__afterBodyPhase] = null;
    this[__HtmlParser__afterBodyPhase_isSet] = false;
    this[__HtmlParser__inFramesetPhase] = null;
    this[__HtmlParser__inFramesetPhase_isSet] = false;
    this[__HtmlParser__afterFramesetPhase] = null;
    this[__HtmlParser__afterFramesetPhase_isSet] = false;
    this[__HtmlParser__afterAfterBodyPhase] = null;
    this[__HtmlParser__afterAfterBodyPhase_isSet] = false;
    this[__HtmlParser__afterAfterFramesetPhase] = null;
    this[__HtmlParser__afterAfterFramesetPhase_isSet] = false;
    this[strict$] = strict;
    this[generateSpans$0] = generateSpans;
    this[tree$] = (t4 = tree, t4 == null ? new treebuilder.TreeBuilder.new(true) : t4);
    this[tokenizer] = tokenizer$.HtmlTokenizer.is(input) ? input : new tokenizer$.HtmlTokenizer.new(input, {encoding: encoding, parseMeta: parseMeta, lowercaseElementName: lowercaseElementName, lowercaseAttrName: lowercaseAttrName, generateSpans: generateSpans, sourceUrl: sourceUrl});
    this.tokenizer.parser = this;
  }).prototype = parser$.HtmlParser.prototype;
  dart.addTypeTests(parser$.HtmlParser);
  dart.addTypeCaches(parser$.HtmlParser);
  dart.setMethodSignature(parser$.HtmlParser, () => ({
    __proto__: dart.getMethods(parser$.HtmlParser.__proto__),
    parse: dart.fnType(dom.Document, []),
    parseFragment: dart.fnType(dom.DocumentFragment, [], [core.String]),
    [_parse]: dart.fnType(dart.void, []),
    reset: dart.fnType(dart.void, []),
    isHTMLIntegrationPoint: dart.fnType(core.bool, [dom.Element]),
    isMathMLTextIntegrationPoint: dart.fnType(core.bool, [dom.Element]),
    inForeignContent: dart.fnType(core.bool, [token$.Token, core.int]),
    mainLoop: dart.fnType(dart.void, []),
    parseError: dart.fnType(dart.void, [dart.nullable(span.SourceSpan), core.String], [dart.nullable(core.Map)]),
    adjustMathMLAttributes: dart.fnType(dart.void, [token$.StartTagToken]),
    adjustSVGAttributes: dart.fnType(dart.void, [token$.StartTagToken]),
    adjustForeignAttributes: dart.fnType(dart.void, [token$.StartTagToken]),
    resetInsertionMode: dart.fnType(dart.void, []),
    parseRCDataRawtext: dart.fnType(dart.void, [token$.Token, core.String])
  }));
  dart.setGetterSignature(parser$.HtmlParser, () => ({
    __proto__: dart.getGetters(parser$.HtmlParser.__proto__),
    phase: parser$.Phase,
    [_initialPhase]: parser$.InitialPhase,
    [_beforeHtmlPhase]: parser$.BeforeHtmlPhase,
    [_beforeHeadPhase]: parser$.BeforeHeadPhase,
    [_inHeadPhase]: parser$.InHeadPhase,
    [_afterHeadPhase]: parser$.AfterHeadPhase,
    [_inBodyPhase]: parser$.InBodyPhase,
    [_textPhase]: parser$.TextPhase,
    [_inTablePhase]: parser$.InTablePhase,
    [_inTableTextPhase]: parser$.InTableTextPhase,
    [_inCaptionPhase]: parser$.InCaptionPhase,
    [_inColumnGroupPhase]: parser$.InColumnGroupPhase,
    [_inTableBodyPhase]: parser$.InTableBodyPhase,
    [_inRowPhase]: parser$.InRowPhase,
    [_inCellPhase]: parser$.InCellPhase,
    [_inSelectPhase]: parser$.InSelectPhase,
    [_inSelectInTablePhase]: parser$.InSelectInTablePhase,
    [_inForeignContentPhase]: parser$.InForeignContentPhase,
    [_afterBodyPhase]: parser$.AfterBodyPhase,
    [_inFramesetPhase]: parser$.InFramesetPhase,
    [_afterFramesetPhase]: parser$.AfterFramesetPhase,
    [_afterAfterBodyPhase]: parser$.AfterAfterBodyPhase,
    [_afterAfterFramesetPhase]: parser$.AfterAfterFramesetPhase,
    innerHTMLMode: core.bool,
    [_lastSpan]: dart.nullable(span.SourceSpan)
  }));
  dart.setSetterSignature(parser$.HtmlParser, () => ({
    __proto__: dart.getSetters(parser$.HtmlParser.__proto__),
    phase: parser$.Phase
  }));
  dart.setLibraryUri(parser$.HtmlParser, I[7]);
  dart.setFieldSignature(parser$.HtmlParser, () => ({
    __proto__: dart.getFields(parser$.HtmlParser.__proto__),
    strict: dart.finalFieldType(core.bool),
    generateSpans: dart.finalFieldType(core.bool),
    tokenizer: dart.finalFieldType(tokenizer$.HtmlTokenizer),
    tree: dart.finalFieldType(treebuilder.TreeBuilder),
    errors: dart.finalFieldType(core.List$(parser$.ParseError)),
    firstStartTag: dart.fieldType(core.bool),
    compatMode: dart.fieldType(core.String),
    innerHTML: dart.fieldType(dart.nullable(core.String)),
    [__HtmlParser_phase]: dart.fieldType(dart.nullable(parser$.Phase)),
    originalPhase: dart.fieldType(dart.nullable(parser$.Phase)),
    framesetOK: dart.fieldType(core.bool),
    [__HtmlParser__initialPhase]: dart.fieldType(dart.nullable(parser$.InitialPhase)),
    [__HtmlParser__initialPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__beforeHtmlPhase]: dart.fieldType(dart.nullable(parser$.BeforeHtmlPhase)),
    [__HtmlParser__beforeHtmlPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__beforeHeadPhase]: dart.fieldType(dart.nullable(parser$.BeforeHeadPhase)),
    [__HtmlParser__beforeHeadPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inHeadPhase]: dart.fieldType(dart.nullable(parser$.InHeadPhase)),
    [__HtmlParser__inHeadPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__afterHeadPhase]: dart.fieldType(dart.nullable(parser$.AfterHeadPhase)),
    [__HtmlParser__afterHeadPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inBodyPhase]: dart.fieldType(dart.nullable(parser$.InBodyPhase)),
    [__HtmlParser__inBodyPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__textPhase]: dart.fieldType(dart.nullable(parser$.TextPhase)),
    [__HtmlParser__textPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inTablePhase]: dart.fieldType(dart.nullable(parser$.InTablePhase)),
    [__HtmlParser__inTablePhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inTableTextPhase]: dart.fieldType(dart.nullable(parser$.InTableTextPhase)),
    [__HtmlParser__inTableTextPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inCaptionPhase]: dart.fieldType(dart.nullable(parser$.InCaptionPhase)),
    [__HtmlParser__inCaptionPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inColumnGroupPhase]: dart.fieldType(dart.nullable(parser$.InColumnGroupPhase)),
    [__HtmlParser__inColumnGroupPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inTableBodyPhase]: dart.fieldType(dart.nullable(parser$.InTableBodyPhase)),
    [__HtmlParser__inTableBodyPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inRowPhase]: dart.fieldType(dart.nullable(parser$.InRowPhase)),
    [__HtmlParser__inRowPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inCellPhase]: dart.fieldType(dart.nullable(parser$.InCellPhase)),
    [__HtmlParser__inCellPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inSelectPhase]: dart.fieldType(dart.nullable(parser$.InSelectPhase)),
    [__HtmlParser__inSelectPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inSelectInTablePhase]: dart.fieldType(dart.nullable(parser$.InSelectInTablePhase)),
    [__HtmlParser__inSelectInTablePhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inForeignContentPhase]: dart.fieldType(dart.nullable(parser$.InForeignContentPhase)),
    [__HtmlParser__inForeignContentPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__afterBodyPhase]: dart.fieldType(dart.nullable(parser$.AfterBodyPhase)),
    [__HtmlParser__afterBodyPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__inFramesetPhase]: dart.fieldType(dart.nullable(parser$.InFramesetPhase)),
    [__HtmlParser__inFramesetPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__afterFramesetPhase]: dart.fieldType(dart.nullable(parser$.AfterFramesetPhase)),
    [__HtmlParser__afterFramesetPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__afterAfterBodyPhase]: dart.fieldType(dart.nullable(parser$.AfterAfterBodyPhase)),
    [__HtmlParser__afterAfterBodyPhase_isSet]: dart.fieldType(core.bool),
    [__HtmlParser__afterAfterFramesetPhase]: dart.fieldType(dart.nullable(parser$.AfterAfterFramesetPhase)),
    [__HtmlParser__afterAfterFramesetPhase_isSet]: dart.fieldType(core.bool)
  }));
  var parser$1 = dart.privateName(parser$, "Phase.parser");
  var tree = dart.privateName(parser$, "Phase.tree");
  parser$.Phase = class Phase extends core.Object {
    get parser() {
      return this[parser$1];
    }
    set parser(value) {
      super.parser = value;
    }
    get tree() {
      return this[tree];
    }
    set tree(value) {
      super.tree = value;
    }
    processEOF() {
      dart.throw(new core.UnimplementedError.new());
    }
    processComment(token) {
      this.tree.insertComment(token, this.tree.openElements[$last]);
      return null;
    }
    processDoctype(token) {
      this.parser.parseError(token.span, "unexpected-doctype");
      return null;
    }
    processCharacters(token) {
      this.tree.insertText(token.data, token.span);
      return null;
    }
    processSpaceCharacters(token) {
      this.tree.insertText(token.data, token.span);
      return null;
    }
    processStartTag(token) {
      dart.throw(new core.UnimplementedError.new());
    }
    startTagHtml(token) {
      if (this.parser.firstStartTag === false && token.name === "html") {
        this.parser.parseError(token.span, "non-html-root");
      }
      this.tree.openElements[$_get](0).sourceSpan = token.span;
      token.data[$forEach](dart.fn((attr, value) => {
        this.tree.openElements[$_get](0).attributes[$putIfAbsent](attr, dart.fn(() => value, T.VoidToString()));
      }, T.ObjectAndStringTovoid()));
      this.parser.firstStartTag = false;
      return null;
    }
    processEndTag(token) {
      dart.throw(new core.UnimplementedError.new());
    }
    popOpenElementsUntil(token) {
      let name = token.name;
      let node = this.tree.openElements[$removeLast]();
      while (node.localName != name) {
        node = this.tree.openElements[$removeLast]();
      }
      node.endSourceSpan = token.span;
    }
  };
  (parser$.Phase.new = function(parser) {
    this[parser$1] = parser;
    this[tree] = parser.tree;
    ;
  }).prototype = parser$.Phase.prototype;
  dart.addTypeTests(parser$.Phase);
  dart.addTypeCaches(parser$.Phase);
  dart.setMethodSignature(parser$.Phase, () => ({
    __proto__: dart.getMethods(parser$.Phase.__proto__),
    processEOF: dart.fnType(core.bool, []),
    processComment: dart.fnType(dart.nullable(token$.Token), [token$.CommentToken]),
    processDoctype: dart.fnType(dart.nullable(token$.Token), [token$.DoctypeToken]),
    processCharacters: dart.fnType(dart.nullable(token$.Token), [token$.CharactersToken]),
    processSpaceCharacters: dart.fnType(dart.nullable(token$.Token), [token$.SpaceCharactersToken]),
    processStartTag: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagHtml: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    processEndTag: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken]),
    popOpenElementsUntil: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.Phase, I[7]);
  dart.setFieldSignature(parser$.Phase, () => ({
    __proto__: dart.getFields(parser$.Phase.__proto__),
    parser: dart.finalFieldType(parser$.HtmlParser),
    tree: dart.finalFieldType(treebuilder.TreeBuilder)
  }));
  parser$.InitialPhase = class InitialPhase extends parser$.Phase {
    processSpaceCharacters(token) {
      return null;
    }
    processComment(token) {
      this.tree.insertComment(token, this.tree.document);
      return null;
    }
    processDoctype(token) {
      let t6;
      let name = token.name;
      let publicId = (t6 = token.publicId, t6 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t6));
      let systemId = token.systemId;
      let correct = token.correct;
      if (name !== "html" || publicId != null || systemId != null && systemId !== "about:legacy-compat") {
        this.parser.parseError(token.span, "unknown-doctype");
      }
      publicId == null ? publicId = "" : null;
      this.tree.insertDoctype(token);
      if (!correct || token.name !== "html" || utils.startsWithAny(publicId, C[37] || CT.C37) || (C[38] || CT.C38)[$contains](publicId) || utils.startsWithAny(publicId, C[39] || CT.C39) && systemId == null || systemId != null && systemId[$toLowerCase]() === "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd") {
        this.parser.compatMode = "quirks";
      } else if (utils.startsWithAny(publicId, C[40] || CT.C40) || utils.startsWithAny(publicId, C[39] || CT.C39) && systemId != null) {
        this.parser.compatMode = "limited quirks";
      }
      this.parser.phase = this.parser[_beforeHtmlPhase];
      return null;
    }
    anythingElse() {
      this.parser.compatMode = "quirks";
      this.parser.phase = this.parser[_beforeHtmlPhase];
    }
    processCharacters(token) {
      this.parser.parseError(token.span, "expected-doctype-but-got-chars");
      this.anythingElse();
      return token;
    }
    processStartTag(token) {
      this.parser.parseError(token.span, "expected-doctype-but-got-start-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      this.anythingElse();
      return token;
    }
    processEndTag(token) {
      this.parser.parseError(token.span, "expected-doctype-but-got-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      this.anythingElse();
      return token;
    }
    processEOF() {
      this.parser.parseError(this.parser[_lastSpan], "expected-doctype-but-got-eof");
      this.anythingElse();
      return true;
    }
  };
  (parser$.InitialPhase.new = function(parser) {
    parser$.InitialPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InitialPhase.prototype;
  dart.addTypeTests(parser$.InitialPhase);
  dart.addTypeCaches(parser$.InitialPhase);
  dart.setMethodSignature(parser$.InitialPhase, () => ({
    __proto__: dart.getMethods(parser$.InitialPhase.__proto__),
    anythingElse: dart.fnType(dart.void, []),
    processCharacters: dart.fnType(token$.Token, [token$.CharactersToken]),
    processStartTag: dart.fnType(token$.Token, [token$.StartTagToken]),
    processEndTag: dart.fnType(token$.Token, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InitialPhase, I[7]);
  parser$.BeforeHtmlPhase = class BeforeHtmlPhase extends parser$.Phase {
    insertHtmlElement() {
      this.tree.insertRoot(new token$.StartTagToken.new("html", {data: new (T.LinkedMapOfObject$String()).new()}));
      this.parser.phase = this.parser[_beforeHeadPhase];
    }
    processEOF() {
      this.insertHtmlElement();
      return true;
    }
    processComment(token) {
      this.tree.insertComment(token, this.tree.document);
      return null;
    }
    processSpaceCharacters(token) {
      return null;
    }
    processCharacters(token) {
      this.insertHtmlElement();
      return token;
    }
    processStartTag(token) {
      if (token.name === "html") {
        this.parser.firstStartTag = true;
      }
      this.insertHtmlElement();
      return token;
    }
    processEndTag(token) {
      switch (token.name) {
        case "head":
        case "body":
        case "html":
        case "br":
        {
          this.insertHtmlElement();
          return token;
        }
        default:
        {
          this.parser.parseError(token.span, "unexpected-end-tag-before-html", new _js_helper.LinkedMap.from(["name", token.name]));
          return null;
        }
      }
    }
  };
  (parser$.BeforeHtmlPhase.new = function(parser) {
    parser$.BeforeHtmlPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.BeforeHtmlPhase.prototype;
  dart.addTypeTests(parser$.BeforeHtmlPhase);
  dart.addTypeCaches(parser$.BeforeHtmlPhase);
  dart.setMethodSignature(parser$.BeforeHtmlPhase, () => ({
    __proto__: dart.getMethods(parser$.BeforeHtmlPhase.__proto__),
    insertHtmlElement: dart.fnType(dart.void, []),
    processCharacters: dart.fnType(token$.Token, [token$.CharactersToken]),
    processStartTag: dart.fnType(token$.Token, [token$.StartTagToken])
  }));
  dart.setLibraryUri(parser$.BeforeHtmlPhase, I[7]);
  parser$.BeforeHeadPhase = class BeforeHeadPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "head":
        {
          this.startTagHead(token);
          return null;
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "head":
        case "body":
        case "html":
        case "br":
        {
          return this.endTagImplyHead(token);
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    processEOF() {
      this.startTagHead(new token$.StartTagToken.new("head", {data: new (T.LinkedMapOfObject$String()).new()}));
      return true;
    }
    processSpaceCharacters(token) {
      return null;
    }
    processCharacters(token) {
      this.startTagHead(new token$.StartTagToken.new("head", {data: new (T.LinkedMapOfObject$String()).new()}));
      return token;
    }
    startTagHtml(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    startTagHead(token) {
      this.tree.insertElement(token);
      this.tree.headPointer = this.tree.openElements[$last];
      this.parser.phase = this.parser[_inHeadPhase];
    }
    startTagOther(token) {
      this.startTagHead(new token$.StartTagToken.new("head", {data: new (T.LinkedMapOfObject$String()).new()}));
      return token;
    }
    endTagImplyHead(token) {
      this.startTagHead(new token$.StartTagToken.new("head", {data: new (T.LinkedMapOfObject$String()).new()}));
      return token;
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "end-tag-after-implied-root", new _js_helper.LinkedMap.from(["name", token.name]));
    }
  };
  (parser$.BeforeHeadPhase.new = function(parser) {
    parser$.BeforeHeadPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.BeforeHeadPhase.prototype;
  dart.addTypeTests(parser$.BeforeHeadPhase);
  dart.addTypeCaches(parser$.BeforeHeadPhase);
  dart.setMethodSignature(parser$.BeforeHeadPhase, () => ({
    __proto__: dart.getMethods(parser$.BeforeHeadPhase.__proto__),
    processCharacters: dart.fnType(token$.Token, [token$.CharactersToken]),
    startTagHead: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOther: dart.fnType(token$.Token, [token$.StartTagToken]),
    endTagImplyHead: dart.fnType(token$.Token, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.BeforeHeadPhase, I[7]);
  parser$.InHeadPhase = class InHeadPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "title":
        {
          this.startTagTitle(token);
          return null;
        }
        case "noscript":
        case "noframes":
        case "style":
        {
          this.startTagNoScriptNoFramesStyle(token);
          return null;
        }
        case "script":
        {
          this.startTagScript(token);
          return null;
        }
        case "base":
        case "basefont":
        case "bgsound":
        case "command":
        case "link":
        {
          this.startTagBaseLinkCommand(token);
          return null;
        }
        case "meta":
        {
          this.startTagMeta(token);
          return null;
        }
        case "head":
        {
          this.startTagHead(token);
          return null;
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "head":
        {
          this.endTagHead(token);
          return null;
        }
        case "br":
        case "html":
        case "body":
        {
          return this.endTagHtmlBodyBr(token);
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    processEOF() {
      this.anythingElse();
      return true;
    }
    processCharacters(token) {
      this.anythingElse();
      return token;
    }
    startTagHtml(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    startTagHead(token) {
      this.parser.parseError(token.span, "two-heads-are-not-better-than-one");
    }
    startTagBaseLinkCommand(token) {
      this.tree.insertElement(token);
      this.tree.openElements[$removeLast]();
      token.selfClosingAcknowledged = true;
    }
    startTagMeta(token) {
      this.tree.insertElement(token);
      this.tree.openElements[$removeLast]();
      token.selfClosingAcknowledged = true;
      let attributes = token.data;
      if (!this.parser.tokenizer.stream.charEncodingCertain) {
        let charset = attributes[$_get]("charset");
        let content = attributes[$_get]("content");
        if (charset != null) {
          this.parser.tokenizer.stream.changeEncoding(charset);
        } else if (content != null) {
          let data = new encoding_parser.EncodingBytes.new(content);
          let codec = new encoding_parser.ContentAttrParser.new(data).parse();
          this.parser.tokenizer.stream.changeEncoding(codec);
        }
      }
    }
    startTagTitle(token) {
      this.parser.parseRCDataRawtext(token, "RCDATA");
    }
    startTagNoScriptNoFramesStyle(token) {
      this.parser.parseRCDataRawtext(token, "RAWTEXT");
    }
    startTagScript(token) {
      this.tree.insertElement(token);
      this.parser.tokenizer.state = dart.bind(this.parser.tokenizer, 'scriptDataState');
      this.parser.originalPhase = this.parser.phase;
      this.parser.phase = this.parser[_textPhase];
    }
    startTagOther(token) {
      this.anythingElse();
      return token;
    }
    endTagHead(token) {
      let node = this.parser.tree.openElements[$removeLast]();
      if (!(node.localName === "head")) dart.assertFailed(null, I[6], 1047, 12, "node.localName == 'head'");
      node.endSourceSpan = token.span;
      this.parser.phase = this.parser[_afterHeadPhase];
    }
    endTagHtmlBodyBr(token) {
      this.anythingElse();
      return token;
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    anythingElse() {
      this.endTagHead(new token$.EndTagToken.new("head"));
    }
  };
  (parser$.InHeadPhase.new = function(parser) {
    parser$.InHeadPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InHeadPhase.prototype;
  dart.addTypeTests(parser$.InHeadPhase);
  dart.addTypeCaches(parser$.InHeadPhase);
  dart.setMethodSignature(parser$.InHeadPhase, () => ({
    __proto__: dart.getMethods(parser$.InHeadPhase.__proto__),
    processCharacters: dart.fnType(token$.Token, [token$.CharactersToken]),
    startTagHead: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagBaseLinkCommand: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagMeta: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagTitle: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagNoScriptNoFramesStyle: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagScript: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOther: dart.fnType(token$.Token, [token$.StartTagToken]),
    endTagHead: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagHtmlBodyBr: dart.fnType(token$.Token, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken]),
    anythingElse: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(parser$.InHeadPhase, I[7]);
  parser$.AfterHeadPhase = class AfterHeadPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "body":
        {
          this.startTagBody(token);
          return null;
        }
        case "frameset":
        {
          this.startTagFrameset(token);
          return null;
        }
        case "base":
        case "basefont":
        case "bgsound":
        case "link":
        case "meta":
        case "noframes":
        case "script":
        case "style":
        case "title":
        {
          this.startTagFromHead(token);
          return null;
        }
        case "head":
        {
          this.startTagHead(token);
          return null;
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "body":
        case "html":
        case "br":
        {
          return this.endTagHtmlBodyBr(token);
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    processEOF() {
      this.anythingElse();
      return true;
    }
    processCharacters(token) {
      this.anythingElse();
      return token;
    }
    startTagHtml(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    startTagBody(token) {
      this.parser.framesetOK = false;
      this.tree.insertElement(token);
      this.parser.phase = this.parser[_inBodyPhase];
    }
    startTagFrameset(token) {
      this.tree.insertElement(token);
      this.parser.phase = this.parser[_inFramesetPhase];
    }
    startTagFromHead(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-out-of-my-head", new _js_helper.LinkedMap.from(["name", token.name]));
      this.tree.openElements[$add](dom.Element.as(this.tree.headPointer));
      this.parser[_inHeadPhase].processStartTag(token);
      for (let node of this.tree.openElements[$reversed]) {
        if (node.localName === "head") {
          this.tree.openElements[$remove](node);
          break;
        }
      }
    }
    startTagHead(token) {
      this.parser.parseError(token.span, "unexpected-start-tag", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    startTagOther(token) {
      this.anythingElse();
      return token;
    }
    endTagHtmlBodyBr(token) {
      this.anythingElse();
      return token;
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    anythingElse() {
      this.tree.insertElement(new token$.StartTagToken.new("body", {data: new (T.LinkedMapOfObject$String()).new()}));
      this.parser.phase = this.parser[_inBodyPhase];
      this.parser.framesetOK = true;
    }
  };
  (parser$.AfterHeadPhase.new = function(parser) {
    parser$.AfterHeadPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.AfterHeadPhase.prototype;
  dart.addTypeTests(parser$.AfterHeadPhase);
  dart.addTypeCaches(parser$.AfterHeadPhase);
  dart.setMethodSignature(parser$.AfterHeadPhase, () => ({
    __proto__: dart.getMethods(parser$.AfterHeadPhase.__proto__),
    processCharacters: dart.fnType(token$.Token, [token$.CharactersToken]),
    startTagBody: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagFrameset: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagFromHead: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagHead: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOther: dart.fnType(token$.Token, [token$.StartTagToken]),
    endTagHtmlBodyBr: dart.fnType(token$.Token, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken]),
    anythingElse: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(parser$.AfterHeadPhase, I[7]);
  var dropNewline = dart.privateName(parser$, "InBodyPhase.dropNewline");
  parser$.InBodyPhase = class InBodyPhase extends parser$.Phase {
    get dropNewline() {
      return this[dropNewline];
    }
    set dropNewline(value) {
      this[dropNewline] = value;
    }
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "base":
        case "basefont":
        case "bgsound":
        case "command":
        case "link":
        case "meta":
        case "noframes":
        case "script":
        case "style":
        case "title":
        {
          return this.startTagProcessInHead(token);
        }
        case "body":
        {
          this.startTagBody(token);
          return null;
        }
        case "frameset":
        {
          this.startTagFrameset(token);
          return null;
        }
        case "address":
        case "article":
        case "aside":
        case "blockquote":
        case "center":
        case "details":
        case "dir":
        case "div":
        case "dl":
        case "fieldset":
        case "figcaption":
        case "figure":
        case "footer":
        case "header":
        case "hgroup":
        case "menu":
        case "nav":
        case "ol":
        case "p":
        case "section":
        case "summary":
        case "ul":
        {
          this.startTagCloseP(token);
          return null;
        }
        case "h1":
        case "h2":
        case "h3":
        case "h4":
        case "h5":
        case "h6":
        {
          this.startTagHeading(token);
          return null;
        }
        case "pre":
        case "listing":
        {
          this.startTagPreListing(token);
          return null;
        }
        case "form":
        {
          this.startTagForm(token);
          return null;
        }
        case "li":
        case "dd":
        case "dt":
        {
          this.startTagListItem(token);
          return null;
        }
        case "plaintext":
        {
          this.startTagPlaintext(token);
          return null;
        }
        case "a":
        {
          this.startTagA(token);
          return null;
        }
        case "b":
        case "big":
        case "code":
        case "em":
        case "font":
        case "i":
        case "s":
        case "small":
        case "strike":
        case "strong":
        case "tt":
        case "u":
        {
          this.startTagFormatting(token);
          return null;
        }
        case "nobr":
        {
          this.startTagNobr(token);
          return null;
        }
        case "button":
        {
          return this.startTagButton(token);
        }
        case "applet":
        case "marquee":
        case "object":
        {
          this.startTagAppletMarqueeObject(token);
          return null;
        }
        case "xmp":
        {
          this.startTagXmp(token);
          return null;
        }
        case "table":
        {
          this.startTagTable(token);
          return null;
        }
        case "area":
        case "br":
        case "embed":
        case "img":
        case "keygen":
        case "wbr":
        {
          this.startTagVoidFormatting(token);
          return null;
        }
        case "param":
        case "source":
        case "track":
        {
          this.startTagParamSource(token);
          return null;
        }
        case "input":
        {
          this.startTagInput(token);
          return null;
        }
        case "hr":
        {
          this.startTagHr(token);
          return null;
        }
        case "image":
        {
          this.startTagImage(token);
          return null;
        }
        case "isindex":
        {
          this.startTagIsIndex(token);
          return null;
        }
        case "textarea":
        {
          this.startTagTextarea(token);
          return null;
        }
        case "iframe":
        {
          this.startTagIFrame(token);
          return null;
        }
        case "noembed":
        case "noscript":
        {
          this.startTagRawtext(token);
          return null;
        }
        case "select":
        {
          this.startTagSelect(token);
          return null;
        }
        case "rp":
        case "rt":
        {
          this.startTagRpRt(token);
          return null;
        }
        case "option":
        case "optgroup":
        {
          this.startTagOpt(token);
          return null;
        }
        case "math":
        {
          this.startTagMath(token);
          return null;
        }
        case "svg":
        {
          this.startTagSvg(token);
          return null;
        }
        case "caption":
        case "col":
        case "colgroup":
        case "frame":
        case "head":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
        {
          this.startTagMisplaced(token);
          return null;
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "body":
        {
          this.endTagBody(token);
          return null;
        }
        case "html":
        {
          return this.endTagHtml(token);
        }
        case "address":
        case "article":
        case "aside":
        case "blockquote":
        case "button":
        case "center":
        case "details":
        case "dir":
        case "div":
        case "dl":
        case "fieldset":
        case "figcaption":
        case "figure":
        case "footer":
        case "header":
        case "hgroup":
        case "listing":
        case "menu":
        case "nav":
        case "ol":
        case "pre":
        case "section":
        case "summary":
        case "ul":
        {
          this.endTagBlock(token);
          return null;
        }
        case "form":
        {
          this.endTagForm(token);
          return null;
        }
        case "p":
        {
          this.endTagP(token);
          return null;
        }
        case "dd":
        case "dt":
        case "li":
        {
          this.endTagListItem(token);
          return null;
        }
        case "h1":
        case "h2":
        case "h3":
        case "h4":
        case "h5":
        case "h6":
        {
          this.endTagHeading(token);
          return null;
        }
        case "a":
        case "b":
        case "big":
        case "code":
        case "em":
        case "font":
        case "i":
        case "nobr":
        case "s":
        case "small":
        case "strike":
        case "strong":
        case "tt":
        case "u":
        {
          this.endTagFormatting(token);
          return null;
        }
        case "applet":
        case "marquee":
        case "object":
        {
          this.endTagAppletMarqueeObject(token);
          return null;
        }
        case "br":
        {
          this.endTagBr(token);
          return null;
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    isMatchingFormattingElement(node1, node2) {
      if (node1.localName != node2.localName || node1.namespaceUri != node2.namespaceUri) {
        return false;
      } else if (node1.attributes[$length] !== node2.attributes[$length]) {
        return false;
      } else {
        for (let key of node1.attributes[$keys]) {
          if (node1.attributes[$_get](key) != node2.attributes[$_get](key)) {
            return false;
          }
        }
      }
      return true;
    }
    addFormattingElement(token) {
      this.tree.insertElement(token);
      let element = this.tree.openElements[$last];
      let matchingElements = [];
      for (let node of this.tree.activeFormattingElements[$reversed]) {
        if (node == null) {
          break;
        } else if (this.isMatchingFormattingElement(dom.Element.as(node), element)) {
          matchingElements[$add](node);
        }
      }
      if (!(matchingElements[$length] <= 3)) dart.assertFailed(null, I[6], 1480, 12, "matchingElements.length <= 3");
      if (matchingElements[$length] === 3) {
        this.tree.activeFormattingElements.remove(matchingElements[$last]);
      }
      this.tree.activeFormattingElements.add(element);
    }
    processEOF() {
      for (let node of this.tree.openElements[$reversed]) {
        switch (node.localName) {
          case "dd":
          case "dt":
          case "li":
          case "p":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
          case "body":
          case "html":
          {
            continue;
          }
        }
        this.parser.parseError(node.sourceSpan, "expected-closing-tag-but-got-eof");
        break;
      }
      return false;
    }
    processSpaceCharactersDropNewline(token) {
      let data = token.data;
      this.dropNewline = false;
      if (data[$startsWith]("\n")) {
        let lastOpen = this.tree.openElements[$last];
        if ((C[41] || CT.C41)[$contains](lastOpen.localName) && !lastOpen.hasContent()) {
          data = data[$substring](1);
        }
      }
      if (data[$isNotEmpty]) {
        this.tree.reconstructActiveFormattingElements();
        this.tree.insertText(data, token.span);
      }
    }
    processCharacters(token) {
      if (token.data === " ") {
        return null;
      }
      this.tree.reconstructActiveFormattingElements();
      this.tree.insertText(token.data, token.span);
      if (this.parser.framesetOK && !utils.allWhitespace(token.data)) {
        this.parser.framesetOK = false;
      }
      return null;
    }
    processSpaceCharacters(token) {
      if (this.dropNewline) {
        this.processSpaceCharactersDropNewline(token);
      } else {
        this.tree.reconstructActiveFormattingElements();
        this.tree.insertText(token.data, token.span);
      }
      return null;
    }
    startTagProcessInHead(token) {
      return this.parser[_inHeadPhase].processStartTag(token);
    }
    startTagBody(token) {
      this.parser.parseError(token.span, "unexpected-start-tag", new _js_helper.LinkedMap.from(["name", "body"]));
      if (this.tree.openElements[$length] === 1 || this.tree.openElements[$_get](1).localName !== "body") {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 1564, 14, "parser.innerHTMLMode");
      } else {
        this.parser.framesetOK = false;
        token.data[$forEach](dart.fn((attr, value) => {
          this.tree.openElements[$_get](1).attributes[$putIfAbsent](attr, dart.fn(() => value, T.VoidToString()));
        }, T.ObjectAndStringTovoid()));
      }
    }
    startTagFrameset(token) {
      this.parser.parseError(token.span, "unexpected-start-tag", new _js_helper.LinkedMap.from(["name", "frameset"]));
      if (this.tree.openElements[$length] === 1 || this.tree.openElements[$_get](1).localName !== "body") {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 1577, 14, "parser.innerHTMLMode");
      } else if (this.parser.framesetOK) {
        if (this.tree.openElements[$_get](1).parentNode != null) {
          dart.nullCheck(this.tree.openElements[$_get](1).parentNode).nodes.remove(this.tree.openElements[$_get](1));
        }
        while (this.tree.openElements[$last].localName !== "html") {
          this.tree.openElements[$removeLast]();
        }
        this.tree.insertElement(token);
        this.parser.phase = this.parser[_inFramesetPhase];
      }
    }
    startTagCloseP(token) {
      if (this.tree.elementInScope("p", {variant: "button"})) {
        this.endTagP(new token$.EndTagToken.new("p"));
      }
      this.tree.insertElement(token);
    }
    startTagPreListing(token) {
      if (this.tree.elementInScope("p", {variant: "button"})) {
        this.endTagP(new token$.EndTagToken.new("p"));
      }
      this.tree.insertElement(token);
      this.parser.framesetOK = false;
      this.dropNewline = true;
    }
    startTagForm(token) {
      if (this.tree.formPointer != null) {
        this.parser.parseError(token.span, "unexpected-start-tag", new _js_helper.LinkedMap.from(["name", "form"]));
      } else {
        if (this.tree.elementInScope("p", {variant: "button"})) {
          this.endTagP(new token$.EndTagToken.new("p"));
        }
        this.tree.insertElement(token);
        this.tree.formPointer = this.tree.openElements[$last];
      }
    }
    startTagListItem(token) {
      this.parser.framesetOK = false;
      let stopNamesMap = C[42] || CT.C42;
      let stopNames = dart.nullCheck(stopNamesMap[$_get](dart.nullCheck(token.name)));
      for (let node of this.tree.openElements[$reversed]) {
        if (stopNames[$contains](node.localName)) {
          this.parser.phase.processEndTag(new token$.EndTagToken.new(node.localName));
          break;
        }
        if (constants.specialElements[$contains](parser$.getElementNameTuple(node)) && !(C[45] || CT.C45)[$contains](node.localName)) {
          break;
        }
      }
      if (this.tree.elementInScope("p", {variant: "button"})) {
        this.parser.phase.processEndTag(new token$.EndTagToken.new("p"));
      }
      this.tree.insertElement(token);
    }
    startTagPlaintext(token) {
      if (this.tree.elementInScope("p", {variant: "button"})) {
        this.endTagP(new token$.EndTagToken.new("p"));
      }
      this.tree.insertElement(token);
      this.parser.tokenizer.state = dart.bind(this.parser.tokenizer, 'plaintextState');
    }
    startTagHeading(token) {
      if (this.tree.elementInScope("p", {variant: "button"})) {
        this.endTagP(new token$.EndTagToken.new("p"));
      }
      if (constants.headingElements[$contains](this.tree.openElements[$last].localName)) {
        this.parser.parseError(token.span, "unexpected-start-tag", new _js_helper.LinkedMap.from(["name", token.name]));
        this.tree.openElements[$removeLast]();
      }
      this.tree.insertElement(token);
    }
    startTagA(token) {
      let afeAElement = this.tree.elementInActiveFormattingElements("a");
      if (afeAElement != null) {
        this.parser.parseError(token.span, "unexpected-start-tag-implies-end-tag", new _js_helper.LinkedMap.from(["startName", "a", "endName", "a"]));
        this.endTagFormatting(new token$.EndTagToken.new("a"));
        this.tree.openElements[$remove](afeAElement);
        this.tree.activeFormattingElements.remove(afeAElement);
      }
      this.tree.reconstructActiveFormattingElements();
      this.addFormattingElement(token);
    }
    startTagFormatting(token) {
      this.tree.reconstructActiveFormattingElements();
      this.addFormattingElement(token);
    }
    startTagNobr(token) {
      this.tree.reconstructActiveFormattingElements();
      if (this.tree.elementInScope("nobr")) {
        this.parser.parseError(token.span, "unexpected-start-tag-implies-end-tag", new _js_helper.LinkedMap.from(["startName", "nobr", "endName", "nobr"]));
        this.processEndTag(new token$.EndTagToken.new("nobr"));
        this.tree.reconstructActiveFormattingElements();
      }
      this.addFormattingElement(token);
    }
    startTagButton(token) {
      if (this.tree.elementInScope("button")) {
        this.parser.parseError(token.span, "unexpected-start-tag-implies-end-tag", new _js_helper.LinkedMap.from(["startName", "button", "endName", "button"]));
        this.processEndTag(new token$.EndTagToken.new("button"));
        return token;
      } else {
        this.tree.reconstructActiveFormattingElements();
        this.tree.insertElement(token);
        this.parser.framesetOK = false;
      }
      return null;
    }
    startTagAppletMarqueeObject(token) {
      this.tree.reconstructActiveFormattingElements();
      this.tree.insertElement(token);
      this.tree.activeFormattingElements.add(null);
      this.parser.framesetOK = false;
    }
    startTagXmp(token) {
      if (this.tree.elementInScope("p", {variant: "button"})) {
        this.endTagP(new token$.EndTagToken.new("p"));
      }
      this.tree.reconstructActiveFormattingElements();
      this.parser.framesetOK = false;
      this.parser.parseRCDataRawtext(token, "RAWTEXT");
    }
    startTagTable(token) {
      if (this.parser.compatMode !== "quirks") {
        if (this.tree.elementInScope("p", {variant: "button"})) {
          this.processEndTag(new token$.EndTagToken.new("p"));
        }
      }
      this.tree.insertElement(token);
      this.parser.framesetOK = false;
      this.parser.phase = this.parser[_inTablePhase];
    }
    startTagVoidFormatting(token) {
      this.tree.reconstructActiveFormattingElements();
      this.tree.insertElement(token);
      this.tree.openElements[$removeLast]();
      token.selfClosingAcknowledged = true;
      this.parser.framesetOK = false;
    }
    startTagInput(token) {
      let t6;
      let savedFramesetOK = this.parser.framesetOK;
      this.startTagVoidFormatting(token);
      if ((t6 = token.data[$_get]("type"), t6 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t6)) === "hidden") {
        this.parser.framesetOK = savedFramesetOK;
      }
    }
    startTagParamSource(token) {
      this.tree.insertElement(token);
      this.tree.openElements[$removeLast]();
      token.selfClosingAcknowledged = true;
    }
    startTagHr(token) {
      if (this.tree.elementInScope("p", {variant: "button"})) {
        this.endTagP(new token$.EndTagToken.new("p"));
      }
      this.tree.insertElement(token);
      this.tree.openElements[$removeLast]();
      token.selfClosingAcknowledged = true;
      this.parser.framesetOK = false;
    }
    startTagImage(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-treated-as", new _js_helper.LinkedMap.from(["originalName", "image", "newName", "img"]));
      this.processStartTag(new token$.StartTagToken.new("img", {data: token.data, selfClosing: token.selfClosing}));
    }
    startTagIsIndex(token) {
      this.parser.parseError(token.span, "deprecated-tag", new _js_helper.LinkedMap.from(["name", "isindex"]));
      if (this.tree.formPointer != null) {
        return;
      }
      let formAttrs = new (T.LinkedMapOfObject$String()).new();
      let dataAction = token.data[$_get]("action");
      if (dataAction != null) {
        formAttrs[$_set]("action", dataAction);
      }
      this.processStartTag(new token$.StartTagToken.new("form", {data: formAttrs}));
      this.processStartTag(new token$.StartTagToken.new("hr", {data: new (T.LinkedMapOfObject$String()).new()}));
      this.processStartTag(new token$.StartTagToken.new("label", {data: new (T.LinkedMapOfObject$String()).new()}));
      let prompt = token.data[$_get]("prompt");
      prompt == null ? prompt = "This is a searchable index. Enter search keywords: " : null;
      this.processCharacters(new token$.CharactersToken.new(prompt));
      let attributes = T.LinkedHashMapOfObject$String().from(token.data);
      attributes[$remove]("action");
      attributes[$remove]("prompt");
      attributes[$_set]("name", "isindex");
      this.processStartTag(new token$.StartTagToken.new("input", {data: attributes, selfClosing: token.selfClosing}));
      this.processEndTag(new token$.EndTagToken.new("label"));
      this.processStartTag(new token$.StartTagToken.new("hr", {data: new (T.LinkedMapOfObject$String()).new()}));
      this.processEndTag(new token$.EndTagToken.new("form"));
    }
    startTagTextarea(token) {
      this.tree.insertElement(token);
      this.parser.tokenizer.state = dart.bind(this.parser.tokenizer, 'rcdataState');
      this.dropNewline = true;
      this.parser.framesetOK = false;
    }
    startTagIFrame(token) {
      this.parser.framesetOK = false;
      this.startTagRawtext(token);
    }
    startTagRawtext(token) {
      this.parser.parseRCDataRawtext(token, "RAWTEXT");
    }
    startTagOpt(token) {
      if (this.tree.openElements[$last].localName === "option") {
        this.parser.phase.processEndTag(new token$.EndTagToken.new("option"));
      }
      this.tree.reconstructActiveFormattingElements();
      this.parser.tree.insertElement(token);
    }
    startTagSelect(token) {
      this.tree.reconstructActiveFormattingElements();
      this.tree.insertElement(token);
      this.parser.framesetOK = false;
      if (this.parser[_inTablePhase][$_equals](this.parser.phase) || this.parser[_inCaptionPhase][$_equals](this.parser.phase) || this.parser[_inColumnGroupPhase][$_equals](this.parser.phase) || this.parser[_inTableBodyPhase][$_equals](this.parser.phase) || this.parser[_inRowPhase][$_equals](this.parser.phase) || this.parser[_inCellPhase][$_equals](this.parser.phase)) {
        this.parser.phase = this.parser[_inSelectInTablePhase];
      } else {
        this.parser.phase = this.parser[_inSelectPhase];
      }
    }
    startTagRpRt(token) {
      if (this.tree.elementInScope("ruby")) {
        this.tree.generateImpliedEndTags();
        let last = this.tree.openElements[$last];
        if (last.localName !== "ruby") {
          this.parser.parseError(last.sourceSpan, "undefined-error");
        }
      }
      this.tree.insertElement(token);
    }
    startTagMath(token) {
      this.tree.reconstructActiveFormattingElements();
      this.parser.adjustMathMLAttributes(token);
      this.parser.adjustForeignAttributes(token);
      token.namespace = constants.Namespaces.mathml;
      this.tree.insertElement(token);
      if (token.selfClosing) {
        this.tree.openElements[$removeLast]();
        token.selfClosingAcknowledged = true;
      }
    }
    startTagSvg(token) {
      this.tree.reconstructActiveFormattingElements();
      this.parser.adjustSVGAttributes(token);
      this.parser.adjustForeignAttributes(token);
      token.namespace = "http://www.w3.org/2000/svg";
      this.tree.insertElement(token);
      if (token.selfClosing) {
        this.tree.openElements[$removeLast]();
        token.selfClosingAcknowledged = true;
      }
    }
    startTagMisplaced(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-ignored", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    startTagOther(token) {
      this.tree.reconstructActiveFormattingElements();
      this.tree.insertElement(token);
      return null;
    }
    endTagP(token) {
      if (!this.tree.elementInScope("p", {variant: "button"})) {
        this.startTagCloseP(new token$.StartTagToken.new("p", {data: new (T.LinkedMapOfObject$String()).new()}));
        this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", "p"]));
        this.endTagP(new token$.EndTagToken.new("p"));
      } else {
        this.tree.generateImpliedEndTags("p");
        if (this.tree.openElements[$last].localName !== "p") {
          this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", "p"]));
        }
        this.popOpenElementsUntil(token);
      }
    }
    endTagBody(token) {
      if (!this.tree.elementInScope("body")) {
        this.parser.parseError(token.span, "undefined-error");
        return;
      } else if (this.tree.openElements[$last].localName === "body") {
        this.tree.openElements[$last].endSourceSpan = token.span;
      } else {
        for (let node of utils.slice(dom.Element, this.tree.openElements, 2)) {
          switch (node.localName) {
            case "dd":
            case "dt":
            case "li":
            case "optgroup":
            case "option":
            case "p":
            case "rp":
            case "rt":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
            case "body":
            case "html":
            {
              continue;
            }
          }
          this.parser.parseError(token.span, "expected-one-end-tag-but-got-another", new _js_helper.LinkedMap.from(["gotName", "body", "expectedName", node.localName]));
          break;
        }
      }
      this.parser.phase = this.parser[_afterBodyPhase];
    }
    endTagHtml(token) {
      if (this.tree.elementInScope("body")) {
        this.endTagBody(new token$.EndTagToken.new("body"));
        return token;
      }
      return null;
    }
    endTagBlock(token) {
      if (token.name === "pre") {
        this.dropNewline = false;
      }
      let inScope = this.tree.elementInScope(token.name);
      if (inScope) {
        this.tree.generateImpliedEndTags();
      }
      if (this.tree.openElements[$last].localName != token.name) {
        this.parser.parseError(token.span, "end-tag-too-early", new _js_helper.LinkedMap.from(["name", token.name]));
      }
      if (inScope) {
        this.popOpenElementsUntil(token);
      }
    }
    endTagForm(token) {
      let node = this.tree.formPointer;
      this.tree.formPointer = null;
      if (node == null || !this.tree.elementInScope(node)) {
        this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", "form"]));
      } else {
        this.tree.generateImpliedEndTags();
        if (!this.tree.openElements[$last][$_equals](node)) {
          this.parser.parseError(token.span, "end-tag-too-early-ignored", new _js_helper.LinkedMap.from(["name", "form"]));
        }
        this.tree.openElements[$remove](node);
        node.endSourceSpan = token.span;
      }
    }
    endTagListItem(token) {
      let variant = null;
      if (token.name === "li") {
        variant = "list";
      } else {
        variant = null;
      }
      if (!this.tree.elementInScope(token.name, {variant: variant})) {
        this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      } else {
        this.tree.generateImpliedEndTags(token.name);
        if (this.tree.openElements[$last].localName != token.name) {
          this.parser.parseError(token.span, "end-tag-too-early", new _js_helper.LinkedMap.from(["name", token.name]));
        }
        this.popOpenElementsUntil(token);
      }
    }
    endTagHeading(token) {
      for (let item of constants.headingElements) {
        if (this.tree.elementInScope(item)) {
          this.tree.generateImpliedEndTags();
          break;
        }
      }
      if (this.tree.openElements[$last].localName != token.name) {
        this.parser.parseError(token.span, "end-tag-too-early", new _js_helper.LinkedMap.from(["name", token.name]));
      }
      for (let item of constants.headingElements) {
        if (this.tree.elementInScope(item)) {
          let node = this.tree.openElements[$removeLast]();
          while (!constants.headingElements[$contains](node.localName)) {
            node = this.tree.openElements[$removeLast]();
          }
          node.endSourceSpan = token.span;
          break;
        }
      }
    }
    endTagFormatting(token) {
      let outerLoopCounter = 0;
      while (outerLoopCounter < 8) {
        outerLoopCounter = outerLoopCounter + 1;
        let formattingElement = this.tree.elementInActiveFormattingElements(token.name);
        if (formattingElement == null || this.tree.openElements[$contains](formattingElement) && !this.tree.elementInScope(formattingElement.localName)) {
          this.parser.parseError(token.span, "adoption-agency-1.1", new _js_helper.LinkedMap.from(["name", token.name]));
          return;
        } else if (!this.tree.openElements[$contains](formattingElement)) {
          this.parser.parseError(token.span, "adoption-agency-1.2", new _js_helper.LinkedMap.from(["name", token.name]));
          this.tree.activeFormattingElements.remove(formattingElement);
          return;
        }
        if (!dart.equals(formattingElement, this.tree.openElements[$last])) {
          this.parser.parseError(token.span, "adoption-agency-1.3", new _js_helper.LinkedMap.from(["name", token.name]));
        }
        let afeIndex = this.tree.openElements[$indexOf](formattingElement);
        let furthestBlock = null;
        for (let element of utils.slice(dom.Element, this.tree.openElements, afeIndex)) {
          if (constants.specialElements[$contains](parser$.getElementNameTuple(element))) {
            furthestBlock = element;
            break;
          }
        }
        if (furthestBlock == null) {
          let element = this.tree.openElements[$removeLast]();
          while (!element[$_equals](formattingElement)) {
            element = this.tree.openElements[$removeLast]();
          }
          element.endSourceSpan = token.span;
          this.tree.activeFormattingElements.remove(element);
          return;
        }
        let commonAncestor = this.tree.openElements[$_get](afeIndex - 1);
        let bookmark = this.tree.activeFormattingElements[$indexOf](formattingElement);
        let lastNode = furthestBlock;
        let node = furthestBlock;
        let innerLoopCounter = 0;
        let index = this.tree.openElements[$indexOf](node);
        while (innerLoopCounter < 3) {
          innerLoopCounter = innerLoopCounter + 1;
          index = index - 1;
          node = this.tree.openElements[$_get](index);
          if (!this.tree.activeFormattingElements[$contains](node)) {
            this.tree.openElements[$remove](node);
            continue;
          }
          if (node[$_equals](formattingElement)) {
            break;
          }
          if (lastNode[$_equals](furthestBlock)) {
            bookmark = this.tree.activeFormattingElements[$indexOf](node) + 1;
          }
          let clone = node.clone(false);
          this.tree.activeFormattingElements._set(this.tree.activeFormattingElements[$indexOf](node), clone);
          this.tree.openElements[$_set](this.tree.openElements[$indexOf](node), clone);
          node = clone;
          if (lastNode.parentNode != null) {
            dart.nullCheck(lastNode.parentNode).nodes.remove(lastNode);
          }
          node.nodes.add(lastNode);
          lastNode = node;
        }
        if (lastNode.parentNode != null) {
          dart.nullCheck(lastNode.parentNode).nodes.remove(lastNode);
        }
        if ((C[46] || CT.C46)[$contains](commonAncestor.localName)) {
          let nodePos = this.tree.getTableMisnestedNodePosition();
          dart.nullCheck(nodePos[$_get](0)).insertBefore(lastNode, nodePos[$_get](1));
        } else {
          commonAncestor.nodes.add(lastNode);
        }
        let clone = formattingElement.clone(false);
        furthestBlock.reparentChildren(clone);
        furthestBlock.nodes.add(clone);
        this.tree.activeFormattingElements.remove(formattingElement);
        this.tree.activeFormattingElements.insert(math.min(core.int, bookmark, this.tree.activeFormattingElements.length), clone);
        this.tree.openElements[$remove](formattingElement);
        this.tree.openElements[$insert](this.tree.openElements[$indexOf](furthestBlock) + 1, clone);
      }
    }
    endTagAppletMarqueeObject(token) {
      if (this.tree.elementInScope(token.name)) {
        this.tree.generateImpliedEndTags();
      }
      if (this.tree.openElements[$last].localName != token.name) {
        this.parser.parseError(token.span, "end-tag-too-early", new _js_helper.LinkedMap.from(["name", token.name]));
      }
      if (this.tree.elementInScope(token.name)) {
        this.popOpenElementsUntil(token);
        this.tree.clearActiveFormattingElements();
      }
    }
    endTagBr(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-treated-as", new _js_helper.LinkedMap.from(["originalName", "br", "newName", "br element"]));
      this.tree.reconstructActiveFormattingElements();
      this.tree.insertElement(new token$.StartTagToken.new("br", {data: new (T.LinkedMapOfObject$String()).new()}));
      this.tree.openElements[$removeLast]();
    }
    endTagOther(token) {
      for (let node of this.tree.openElements[$reversed]) {
        if (node.localName == token.name) {
          this.tree.generateImpliedEndTags(token.name);
          if (this.tree.openElements[$last].localName != token.name) {
            this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
          }
          while (!this.tree.openElements[$removeLast]()[$_equals](node)) {
          }
          node.endSourceSpan = token.span;
          break;
        } else {
          if (constants.specialElements[$contains](parser$.getElementNameTuple(node))) {
            this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
            break;
          }
        }
      }
    }
  };
  (parser$.InBodyPhase.new = function(parser) {
    this[dropNewline] = false;
    parser$.InBodyPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InBodyPhase.prototype;
  dart.addTypeTests(parser$.InBodyPhase);
  dart.addTypeCaches(parser$.InBodyPhase);
  dart.setMethodSignature(parser$.InBodyPhase, () => ({
    __proto__: dart.getMethods(parser$.InBodyPhase.__proto__),
    isMatchingFormattingElement: dart.fnType(core.bool, [dom.Element, dom.Element]),
    addFormattingElement: dart.fnType(dart.void, [token$.StartTagToken]),
    processSpaceCharactersDropNewline: dart.fnType(dart.void, [token$.StringToken]),
    startTagProcessInHead: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagBody: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagFrameset: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagCloseP: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagPreListing: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagForm: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagListItem: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagPlaintext: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagHeading: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagA: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagFormatting: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagNobr: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagButton: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagAppletMarqueeObject: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagXmp: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagTable: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagVoidFormatting: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagInput: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagParamSource: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagHr: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagImage: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagIsIndex: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagTextarea: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagIFrame: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagRawtext: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOpt: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagSelect: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagRpRt: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagMath: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagSvg: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagMisplaced: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagP: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagBody: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagHtml: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken]),
    endTagBlock: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagForm: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagListItem: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagHeading: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagFormatting: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagAppletMarqueeObject: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagBr: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InBodyPhase, I[7]);
  dart.setFieldSignature(parser$.InBodyPhase, () => ({
    __proto__: dart.getFields(parser$.InBodyPhase.__proto__),
    dropNewline: dart.fieldType(core.bool)
  }));
  parser$.TextPhase = class TextPhase extends parser$.Phase {
    processStartTag(token) {
      dart.throw(new core.StateError.new("Cannot process start stag in text phase"));
    }
    processEndTag(token) {
      if (token.name === "script") {
        this.endTagScript(token);
        return null;
      }
      this.endTagOther(token);
      return null;
    }
    processCharacters(token) {
      this.tree.insertText(token.data, token.span);
      return null;
    }
    processEOF() {
      let last = this.tree.openElements[$last];
      this.parser.parseError(last.sourceSpan, "expected-named-closing-tag-but-got-eof", new _js_helper.LinkedMap.from(["name", last.localName]));
      this.tree.openElements[$removeLast]();
      this.parser.phase = dart.nullCheck(this.parser.originalPhase);
      return true;
    }
    endTagScript(token) {
      let node = this.tree.openElements[$removeLast]();
      if (!(node.localName === "script")) dart.assertFailed(null, I[6], 2265, 12, "node.localName == 'script'");
      this.parser.phase = dart.nullCheck(this.parser.originalPhase);
    }
    endTagOther(token) {
      this.tree.openElements[$removeLast]();
      this.parser.phase = dart.nullCheck(this.parser.originalPhase);
    }
  };
  (parser$.TextPhase.new = function(parser) {
    parser$.TextPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.TextPhase.prototype;
  dart.addTypeTests(parser$.TextPhase);
  dart.addTypeCaches(parser$.TextPhase);
  dart.setMethodSignature(parser$.TextPhase, () => ({
    __proto__: dart.getMethods(parser$.TextPhase.__proto__),
    processStartTag: dart.fnType(token$.Token, [token$.StartTagToken]),
    endTagScript: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.TextPhase, I[7]);
  parser$.InTablePhase = class InTablePhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "caption":
        {
          this.startTagCaption(token);
          return null;
        }
        case "colgroup":
        {
          this.startTagColgroup(token);
          return null;
        }
        case "col":
        {
          return this.startTagCol(token);
        }
        case "tbody":
        case "tfoot":
        case "thead":
        {
          this.startTagRowGroup(token);
          return null;
        }
        case "td":
        case "th":
        case "tr":
        {
          return this.startTagImplyTbody(token);
        }
        case "table":
        {
          return this.startTagTable(token);
        }
        case "style":
        case "script":
        {
          return this.startTagStyleScript(token);
        }
        case "input":
        {
          this.startTagInput(token);
          return null;
        }
        case "form":
        {
          this.startTagForm(token);
          return null;
        }
        default:
        {
          this.startTagOther(token);
          return null;
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "table":
        {
          this.endTagTable(token);
          return null;
        }
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
        {
          this.endTagIgnore(token);
          return null;
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    clearStackToTableContext() {
      while (this.tree.openElements[$last].localName !== "table" && this.tree.openElements[$last].localName !== "html") {
        this.tree.openElements[$removeLast]();
      }
    }
    processEOF() {
      let last = this.tree.openElements[$last];
      if (last.localName !== "html") {
        this.parser.parseError(last.sourceSpan, "eof-in-table");
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 2364, 14, "parser.innerHTMLMode");
      }
      return false;
    }
    processSpaceCharacters(token) {
      let originalPhase = this.parser.phase;
      this.parser.phase = this.parser[_inTableTextPhase];
      this.parser[_inTableTextPhase].originalPhase = originalPhase;
      this.parser.phase.processSpaceCharacters(token);
      return null;
    }
    processCharacters(token) {
      let originalPhase = this.parser.phase;
      this.parser.phase = this.parser[_inTableTextPhase];
      this.parser[_inTableTextPhase].originalPhase = originalPhase;
      this.parser.phase.processCharacters(token);
      return null;
    }
    insertText(token) {
      this.tree.insertFromTable = true;
      this.parser[_inBodyPhase].processCharacters(token);
      this.tree.insertFromTable = false;
    }
    startTagCaption(token) {
      this.clearStackToTableContext();
      this.tree.activeFormattingElements.add(null);
      this.tree.insertElement(token);
      this.parser.phase = this.parser[_inCaptionPhase];
    }
    startTagColgroup(token) {
      this.clearStackToTableContext();
      this.tree.insertElement(token);
      this.parser.phase = this.parser[_inColumnGroupPhase];
    }
    startTagCol(token) {
      this.startTagColgroup(new token$.StartTagToken.new("colgroup", {data: new (T.LinkedMapOfObject$String()).new()}));
      return token;
    }
    startTagRowGroup(token) {
      this.clearStackToTableContext();
      this.tree.insertElement(token);
      this.parser.phase = this.parser[_inTableBodyPhase];
    }
    startTagImplyTbody(token) {
      this.startTagRowGroup(new token$.StartTagToken.new("tbody", {data: new (T.LinkedMapOfObject$String()).new()}));
      return token;
    }
    startTagTable(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-implies-end-tag", new _js_helper.LinkedMap.from(["startName", "table", "endName", "table"]));
      this.parser.phase.processEndTag(new token$.EndTagToken.new("table"));
      if (!this.parser.innerHTMLMode) {
        return token;
      }
      return null;
    }
    startTagStyleScript(token) {
      return this.parser[_inHeadPhase].processStartTag(token);
    }
    startTagInput(token) {
      let t6;
      if ((t6 = token.data[$_get]("type"), t6 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t6)) === "hidden") {
        this.parser.parseError(token.span, "unexpected-hidden-input-in-table");
        this.tree.insertElement(token);
        this.tree.openElements[$removeLast]();
      } else {
        this.startTagOther(token);
      }
    }
    startTagForm(token) {
      this.parser.parseError(token.span, "unexpected-form-in-table");
      if (this.tree.formPointer == null) {
        this.tree.insertElement(token);
        this.tree.formPointer = this.tree.openElements[$last];
        this.tree.openElements[$removeLast]();
      }
    }
    startTagOther(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-implies-table-voodoo", new _js_helper.LinkedMap.from(["name", token.name]));
      this.tree.insertFromTable = true;
      this.parser[_inBodyPhase].processStartTag(token);
      this.tree.insertFromTable = false;
    }
    endTagTable(token) {
      if (this.tree.elementInScope("table", {variant: "table"})) {
        this.tree.generateImpliedEndTags();
        let last = this.tree.openElements[$last];
        if (last.localName !== "table") {
          this.parser.parseError(token.span, "end-tag-too-early-named", new _js_helper.LinkedMap.from(["gotName", "table", "expectedName", last.localName]));
        }
        while (this.tree.openElements[$last].localName !== "table") {
          this.tree.openElements[$removeLast]();
        }
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
        this.parser.resetInsertionMode();
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 2486, 14, "parser.innerHTMLMode");
        this.parser.parseError(token.span, "undefined-error");
      }
    }
    endTagIgnore(token) {
      this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-implies-table-voodoo", new _js_helper.LinkedMap.from(["name", token.name]));
      this.tree.insertFromTable = true;
      this.parser[_inBodyPhase].processEndTag(token);
      this.tree.insertFromTable = false;
    }
  };
  (parser$.InTablePhase.new = function(parser) {
    parser$.InTablePhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InTablePhase.prototype;
  dart.addTypeTests(parser$.InTablePhase);
  dart.addTypeCaches(parser$.InTablePhase);
  dart.setMethodSignature(parser$.InTablePhase, () => ({
    __proto__: dart.getMethods(parser$.InTablePhase.__proto__),
    clearStackToTableContext: dart.fnType(dart.void, []),
    insertText: dart.fnType(dart.void, [token$.CharactersToken]),
    startTagCaption: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagColgroup: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagCol: dart.fnType(token$.Token, [token$.StartTagToken]),
    startTagRowGroup: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagImplyTbody: dart.fnType(token$.Token, [token$.StartTagToken]),
    startTagTable: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagStyleScript: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagInput: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagForm: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.void, [token$.StartTagToken]),
    endTagTable: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagIgnore: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InTablePhase, I[7]);
  var originalPhase$ = dart.privateName(parser$, "InTableTextPhase.originalPhase");
  var characterTokens = dart.privateName(parser$, "InTableTextPhase.characterTokens");
  parser$.InTableTextPhase = class InTableTextPhase extends parser$.Phase {
    get originalPhase() {
      return this[originalPhase$];
    }
    set originalPhase(value) {
      this[originalPhase$] = value;
    }
    get characterTokens() {
      return this[characterTokens];
    }
    set characterTokens(value) {
      this[characterTokens] = value;
    }
    flushCharacters() {
      let t6;
      if (this.characterTokens[$isEmpty]) return;
      let data = this.characterTokens[$map](core.String, dart.fn(t => t.data, T.StringTokenToString()))[$join]("");
      let span = null;
      if (this.parser.generateSpans) {
        span = dart.nullCheck(this.characterTokens[$_get](0).span).expand(dart.nullCheck(this.characterTokens[$last].span));
      }
      if (!utils.allWhitespace(data)) {
        this.parser[_inTablePhase].insertText((t6 = new token$.CharactersToken.new(data), (() => {
          t6.span = span;
          return t6;
        })()));
      } else if (data[$isNotEmpty]) {
        this.tree.insertText(data, span);
      }
      this.characterTokens = T.JSArrayOfStringToken().of([]);
    }
    processComment(token) {
      this.flushCharacters();
      this.parser.phase = dart.nullCheck(this.originalPhase);
      return token;
    }
    processEOF() {
      this.flushCharacters();
      this.parser.phase = dart.nullCheck(this.originalPhase);
      return true;
    }
    processCharacters(token) {
      if (token.data === " ") {
        return null;
      }
      this.characterTokens[$add](token);
      return null;
    }
    processSpaceCharacters(token) {
      this.characterTokens[$add](token);
      return null;
    }
    processStartTag(token) {
      this.flushCharacters();
      this.parser.phase = dart.nullCheck(this.originalPhase);
      return token;
    }
    processEndTag(token) {
      this.flushCharacters();
      this.parser.phase = dart.nullCheck(this.originalPhase);
      return token;
    }
  };
  (parser$.InTableTextPhase.new = function(parser) {
    this[originalPhase$] = null;
    this[characterTokens] = T.JSArrayOfStringToken().of([]);
    parser$.InTableTextPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InTableTextPhase.prototype;
  dart.addTypeTests(parser$.InTableTextPhase);
  dart.addTypeCaches(parser$.InTableTextPhase);
  dart.setMethodSignature(parser$.InTableTextPhase, () => ({
    __proto__: dart.getMethods(parser$.InTableTextPhase.__proto__),
    flushCharacters: dart.fnType(dart.void, []),
    processComment: dart.fnType(token$.Token, [token$.CommentToken]),
    processStartTag: dart.fnType(token$.Token, [token$.StartTagToken]),
    processEndTag: dart.fnType(token$.Token, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InTableTextPhase, I[7]);
  dart.setFieldSignature(parser$.InTableTextPhase, () => ({
    __proto__: dart.getFields(parser$.InTableTextPhase.__proto__),
    originalPhase: dart.fieldType(dart.nullable(parser$.Phase)),
    characterTokens: dart.fieldType(core.List$(token$.StringToken))
  }));
  parser$.InCaptionPhase = class InCaptionPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
        {
          return this.startTagTableElement(token);
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "caption":
        {
          this.endTagCaption(token);
          return null;
        }
        case "table":
        {
          return this.endTagTable(token);
        }
        case "body":
        case "col":
        case "colgroup":
        case "html":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
        {
          this.endTagIgnore(token);
          return null;
        }
        default:
        {
          return this.endTagOther(token);
        }
      }
    }
    ignoreEndTagCaption() {
      return !this.tree.elementInScope("caption", {variant: "table"});
    }
    processEOF() {
      this.parser[_inBodyPhase].processEOF();
      return false;
    }
    processCharacters(token) {
      return this.parser[_inBodyPhase].processCharacters(token);
    }
    startTagTableElement(token) {
      this.parser.parseError(token.span, "undefined-error");
      let ignoreEndTag = this.ignoreEndTagCaption();
      this.parser.phase.processEndTag(new token$.EndTagToken.new("caption"));
      if (!ignoreEndTag) {
        return token;
      }
      return null;
    }
    startTagOther(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    endTagCaption(token) {
      if (!this.ignoreEndTagCaption()) {
        this.tree.generateImpliedEndTags();
        if (this.tree.openElements[$last].localName !== "caption") {
          this.parser.parseError(token.span, "expected-one-end-tag-but-got-another", new _js_helper.LinkedMap.from(["gotName", "caption", "expectedName", this.tree.openElements[$last].localName]));
        }
        while (this.tree.openElements[$last].localName !== "caption") {
          this.tree.openElements[$removeLast]();
        }
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
        this.tree.clearActiveFormattingElements();
        this.parser.phase = this.parser[_inTablePhase];
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 2676, 14, "parser.innerHTMLMode");
        this.parser.parseError(token.span, "undefined-error");
      }
    }
    endTagTable(token) {
      this.parser.parseError(token.span, "undefined-error");
      let ignoreEndTag = this.ignoreEndTagCaption();
      this.parser.phase.processEndTag(new token$.EndTagToken.new("caption"));
      if (!ignoreEndTag) {
        return token;
      }
      return null;
    }
    endTagIgnore(token) {
      this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    endTagOther(token) {
      return this.parser[_inBodyPhase].processEndTag(token);
    }
  };
  (parser$.InCaptionPhase.new = function(parser) {
    parser$.InCaptionPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InCaptionPhase.prototype;
  dart.addTypeTests(parser$.InCaptionPhase);
  dart.addTypeCaches(parser$.InCaptionPhase);
  dart.setMethodSignature(parser$.InCaptionPhase, () => ({
    __proto__: dart.getMethods(parser$.InCaptionPhase.__proto__),
    ignoreEndTagCaption: dart.fnType(core.bool, []),
    startTagTableElement: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagCaption: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagTable: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken]),
    endTagIgnore: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InCaptionPhase, I[7]);
  parser$.InColumnGroupPhase = class InColumnGroupPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "col":
        {
          this.startTagCol(token);
          return null;
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "colgroup":
        {
          this.endTagColgroup(token);
          return null;
        }
        case "col":
        {
          this.endTagCol(token);
          return null;
        }
        default:
        {
          return this.endTagOther(token);
        }
      }
    }
    ignoreEndTagColgroup() {
      return this.tree.openElements[$last].localName === "html";
    }
    processEOF() {
      let ignoreEndTag = this.ignoreEndTagColgroup();
      if (ignoreEndTag) {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 2739, 14, "parser.innerHTMLMode");
        return false;
      } else {
        this.endTagColgroup(new token$.EndTagToken.new("colgroup"));
        return true;
      }
    }
    processCharacters(token) {
      let ignoreEndTag = this.ignoreEndTagColgroup();
      this.endTagColgroup(new token$.EndTagToken.new("colgroup"));
      return ignoreEndTag ? null : token;
    }
    startTagCol(token) {
      this.tree.insertElement(token);
      this.tree.openElements[$removeLast]();
    }
    startTagOther(token) {
      let ignoreEndTag = this.ignoreEndTagColgroup();
      this.endTagColgroup(new token$.EndTagToken.new("colgroup"));
      return ignoreEndTag ? null : token;
    }
    endTagColgroup(token) {
      if (this.ignoreEndTagColgroup()) {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 2768, 14, "parser.innerHTMLMode");
        this.parser.parseError(token.span, "undefined-error");
      } else {
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
        this.parser.phase = this.parser[_inTablePhase];
      }
    }
    endTagCol(token) {
      this.parser.parseError(token.span, "no-end-tag", new _js_helper.LinkedMap.from(["name", "col"]));
    }
    endTagOther(token) {
      let ignoreEndTag = this.ignoreEndTagColgroup();
      this.endTagColgroup(new token$.EndTagToken.new("colgroup"));
      return ignoreEndTag ? null : token;
    }
  };
  (parser$.InColumnGroupPhase.new = function(parser) {
    parser$.InColumnGroupPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InColumnGroupPhase.prototype;
  dart.addTypeTests(parser$.InColumnGroupPhase);
  dart.addTypeCaches(parser$.InColumnGroupPhase);
  dart.setMethodSignature(parser$.InColumnGroupPhase, () => ({
    __proto__: dart.getMethods(parser$.InColumnGroupPhase.__proto__),
    ignoreEndTagColgroup: dart.fnType(core.bool, []),
    startTagCol: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagColgroup: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagCol: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InColumnGroupPhase, I[7]);
  parser$.InTableBodyPhase = class InTableBodyPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "tr":
        {
          this.startTagTr(token);
          return null;
        }
        case "td":
        case "th":
        {
          return this.startTagTableCell(token);
        }
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "tfoot":
        case "thead":
        {
          return this.startTagTableOther(token);
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "tbody":
        case "tfoot":
        case "thead":
        {
          this.endTagTableRowGroup(token);
          return null;
        }
        case "table":
        {
          return this.endTagTable(token);
        }
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
        case "td":
        case "th":
        case "tr":
        {
          this.endTagIgnore(token);
          return null;
        }
        default:
        {
          return this.endTagOther(token);
        }
      }
    }
    clearStackToTableBodyContext() {
      let tableTags = C[47] || CT.C47;
      while (!tableTags[$contains](this.tree.openElements[$last].localName)) {
        this.tree.openElements[$removeLast]();
      }
      if (this.tree.openElements[$last].localName === "html") {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 2849, 14, "parser.innerHTMLMode");
      }
    }
    processEOF() {
      this.parser[_inTablePhase].processEOF();
      return false;
    }
    processSpaceCharacters(token) {
      return this.parser[_inTablePhase].processSpaceCharacters(token);
    }
    processCharacters(token) {
      return this.parser[_inTablePhase].processCharacters(token);
    }
    startTagTr(token) {
      this.clearStackToTableBodyContext();
      this.tree.insertElement(token);
      this.parser.phase = this.parser[_inRowPhase];
    }
    startTagTableCell(token) {
      this.parser.parseError(token.span, "unexpected-cell-in-table-body", new _js_helper.LinkedMap.from(["name", token.name]));
      this.startTagTr(new token$.StartTagToken.new("tr", {data: new (T.LinkedMapOfObject$String()).new()}));
      return token;
    }
    startTagTableOther(token) {
      return this.endTagTable(token);
    }
    startTagOther(token) {
      return this.parser[_inTablePhase].processStartTag(token);
    }
    endTagTableRowGroup(token) {
      if (this.tree.elementInScope(token.name, {variant: "table"})) {
        this.clearStackToTableBodyContext();
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
        this.parser.phase = this.parser[_inTablePhase];
      } else {
        this.parser.parseError(token.span, "unexpected-end-tag-in-table-body", new _js_helper.LinkedMap.from(["name", token.name]));
      }
    }
    endTagTable(token) {
      if (this.tree.elementInScope("tbody", {variant: "table"}) || this.tree.elementInScope("thead", {variant: "table"}) || this.tree.elementInScope("tfoot", {variant: "table"})) {
        this.clearStackToTableBodyContext();
        this.endTagTableRowGroup(new token$.EndTagToken.new(this.tree.openElements[$last].localName));
        return token;
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 2911, 14, "parser.innerHTMLMode");
        this.parser.parseError(token.span, "undefined-error");
      }
      return null;
    }
    endTagIgnore(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-in-table-body", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    endTagOther(token) {
      return this.parser[_inTablePhase].processEndTag(token);
    }
  };
  (parser$.InTableBodyPhase.new = function(parser) {
    parser$.InTableBodyPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InTableBodyPhase.prototype;
  dart.addTypeTests(parser$.InTableBodyPhase);
  dart.addTypeCaches(parser$.InTableBodyPhase);
  dart.setMethodSignature(parser$.InTableBodyPhase, () => ({
    __proto__: dart.getMethods(parser$.InTableBodyPhase.__proto__),
    clearStackToTableBodyContext: dart.fnType(dart.void, []),
    startTagTr: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagTableCell: dart.fnType(token$.Token, [token$.StartTagToken]),
    startTagTableOther: dart.fnType(dart.nullable(token$.Token), [token$.TagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagTableRowGroup: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagTable: dart.fnType(dart.nullable(token$.Token), [token$.TagToken]),
    endTagIgnore: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InTableBodyPhase, I[7]);
  parser$.InRowPhase = class InRowPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "td":
        case "th":
        {
          this.startTagTableCell(token);
          return null;
        }
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
        {
          return this.startTagTableOther(token);
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "tr":
        {
          this.endTagTr(token);
          return null;
        }
        case "table":
        {
          return this.endTagTable(token);
        }
        case "tbody":
        case "tfoot":
        case "thead":
        {
          return this.endTagTableRowGroup(token);
        }
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
        case "td":
        case "th":
        {
          this.endTagIgnore(token);
          return null;
        }
        default:
        {
          return this.endTagOther(token);
        }
      }
    }
    clearStackToTableRowContext() {
      while (true) {
        let last = this.tree.openElements[$last];
        if (last.localName === "tr" || last.localName === "html") break;
        this.parser.parseError(last.sourceSpan, "unexpected-implied-end-tag-in-table-row", new _js_helper.LinkedMap.from(["name", this.tree.openElements[$last].localName]));
        this.tree.openElements[$removeLast]();
      }
    }
    ignoreEndTagTr() {
      return !this.tree.elementInScope("tr", {variant: "table"});
    }
    processEOF() {
      this.parser[_inTablePhase].processEOF();
      return false;
    }
    processSpaceCharacters(token) {
      return this.parser[_inTablePhase].processSpaceCharacters(token);
    }
    processCharacters(token) {
      return this.parser[_inTablePhase].processCharacters(token);
    }
    startTagTableCell(token) {
      this.clearStackToTableRowContext();
      this.tree.insertElement(token);
      this.parser.phase = this.parser[_inCellPhase];
      this.tree.activeFormattingElements.add(null);
    }
    startTagTableOther(token) {
      let ignoreEndTag = this.ignoreEndTagTr();
      this.endTagTr(new token$.EndTagToken.new("tr"));
      return ignoreEndTag ? null : token;
    }
    startTagOther(token) {
      return this.parser[_inTablePhase].processStartTag(token);
    }
    endTagTr(token) {
      if (!this.ignoreEndTagTr()) {
        this.clearStackToTableRowContext();
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
        this.parser.phase = this.parser[_inTableBodyPhase];
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 3040, 14, "parser.innerHTMLMode");
        this.parser.parseError(token.span, "undefined-error");
      }
    }
    endTagTable(token) {
      let ignoreEndTag = this.ignoreEndTagTr();
      this.endTagTr(new token$.EndTagToken.new("tr"));
      return ignoreEndTag ? null : token;
    }
    endTagTableRowGroup(token) {
      if (this.tree.elementInScope(token.name, {variant: "table"})) {
        this.endTagTr(new token$.EndTagToken.new("tr"));
        return token;
      } else {
        this.parser.parseError(token.span, "undefined-error");
        return null;
      }
    }
    endTagIgnore(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-in-table-row", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    endTagOther(token) {
      return this.parser[_inTablePhase].processEndTag(token);
    }
  };
  (parser$.InRowPhase.new = function(parser) {
    parser$.InRowPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InRowPhase.prototype;
  dart.addTypeTests(parser$.InRowPhase);
  dart.addTypeCaches(parser$.InRowPhase);
  dart.setMethodSignature(parser$.InRowPhase, () => ({
    __proto__: dart.getMethods(parser$.InRowPhase.__proto__),
    clearStackToTableRowContext: dart.fnType(dart.void, []),
    ignoreEndTagTr: dart.fnType(core.bool, []),
    startTagTableCell: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagTableOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagTr: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagTable: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken]),
    endTagTableRowGroup: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken]),
    endTagIgnore: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InRowPhase, I[7]);
  parser$.InCellPhase = class InCellPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
        {
          return this.startTagTableOther(token);
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "td":
        case "th":
        {
          this.endTagTableCell(token);
          return null;
        }
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
        {
          this.endTagIgnore(token);
          return null;
        }
        case "table":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
        {
          return this.endTagImply(token);
        }
        default:
        {
          return this.endTagOther(token);
        }
      }
    }
    closeCell() {
      if (this.tree.elementInScope("td", {variant: "table"})) {
        this.endTagTableCell(new token$.EndTagToken.new("td"));
      } else if (this.tree.elementInScope("th", {variant: "table"})) {
        this.endTagTableCell(new token$.EndTagToken.new("th"));
      }
    }
    processEOF() {
      this.parser[_inBodyPhase].processEOF();
      return false;
    }
    processCharacters(token) {
      return this.parser[_inBodyPhase].processCharacters(token);
    }
    startTagTableOther(token) {
      if (this.tree.elementInScope("td", {variant: "table"}) || this.tree.elementInScope("th", {variant: "table"})) {
        this.closeCell();
        return token;
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 3150, 14, "parser.innerHTMLMode");
        this.parser.parseError(token.span, "undefined-error");
        return null;
      }
    }
    startTagOther(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    endTagTableCell(token) {
      if (this.tree.elementInScope(token.name, {variant: "table"})) {
        this.tree.generateImpliedEndTags(token.name);
        if (this.tree.openElements[$last].localName != token.name) {
          this.parser.parseError(token.span, "unexpected-cell-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
          this.popOpenElementsUntil(token);
        } else {
          let node = this.tree.openElements[$removeLast]();
          node.endSourceSpan = token.span;
        }
        this.tree.clearActiveFormattingElements();
        this.parser.phase = this.parser[_inRowPhase];
      } else {
        this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      }
    }
    endTagIgnore(token) {
      this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    endTagImply(token) {
      if (this.tree.elementInScope(token.name, {variant: "table"})) {
        this.closeCell();
        return token;
      } else {
        this.parser.parseError(token.span, "undefined-error");
      }
      return null;
    }
    endTagOther(token) {
      return this.parser[_inBodyPhase].processEndTag(token);
    }
  };
  (parser$.InCellPhase.new = function(parser) {
    parser$.InCellPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InCellPhase.prototype;
  dart.addTypeTests(parser$.InCellPhase);
  dart.addTypeCaches(parser$.InCellPhase);
  dart.setMethodSignature(parser$.InCellPhase, () => ({
    __proto__: dart.getMethods(parser$.InCellPhase.__proto__),
    closeCell: dart.fnType(dart.void, []),
    startTagTableOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagTableCell: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagIgnore: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagImply: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InCellPhase, I[7]);
  parser$.InSelectPhase = class InSelectPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "option":
        {
          this.startTagOption(token);
          return null;
        }
        case "optgroup":
        {
          this.startTagOptgroup(token);
          return null;
        }
        case "select":
        {
          this.startTagSelect(token);
          return null;
        }
        case "input":
        case "keygen":
        case "textarea":
        {
          return this.startTagInput(token);
        }
        case "script":
        {
          return this.startTagScript(token);
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "option":
        {
          this.endTagOption(token);
          return null;
        }
        case "optgroup":
        {
          this.endTagOptgroup(token);
          return null;
        }
        case "select":
        {
          this.endTagSelect(token);
          return null;
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    processEOF() {
      let last = this.tree.openElements[$last];
      if (last.localName !== "html") {
        this.parser.parseError(last.sourceSpan, "eof-in-select");
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 3251, 14, "parser.innerHTMLMode");
      }
      return false;
    }
    processCharacters(token) {
      if (token.data === " ") {
        return null;
      }
      this.tree.insertText(token.data, token.span);
      return null;
    }
    startTagOption(token) {
      if (this.tree.openElements[$last].localName === "option") {
        this.tree.openElements[$removeLast]();
      }
      this.tree.insertElement(token);
    }
    startTagOptgroup(token) {
      if (this.tree.openElements[$last].localName === "option") {
        this.tree.openElements[$removeLast]();
      }
      if (this.tree.openElements[$last].localName === "optgroup") {
        this.tree.openElements[$removeLast]();
      }
      this.tree.insertElement(token);
    }
    startTagSelect(token) {
      this.parser.parseError(token.span, "unexpected-select-in-select");
      this.endTagSelect(new token$.EndTagToken.new("select"));
    }
    startTagInput(token) {
      this.parser.parseError(token.span, "unexpected-input-in-select");
      if (this.tree.elementInScope("select", {variant: "select"})) {
        this.endTagSelect(new token$.EndTagToken.new("select"));
        return token;
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 3294, 14, "parser.innerHTMLMode");
      }
      return null;
    }
    startTagScript(token) {
      return this.parser[_inHeadPhase].processStartTag(token);
    }
    startTagOther(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-in-select", new _js_helper.LinkedMap.from(["name", token.name]));
      return null;
    }
    endTagOption(token) {
      if (this.tree.openElements[$last].localName === "option") {
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
      } else {
        this.parser.parseError(token.span, "unexpected-end-tag-in-select", new _js_helper.LinkedMap.from(["name", "option"]));
      }
    }
    endTagOptgroup(token) {
      if (this.tree.openElements[$last].localName === "option" && this.tree.openElements[$_get](this.tree.openElements[$length] - 2).localName === "optgroup") {
        this.tree.openElements[$removeLast]();
      }
      if (this.tree.openElements[$last].localName === "optgroup") {
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
      } else {
        this.parser.parseError(token.span, "unexpected-end-tag-in-select", new _js_helper.LinkedMap.from(["name", "optgroup"]));
      }
    }
    endTagSelect(token) {
      if (this.tree.elementInScope("select", {variant: "select"})) {
        this.popOpenElementsUntil(token);
        this.parser.resetInsertionMode();
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 3343, 14, "parser.innerHTMLMode");
        this.parser.parseError(token.span, "undefined-error");
      }
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-in-select", new _js_helper.LinkedMap.from(["name", token.name]));
    }
  };
  (parser$.InSelectPhase.new = function(parser) {
    parser$.InSelectPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InSelectPhase.prototype;
  dart.addTypeTests(parser$.InSelectPhase);
  dart.addTypeCaches(parser$.InSelectPhase);
  dart.setMethodSignature(parser$.InSelectPhase, () => ({
    __proto__: dart.getMethods(parser$.InSelectPhase.__proto__),
    startTagOption: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagOptgroup: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagSelect: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagInput: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagScript: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagOption: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOptgroup: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagSelect: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InSelectPhase, I[7]);
  parser$.InSelectInTablePhase = class InSelectInTablePhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "caption":
        case "table":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
        case "td":
        case "th":
        {
          return this.startTagTable(token);
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "caption":
        case "table":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
        case "td":
        case "th":
        {
          return this.endTagTable(token);
        }
        default:
        {
          return this.endTagOther(token);
        }
      }
    }
    processEOF() {
      this.parser[_inSelectPhase].processEOF();
      return false;
    }
    processCharacters(token) {
      return this.parser[_inSelectPhase].processCharacters(token);
    }
    startTagTable(token) {
      this.parser.parseError(token.span, "unexpected-table-element-start-tag-in-select-in-table", new _js_helper.LinkedMap.from(["name", token.name]));
      this.endTagOther(new token$.EndTagToken.new("select"));
      return token;
    }
    startTagOther(token) {
      return this.parser[_inSelectPhase].processStartTag(token);
    }
    endTagTable(token) {
      this.parser.parseError(token.span, "unexpected-table-element-end-tag-in-select-in-table", new _js_helper.LinkedMap.from(["name", token.name]));
      if (this.tree.elementInScope(token.name, {variant: "table"})) {
        this.endTagOther(new token$.EndTagToken.new("select"));
        return token;
      }
      return null;
    }
    endTagOther(token) {
      return this.parser[_inSelectPhase].processEndTag(token);
    }
  };
  (parser$.InSelectInTablePhase.new = function(parser) {
    parser$.InSelectInTablePhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InSelectInTablePhase.prototype;
  dart.addTypeTests(parser$.InSelectInTablePhase);
  dart.addTypeCaches(parser$.InSelectInTablePhase);
  dart.setMethodSignature(parser$.InSelectInTablePhase, () => ({
    __proto__: dart.getMethods(parser$.InSelectInTablePhase.__proto__),
    startTagTable: dart.fnType(token$.Token, [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagTable: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.nullable(token$.Token), [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InSelectInTablePhase, I[7]);
  parser$.InForeignContentPhase = class InForeignContentPhase extends parser$.Phase {
    adjustSVGTagNames(token) {
      let replacements = C[48] || CT.C48;
      let replace = replacements[$_get](dart.dload(token, 'name'));
      if (replace != null) {
        dart.dput(token, 'name', replace);
      }
    }
    processCharacters(token) {
      if (token.data === " ") {
        token.replaceData("�");
      } else if (this.parser.framesetOK && !utils.allWhitespace(token.data)) {
        this.parser.framesetOK = false;
      }
      return super.processCharacters(token);
    }
    processStartTag(token) {
      let currentNode = this.tree.openElements[$last];
      if (parser$.InForeignContentPhase.breakoutElements[$contains](token.name) || token.name === "font" && (token.data[$containsKey]("color") || token.data[$containsKey]("face") || token.data[$containsKey]("size"))) {
        this.parser.parseError(token.span, "unexpected-html-element-in-foreign-content", new _js_helper.LinkedMap.from(["name", token.name]));
        while (this.tree.openElements[$last].namespaceUri != this.tree.defaultNamespace && !this.parser.isHTMLIntegrationPoint(this.tree.openElements[$last]) && !this.parser.isMathMLTextIntegrationPoint(this.tree.openElements[$last])) {
          this.tree.openElements[$removeLast]();
        }
        return token;
      } else {
        if (currentNode.namespaceUri === constants.Namespaces.mathml) {
          this.parser.adjustMathMLAttributes(token);
        } else if (currentNode.namespaceUri === "http://www.w3.org/2000/svg") {
          this.adjustSVGTagNames(token);
          this.parser.adjustSVGAttributes(token);
        }
        this.parser.adjustForeignAttributes(token);
        token.namespace = currentNode.namespaceUri;
        this.tree.insertElement(token);
        if (token.selfClosing) {
          this.tree.openElements[$removeLast]();
          token.selfClosingAcknowledged = true;
        }
        return null;
      }
    }
    processEndTag(token) {
      let t6, t6$;
      let nodeIndex = this.tree.openElements[$length] - 1;
      let node = this.tree.openElements[$last];
      if ((t6 = node.localName, t6 == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t6)) != token.name) {
        this.parser.parseError(token.span, "unexpected-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      }
      let newToken = null;
      while (true) {
        if ((t6$ = node.localName, t6$ == null ? null : constants['AsciiUpperToLower|toAsciiLowerCase'](t6$)) == token.name) {
          if (this.parser.phase[$_equals](this.parser[_inTableTextPhase])) {
            let inTableText = parser$.InTableTextPhase.as(this.parser.phase);
            inTableText.flushCharacters();
            this.parser.phase = dart.nullCheck(inTableText.originalPhase);
          }
          while (!this.tree.openElements[$removeLast]()[$_equals](node)) {
            if (!this.tree.openElements[$isNotEmpty]) dart.assertFailed(null, I[6], 3591, 18, "tree.openElements.isNotEmpty");
          }
          newToken = null;
          break;
        }
        nodeIndex = nodeIndex - 1;
        node = this.tree.openElements[$_get](nodeIndex);
        if (node.namespaceUri != this.tree.defaultNamespace) {
          continue;
        } else {
          newToken = this.parser.phase.processEndTag(token);
          break;
        }
      }
      return newToken;
    }
  };
  (parser$.InForeignContentPhase.new = function(parser) {
    parser$.InForeignContentPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InForeignContentPhase.prototype;
  dart.addTypeTests(parser$.InForeignContentPhase);
  dart.addTypeCaches(parser$.InForeignContentPhase);
  dart.setMethodSignature(parser$.InForeignContentPhase, () => ({
    __proto__: dart.getMethods(parser$.InForeignContentPhase.__proto__),
    adjustSVGTagNames: dart.fnType(dart.void, [dart.dynamic])
  }));
  dart.setLibraryUri(parser$.InForeignContentPhase, I[7]);
  dart.defineLazy(parser$.InForeignContentPhase, {
    /*parser$.InForeignContentPhase.breakoutElements*/get breakoutElements() {
      return C[49] || CT.C49;
    }
  }, false);
  parser$.AfterBodyPhase = class AfterBodyPhase extends parser$.Phase {
    processStartTag(token) {
      if (token.name === "html") return this.startTagHtml(token);
      return this.startTagOther(token);
    }
    processEndTag(token) {
      if (token.name === "html") {
        this.endTagHtml(token);
        return null;
      }
      return this.endTagOther(token);
    }
    processEOF() {
      return false;
    }
    processComment(token) {
      this.tree.insertComment(token, this.tree.openElements[$_get](0));
      return null;
    }
    processCharacters(token) {
      this.parser.parseError(token.span, "unexpected-char-after-body");
      this.parser.phase = this.parser[_inBodyPhase];
      return token;
    }
    startTagHtml(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    startTagOther(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-after-body", new _js_helper.LinkedMap.from(["name", token.name]));
      this.parser.phase = this.parser[_inBodyPhase];
      return token;
    }
    endTagHtml(token) {
      for (let node of this.tree.openElements[$reversed]) {
        if (node.localName === "html") {
          node.endSourceSpan = token.span;
          break;
        }
      }
      if (this.parser.innerHTMLMode) {
        this.parser.parseError(token.span, "unexpected-end-tag-after-body-innerhtml");
      } else {
        this.parser.phase = this.parser[_afterAfterBodyPhase];
      }
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-after-body", new _js_helper.LinkedMap.from(["name", token.name]));
      this.parser.phase = this.parser[_inBodyPhase];
      return token;
    }
  };
  (parser$.AfterBodyPhase.new = function(parser) {
    parser$.AfterBodyPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.AfterBodyPhase.prototype;
  dart.addTypeTests(parser$.AfterBodyPhase);
  dart.addTypeCaches(parser$.AfterBodyPhase);
  dart.setMethodSignature(parser$.AfterBodyPhase, () => ({
    __proto__: dart.getMethods(parser$.AfterBodyPhase.__proto__),
    processCharacters: dart.fnType(token$.Token, [token$.CharactersToken]),
    startTagOther: dart.fnType(token$.Token, [token$.StartTagToken]),
    endTagHtml: dart.fnType(dart.void, [token$.Token]),
    endTagOther: dart.fnType(token$.Token, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.AfterBodyPhase, I[7]);
  parser$.InFramesetPhase = class InFramesetPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "frameset":
        {
          this.startTagFrameset(token);
          return null;
        }
        case "frame":
        {
          this.startTagFrame(token);
          return null;
        }
        case "noframes":
        {
          return this.startTagNoframes(token);
        }
        default:
        {
          return this.startTagOther(token);
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "frameset":
        {
          this.endTagFrameset(token);
          return null;
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    processEOF() {
      let last = this.tree.openElements[$last];
      if (last.localName !== "html") {
        this.parser.parseError(last.sourceSpan, "eof-in-frameset");
      } else {
        if (!this.parser.innerHTMLMode) dart.assertFailed(null, I[6], 3721, 14, "parser.innerHTMLMode");
      }
      return false;
    }
    processCharacters(token) {
      this.parser.parseError(token.span, "unexpected-char-in-frameset");
      return null;
    }
    startTagFrameset(token) {
      this.tree.insertElement(token);
    }
    startTagFrame(token) {
      this.tree.insertElement(token);
      this.tree.openElements[$removeLast]();
    }
    startTagNoframes(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    startTagOther(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-in-frameset", new _js_helper.LinkedMap.from(["name", token.name]));
      return null;
    }
    endTagFrameset(token) {
      if (this.tree.openElements[$last].localName === "html") {
        this.parser.parseError(token.span, "unexpected-frameset-in-frameset-innerhtml");
      } else {
        let node = this.tree.openElements[$removeLast]();
        node.endSourceSpan = token.span;
      }
      if (!this.parser.innerHTMLMode && this.tree.openElements[$last].localName !== "frameset") {
        this.parser.phase = this.parser[_afterFramesetPhase];
      }
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-in-frameset", new _js_helper.LinkedMap.from(["name", token.name]));
    }
  };
  (parser$.InFramesetPhase.new = function(parser) {
    parser$.InFramesetPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.InFramesetPhase.prototype;
  dart.addTypeTests(parser$.InFramesetPhase);
  dart.addTypeCaches(parser$.InFramesetPhase);
  dart.setMethodSignature(parser$.InFramesetPhase, () => ({
    __proto__: dart.getMethods(parser$.InFramesetPhase.__proto__),
    startTagFrameset: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagFrame: dart.fnType(dart.void, [token$.StartTagToken]),
    startTagNoframes: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    endTagFrameset: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.InFramesetPhase, I[7]);
  parser$.AfterFramesetPhase = class AfterFramesetPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "noframes":
        {
          return this.startTagNoframes(token);
        }
        default:
        {
          this.startTagOther(token);
          return null;
        }
      }
    }
    processEndTag(token) {
      switch (token.name) {
        case "html":
        {
          this.endTagHtml(token);
          return null;
        }
        default:
        {
          this.endTagOther(token);
          return null;
        }
      }
    }
    processEOF() {
      return false;
    }
    processCharacters(token) {
      this.parser.parseError(token.span, "unexpected-char-after-frameset");
      return null;
    }
    startTagNoframes(token) {
      return this.parser[_inHeadPhase].processStartTag(token);
    }
    startTagOther(token) {
      this.parser.parseError(token.span, "unexpected-start-tag-after-frameset", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    endTagHtml(token) {
      this.parser.phase = this.parser[_afterAfterFramesetPhase];
    }
    endTagOther(token) {
      this.parser.parseError(token.span, "unexpected-end-tag-after-frameset", new _js_helper.LinkedMap.from(["name", token.name]));
    }
  };
  (parser$.AfterFramesetPhase.new = function(parser) {
    parser$.AfterFramesetPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.AfterFramesetPhase.prototype;
  dart.addTypeTests(parser$.AfterFramesetPhase);
  dart.addTypeCaches(parser$.AfterFramesetPhase);
  dart.setMethodSignature(parser$.AfterFramesetPhase, () => ({
    __proto__: dart.getMethods(parser$.AfterFramesetPhase.__proto__),
    startTagNoframes: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.void, [token$.StartTagToken]),
    endTagHtml: dart.fnType(dart.void, [token$.EndTagToken]),
    endTagOther: dart.fnType(dart.void, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.AfterFramesetPhase, I[7]);
  parser$.AfterAfterBodyPhase = class AfterAfterBodyPhase extends parser$.Phase {
    processStartTag(token) {
      if (token.name === "html") return this.startTagHtml(token);
      return this.startTagOther(token);
    }
    processEOF() {
      return false;
    }
    processComment(token) {
      this.tree.insertComment(token, this.tree.document);
      return null;
    }
    processSpaceCharacters(token) {
      return this.parser[_inBodyPhase].processSpaceCharacters(token);
    }
    processCharacters(token) {
      this.parser.parseError(token.span, "expected-eof-but-got-char");
      this.parser.phase = this.parser[_inBodyPhase];
      return token;
    }
    startTagHtml(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    startTagOther(token) {
      this.parser.parseError(token.span, "expected-eof-but-got-start-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      this.parser.phase = this.parser[_inBodyPhase];
      return token;
    }
    processEndTag(token) {
      this.parser.parseError(token.span, "expected-eof-but-got-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      this.parser.phase = this.parser[_inBodyPhase];
      return token;
    }
  };
  (parser$.AfterAfterBodyPhase.new = function(parser) {
    parser$.AfterAfterBodyPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.AfterAfterBodyPhase.prototype;
  dart.addTypeTests(parser$.AfterAfterBodyPhase);
  dart.addTypeCaches(parser$.AfterAfterBodyPhase);
  dart.setMethodSignature(parser$.AfterAfterBodyPhase, () => ({
    __proto__: dart.getMethods(parser$.AfterAfterBodyPhase.__proto__),
    processCharacters: dart.fnType(token$.Token, [token$.CharactersToken]),
    startTagOther: dart.fnType(token$.Token, [token$.StartTagToken]),
    processEndTag: dart.fnType(token$.Token, [token$.EndTagToken])
  }));
  dart.setLibraryUri(parser$.AfterAfterBodyPhase, I[7]);
  parser$.AfterAfterFramesetPhase = class AfterAfterFramesetPhase extends parser$.Phase {
    processStartTag(token) {
      switch (token.name) {
        case "html":
        {
          return this.startTagHtml(token);
        }
        case "noframes":
        {
          return this.startTagNoFrames(token);
        }
        default:
        {
          this.startTagOther(token);
          return null;
        }
      }
    }
    processEOF() {
      return false;
    }
    processComment(token) {
      this.tree.insertComment(token, this.tree.document);
      return null;
    }
    processSpaceCharacters(token) {
      return this.parser[_inBodyPhase].processSpaceCharacters(token);
    }
    processCharacters(token) {
      this.parser.parseError(token.span, "expected-eof-but-got-char");
      return null;
    }
    startTagHtml(token) {
      return this.parser[_inBodyPhase].processStartTag(token);
    }
    startTagNoFrames(token) {
      return this.parser[_inHeadPhase].processStartTag(token);
    }
    startTagOther(token) {
      this.parser.parseError(token.span, "expected-eof-but-got-start-tag", new _js_helper.LinkedMap.from(["name", token.name]));
    }
    processEndTag(token) {
      this.parser.parseError(token.span, "expected-eof-but-got-end-tag", new _js_helper.LinkedMap.from(["name", token.name]));
      return null;
    }
  };
  (parser$.AfterAfterFramesetPhase.new = function(parser) {
    parser$.AfterAfterFramesetPhase.__proto__.new.call(this, parser);
    ;
  }).prototype = parser$.AfterAfterFramesetPhase.prototype;
  dart.addTypeTests(parser$.AfterAfterFramesetPhase);
  dart.addTypeCaches(parser$.AfterAfterFramesetPhase);
  dart.setMethodSignature(parser$.AfterAfterFramesetPhase, () => ({
    __proto__: dart.getMethods(parser$.AfterAfterFramesetPhase.__proto__),
    startTagNoFrames: dart.fnType(dart.nullable(token$.Token), [token$.StartTagToken]),
    startTagOther: dart.fnType(dart.void, [token$.StartTagToken])
  }));
  dart.setLibraryUri(parser$.AfterAfterFramesetPhase, I[7]);
  var errorCode$ = dart.privateName(parser$, "ParseError.errorCode");
  var span$ = dart.privateName(parser$, "ParseError.span");
  var data$ = dart.privateName(parser$, "ParseError.data");
  var _message = dart.privateName(parser$, "_message");
  var _message$ = dart.privateName(span_exception, "_message");
  var _span = dart.privateName(parser$, "_span");
  var _span$ = dart.privateName(span_exception, "_span");
  parser$.ParseError = class ParseError extends core.Object {
    get errorCode() {
      return this[errorCode$];
    }
    set errorCode(value) {
      super.errorCode = value;
    }
    get span() {
      return this[span$];
    }
    set span(value) {
      super.span = value;
    }
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    get line() {
      return dart.nullCheck(this.span).start.line;
    }
    get column() {
      return dart.nullCheck(this.span).start.column;
    }
    get message() {
      return utils.formatStr(dart.nullCheck(constants.errorMessages[$_get](this.errorCode)), this.data);
    }
    toString(opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let res = dart.nullCheck(this.span).message(this.message, {color: color});
      return dart.nullCheck(this.span).sourceUrl == null ? "ParserError on " + res : "On " + res;
    }
    get [_message$]() {
      return core.String.as(this[$noSuchMethod](new core._Invocation.getter(C[50] || CT.C50)));
    }
    get [_span$]() {
      return T.SourceSpanN().as(this[$noSuchMethod](new core._Invocation.getter(C[51] || CT.C51)));
    }
  };
  (parser$.ParseError.new = function(errorCode, span, data) {
    this[errorCode$] = errorCode;
    this[span$] = span;
    this[data$] = data;
    ;
  }).prototype = parser$.ParseError.prototype;
  dart.addTypeTests(parser$.ParseError);
  dart.addTypeCaches(parser$.ParseError);
  parser$.ParseError[dart.implements] = () => [span_exception.SourceSpanException];
  dart.setMethodSignature(parser$.ParseError, () => ({
    __proto__: dart.getMethods(parser$.ParseError.__proto__),
    toString: dart.fnType(core.String, [], {color: dart.dynamic}, {}),
    [$toString]: dart.fnType(core.String, [], {color: dart.dynamic}, {})
  }));
  dart.setGetterSignature(parser$.ParseError, () => ({
    __proto__: dart.getGetters(parser$.ParseError.__proto__),
    line: core.int,
    column: core.int,
    message: core.String,
    [_message$]: core.String,
    [_span$]: dart.nullable(span.SourceSpan)
  }));
  dart.setLibraryUri(parser$.ParseError, I[7]);
  dart.setFieldSignature(parser$.ParseError, () => ({
    __proto__: dart.getFields(parser$.ParseError.__proto__),
    errorCode: dart.finalFieldType(core.String),
    span: dart.finalFieldType(dart.nullable(span.SourceSpan)),
    data: dart.finalFieldType(dart.nullable(core.Map))
  }));
  dart.defineExtensionMethods(parser$.ParseError, ['toString']);
  parser$.parse = function parse(input, opts) {
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let generateSpans = opts && 'generateSpans' in opts ? opts.generateSpans : false;
    let sourceUrl = opts && 'sourceUrl' in opts ? opts.sourceUrl : null;
    let p = new parser$.HtmlParser.new(input, {encoding: encoding, generateSpans: generateSpans, sourceUrl: sourceUrl});
    return p.parse();
  };
  parser$.parseFragment = function parseFragment(input, opts) {
    let container = opts && 'container' in opts ? opts.container : "div";
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let generateSpans = opts && 'generateSpans' in opts ? opts.generateSpans : false;
    let sourceUrl = opts && 'sourceUrl' in opts ? opts.sourceUrl : null;
    let p = new parser$.HtmlParser.new(input, {encoding: encoding, generateSpans: generateSpans, sourceUrl: sourceUrl});
    return p.parseFragment(container);
  };
  parser$.getElementNameTuple = function getElementNameTuple(e) {
    let t6;
    let ns = (t6 = e.namespaceUri, t6 == null ? "http://www.w3.org/1999/xhtml" : t6);
    return new (T.PairOfString$StringN()).new(ns, e.localName);
  };
  dom_parsing.TreeVisitor = class TreeVisitor extends core.Object {
    visit(node) {
      switch (node.nodeType) {
        case 1:
        {
          return this.visitElement(dom.Element.as(node));
        }
        case 3:
        {
          return this.visitText(dom.Text.as(node));
        }
        case 8:
        {
          return this.visitComment(dom.Comment.as(node));
        }
        case 11:
        {
          return this.visitDocumentFragment(dom.DocumentFragment.as(node));
        }
        case 9:
        {
          return this.visitDocument(dom.Document.as(node));
        }
        case 10:
        {
          return this.visitDocumentType(dom.DocumentType.as(node));
        }
        default:
        {
          dart.throw(new core.UnsupportedError.new("DOM node type " + dart.str(node.nodeType)));
        }
      }
    }
    visitChildren(node) {
      for (let child of node.nodes[$toList]()) {
        this.visit(child);
      }
    }
    visitNodeFallback(node) {
      return this.visitChildren(node);
    }
    visitDocument(node) {
      return this.visitNodeFallback(node);
    }
    visitDocumentType(node) {
      return this.visitNodeFallback(node);
    }
    visitText(node) {
      return this.visitNodeFallback(node);
    }
    visitElement(node) {
      return this.visitNodeFallback(node);
    }
    visitComment(node) {
      return this.visitNodeFallback(node);
    }
    visitDocumentFragment(node) {
      return this.visitNodeFallback(node);
    }
  };
  (dom_parsing.TreeVisitor.new = function() {
    ;
  }).prototype = dom_parsing.TreeVisitor.prototype;
  dart.addTypeTests(dom_parsing.TreeVisitor);
  dart.addTypeCaches(dom_parsing.TreeVisitor);
  dart.setMethodSignature(dom_parsing.TreeVisitor, () => ({
    __proto__: dart.getMethods(dom_parsing.TreeVisitor.__proto__),
    visit: dart.fnType(dart.void, [dom.Node]),
    visitChildren: dart.fnType(dart.void, [dom.Node]),
    visitNodeFallback: dart.fnType(dart.void, [dom.Node]),
    visitDocument: dart.fnType(dart.void, [dom.Document]),
    visitDocumentType: dart.fnType(dart.void, [dom.DocumentType]),
    visitText: dart.fnType(dart.void, [dom.Text]),
    visitElement: dart.fnType(dart.void, [dom.Element]),
    visitComment: dart.fnType(dart.void, [dom.Comment]),
    visitDocumentFragment: dart.fnType(dart.void, [dom.DocumentFragment])
  }));
  dart.setLibraryUri(dom_parsing.TreeVisitor, I[8]);
  var _str = dart.privateName(dom_parsing, "_str");
  dom_parsing.CodeMarkupVisitor = class CodeMarkupVisitor extends dom_parsing.TreeVisitor {
    toString() {
      return this[_str].toString();
    }
    visitDocument(node) {
      this[_str].write("<pre>");
      this.visitChildren(node);
      this[_str].write("</pre>");
    }
    visitDocumentType(node) {
      this[_str].write("<code class=\"markup doctype\">&lt;!DOCTYPE " + dart.str(node.name) + ">" + "</code>");
    }
    visitText(node) {
      dom_parsing.writeTextNodeAsHtml(this[_str], node);
    }
    visitElement(node) {
      let tag = node.localName;
      this[_str].write("&lt;<code class=\"markup element-name\">" + dart.str(tag) + "</code>");
      if (node.attributes[$isNotEmpty]) {
        node.attributes[$forEach](dart.fn((key, v) => {
          v = dom_parsing.htmlSerializeEscape(v, {attributeMode: true});
          this[_str].write(" <code class=\"markup attribute-name\">" + dart.str(key) + "</code>" + "=<code class=\"markup attribute-value\">\"" + v + "\"</code>");
        }, T.ObjectAndStringTovoid()));
      }
      if (node.nodes[$isNotEmpty]) {
        this[_str].write(">");
        this.visitChildren(node);
      } else if (dom_parsing.isVoidElement(tag)) {
        this[_str].write(">");
        return;
      }
      this[_str].write("&lt;/<code class=\"markup element-name\">" + dart.str(tag) + "</code>>");
    }
    visitComment(node) {
      let data = dom_parsing.htmlSerializeEscape(dart.nullCheck(node.data));
      this[_str].write("<code class=\"markup comment\">&lt;!--" + data + "--></code>");
    }
  };
  (dom_parsing.CodeMarkupVisitor.new = function() {
    this[_str] = new core.StringBuffer.new();
    ;
  }).prototype = dom_parsing.CodeMarkupVisitor.prototype;
  dart.addTypeTests(dom_parsing.CodeMarkupVisitor);
  dart.addTypeCaches(dom_parsing.CodeMarkupVisitor);
  dart.setLibraryUri(dom_parsing.CodeMarkupVisitor, I[8]);
  dart.setFieldSignature(dom_parsing.CodeMarkupVisitor, () => ({
    __proto__: dart.getFields(dom_parsing.CodeMarkupVisitor.__proto__),
    [_str]: dart.finalFieldType(core.StringBuffer)
  }));
  dart.defineExtensionMethods(dom_parsing.CodeMarkupVisitor, ['toString']);
  dom_parsing.htmlToCodeMarkup = function htmlToCodeMarkup(node) {
    let t6;
    return (t6 = new dom_parsing.CodeMarkupVisitor.new(), (() => {
      t6.visit(node);
      return t6;
    })()).toString();
  };
  dom_parsing.htmlSerializeEscape = function htmlSerializeEscape(text, opts) {
    let attributeMode = opts && 'attributeMode' in opts ? opts.attributeMode : false;
    let result = null;
    for (let i = 0; i < text.length; i = i + 1) {
      let ch = text[$_get](i);
      let replace = null;
      switch (ch) {
        case "&":
        {
          replace = "&amp;";
          break;
        }
        case " ":
        {
          replace = "&nbsp;";
          break;
        }
        case "\"":
        {
          if (attributeMode) replace = "&quot;";
          break;
        }
        case "<":
        {
          if (!attributeMode) replace = "&lt;";
          break;
        }
        case ">":
        {
          if (!attributeMode) replace = "&gt;";
          break;
        }
      }
      if (replace != null) {
        result == null ? result = new core.StringBuffer.new(text[$substring](0, i)) : null;
        result.write(replace);
      } else if (result != null) {
        result.write(ch);
      }
    }
    return result != null ? dart.toString(result) : text;
  };
  dom_parsing.isVoidElement = function isVoidElement(tagName) {
    switch (tagName) {
      case "area":
      case "base":
      case "br":
      case "col":
      case "command":
      case "embed":
      case "hr":
      case "img":
      case "input":
      case "keygen":
      case "link":
      case "meta":
      case "param":
      case "source":
      case "track":
      case "wbr":
      {
        return true;
      }
    }
    return false;
  };
  dom_parsing.writeTextNodeAsHtml = function writeTextNodeAsHtml(str, node) {
    let parent = node.parentNode;
    if (dom.Element.is(parent)) {
      let tag = parent.localName;
      if (constants.rcdataElements[$contains](tag) || tag === "plaintext") {
        str.write(node.data);
        return;
      }
    }
    str.write(dom_parsing.htmlSerializeEscape(node.data));
  };
  const prefix$ = AttributeName_prefix;
  const name$ = AttributeName_name;
  const namespace$ = AttributeName_namespace;
  dom.AttributeName = class AttributeName extends core.Object {
    get prefix() {
      return this[prefix$];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get namespace() {
      return this[namespace$];
    }
    set namespace(value) {
      super.namespace = value;
    }
    toString() {
      return this.prefix != null ? dart.str(this.prefix) + ":" + this.name : this.name;
    }
    get hashCode() {
      let h = dart.hashCode(this.prefix);
      h = 37 * (h & 2097151) + this.name[$hashCode];
      h = 37 * (h & 2097151) + this.namespace[$hashCode];
      return h & 1073741823;
    }
    compareTo(other) {
      let t6, t6$;
      core.Object.as(other);
      if (!dom.AttributeName.is(other)) return 1;
      let cmp = (t6 = this.prefix, t6 == null ? "" : t6)[$compareTo]((t6$ = other.prefix, t6$ == null ? "" : t6$));
      if (cmp !== 0) return cmp;
      cmp = this.name[$compareTo](other.name);
      if (cmp !== 0) return cmp;
      return this.namespace[$compareTo](other.namespace);
    }
    _equals(x) {
      if (x == null) return false;
      if (!dom.AttributeName.is(x)) return false;
      return this.prefix == x.prefix && this.name === x.name && this.namespace === x.namespace;
    }
  };
  (dom.AttributeName.new = function(prefix, name, namespace) {
    this[prefix$] = prefix;
    this[name$] = name;
    this[namespace$] = namespace;
    ;
  }).prototype = dom.AttributeName.prototype;
  dart.addTypeTests(dom.AttributeName);
  dart.addTypeCaches(dom.AttributeName);
  dom.AttributeName[dart.implements] = () => [core.Comparable$(core.Object)];
  dart.setMethodSignature(dom.AttributeName, () => ({
    __proto__: dart.getMethods(dom.AttributeName.__proto__),
    compareTo: dart.fnType(core.int, [dart.nullable(core.Object)]),
    [$compareTo]: dart.fnType(core.int, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(dom.AttributeName, I[2]);
  dart.setFieldSignature(dom.AttributeName, () => ({
    __proto__: dart.getFields(dom.AttributeName.__proto__),
    prefix: dart.finalFieldType(dart.nullable(core.String)),
    name: dart.finalFieldType(core.String),
    namespace: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(dom.AttributeName, ['toString', 'compareTo', '_equals']);
  dart.defineExtensionAccessors(dom.AttributeName, ['hashCode']);
  dom._NonElementParentNode = class _NonElementParentNode extends core.Object {
    getElementById(id) {
      return this.querySelector("#" + id);
    }
  };
  (dom._NonElementParentNode.new = function() {
    ;
  }).prototype = dom._NonElementParentNode.prototype;
  dart.addTypeTests(dom._NonElementParentNode);
  dart.addTypeCaches(dom._NonElementParentNode);
  dom._NonElementParentNode[dart.implements] = () => [dom._ParentNode];
  dart.setMethodSignature(dom._NonElementParentNode, () => ({
    __proto__: dart.getMethods(dom._NonElementParentNode.__proto__),
    getElementById: dart.fnType(dart.nullable(dom.Element), [core.String])
  }));
  dart.setLibraryUri(dom._NonElementParentNode, I[2]);
  const Node__ParentNode$36$ = class Node__ParentNode extends dom.Node {};
  (Node__ParentNode$36$.__ = function() {
    Node__ParentNode$36$.__proto__.__.call(this);
  }).prototype = Node__ParentNode$36$.prototype;
  dart.applyMixin(Node__ParentNode$36$, dom._ParentNode);
  const Node__NonElementParentNode$36 = class Node__NonElementParentNode extends Node__ParentNode$36$ {};
  (Node__NonElementParentNode$36.__ = function() {
    Node__NonElementParentNode$36.__proto__.__.call(this);
  }).prototype = Node__NonElementParentNode$36.prototype;
  dart.applyMixin(Node__NonElementParentNode$36, dom._NonElementParentNode);
  const Node__ElementAndDocument$36$ = class Node__ElementAndDocument extends Node__NonElementParentNode$36 {};
  (Node__ElementAndDocument$36$.__ = function() {
    Node__ElementAndDocument$36$.__proto__.__.call(this);
  }).prototype = Node__ElementAndDocument$36$.prototype;
  dart.applyMixin(Node__ElementAndDocument$36$, dom._ElementAndDocument);
  dom.Document = class Document extends Node__ElementAndDocument$36$ {
    static html(html) {
      return parser$.parse(html);
    }
    get nodeType() {
      return 9;
    }
    get documentElement() {
      return this.querySelector("html");
    }
    get head() {
      let t6;
      t6 = this.documentElement;
      return t6 == null ? null : t6.querySelector("head");
    }
    get body() {
      let t6;
      t6 = this.documentElement;
      return t6 == null ? null : t6.querySelector("body");
    }
    get outerHtml() {
      return this[_outerHtml];
    }
    toString() {
      return "#document";
    }
    [_addOuterHtml](str) {
      return this[_addInnerHtml](str);
    }
    clone(deep) {
      return this[_clone](dom.Document, new dom.Document.new(), deep);
    }
    createElement(tag) {
      return new dom.Element.tag(tag);
    }
    createElementNS(namespaceUri, tag) {
      if (namespaceUri === "") namespaceUri = null;
      return new dom.Element.__(tag, namespaceUri);
    }
    createDocumentFragment() {
      return new dom.DocumentFragment.new();
    }
  };
  (dom.Document.new = function() {
    dom.Document.__proto__.__.call(this);
    ;
  }).prototype = dom.Document.prototype;
  dart.addTypeTests(dom.Document);
  dart.addTypeCaches(dom.Document);
  dart.setMethodSignature(dom.Document, () => ({
    __proto__: dart.getMethods(dom.Document.__proto__),
    [_addOuterHtml]: dart.fnType(dart.void, [core.StringBuffer]),
    clone: dart.fnType(dom.Document, [core.bool]),
    createElement: dart.fnType(dom.Element, [core.String]),
    createElementNS: dart.fnType(dom.Element, [dart.nullable(core.String), dart.nullable(core.String)]),
    createDocumentFragment: dart.fnType(dom.DocumentFragment, [])
  }));
  dart.setGetterSignature(dom.Document, () => ({
    __proto__: dart.getGetters(dom.Document.__proto__),
    nodeType: core.int,
    documentElement: dart.nullable(dom.Element),
    head: dart.nullable(dom.Element),
    body: dart.nullable(dom.Element),
    outerHtml: core.String
  }));
  dart.setLibraryUri(dom.Document, I[2]);
  dart.defineExtensionMethods(dom.Document, ['toString']);
  const Node__ParentNode$36$0 = class Node__ParentNode extends dom.Node {};
  (Node__ParentNode$36$0.__ = function() {
    Node__ParentNode$36$0.__proto__.__.call(this);
  }).prototype = Node__ParentNode$36$0.prototype;
  dart.applyMixin(Node__ParentNode$36$0, dom._ParentNode);
  const Node__NonElementParentNode$36$ = class Node__NonElementParentNode extends Node__ParentNode$36$0 {};
  (Node__NonElementParentNode$36$.__ = function() {
    Node__NonElementParentNode$36$.__proto__.__.call(this);
  }).prototype = Node__NonElementParentNode$36$.prototype;
  dart.applyMixin(Node__NonElementParentNode$36$, dom._NonElementParentNode);
  dom.DocumentFragment = class DocumentFragment extends Node__NonElementParentNode$36$ {
    static html(html) {
      return parser$.parseFragment(html);
    }
    get nodeType() {
      return 11;
    }
    get outerHtml() {
      return this[_outerHtml];
    }
    toString() {
      return "#document-fragment";
    }
    clone(deep) {
      return this[_clone](dom.DocumentFragment, new dom.DocumentFragment.new(), deep);
    }
    [_addOuterHtml](str) {
      return this[_addInnerHtml](str);
    }
    get text() {
      return dom._getText(this);
    }
    set text(value) {
      return dom._setText(this, value);
    }
  };
  (dom.DocumentFragment.new = function() {
    dom.DocumentFragment.__proto__.__.call(this);
    ;
  }).prototype = dom.DocumentFragment.prototype;
  dart.addTypeTests(dom.DocumentFragment);
  dart.addTypeCaches(dom.DocumentFragment);
  dart.setMethodSignature(dom.DocumentFragment, () => ({
    __proto__: dart.getMethods(dom.DocumentFragment.__proto__),
    clone: dart.fnType(dom.DocumentFragment, [core.bool]),
    [_addOuterHtml]: dart.fnType(dart.void, [core.StringBuffer])
  }));
  dart.setGetterSignature(dom.DocumentFragment, () => ({
    __proto__: dart.getGetters(dom.DocumentFragment.__proto__),
    nodeType: core.int,
    outerHtml: core.String
  }));
  dart.setLibraryUri(dom.DocumentFragment, I[2]);
  dart.defineExtensionMethods(dom.DocumentFragment, ['toString']);
  var name$0 = dart.privateName(dom, "DocumentType.name");
  var publicId$ = dart.privateName(dom, "DocumentType.publicId");
  var systemId$ = dart.privateName(dom, "DocumentType.systemId");
  dom.DocumentType = class DocumentType extends dom.Node {
    get name() {
      return this[name$0];
    }
    set name(value) {
      super.name = value;
    }
    get publicId() {
      return this[publicId$];
    }
    set publicId(value) {
      super.publicId = value;
    }
    get systemId() {
      return this[systemId$];
    }
    set systemId(value) {
      super.systemId = value;
    }
    get nodeType() {
      return 10;
    }
    toString() {
      let t6, t6$;
      if (this.publicId != null || this.systemId != null) {
        let pid = (t6 = this.publicId, t6 == null ? "" : t6);
        let sid = (t6$ = this.systemId, t6$ == null ? "" : t6$);
        return "<!DOCTYPE " + dart.str(this.name) + " \"" + pid + "\" \"" + sid + "\">";
      } else {
        return "<!DOCTYPE " + dart.str(this.name) + ">";
      }
    }
    [_addOuterHtml](str) {
      str.write(this.toString());
    }
    clone(deep) {
      return new dom.DocumentType.new(this.name, this.publicId, this.systemId);
    }
  };
  (dom.DocumentType.new = function(name, publicId, systemId) {
    this[name$0] = name;
    this[publicId$] = publicId;
    this[systemId$] = systemId;
    dom.DocumentType.__proto__.__.call(this);
    ;
  }).prototype = dom.DocumentType.prototype;
  dart.addTypeTests(dom.DocumentType);
  dart.addTypeCaches(dom.DocumentType);
  dart.setMethodSignature(dom.DocumentType, () => ({
    __proto__: dart.getMethods(dom.DocumentType.__proto__),
    [_addOuterHtml]: dart.fnType(dart.void, [core.StringBuffer]),
    clone: dart.fnType(dom.DocumentType, [core.bool])
  }));
  dart.setGetterSignature(dom.DocumentType, () => ({
    __proto__: dart.getGetters(dom.DocumentType.__proto__),
    nodeType: core.int
  }));
  dart.setLibraryUri(dom.DocumentType, I[2]);
  dart.setFieldSignature(dom.DocumentType, () => ({
    __proto__: dart.getFields(dom.DocumentType.__proto__),
    name: dart.finalFieldType(dart.nullable(core.String)),
    publicId: dart.finalFieldType(dart.nullable(core.String)),
    systemId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(dom.DocumentType, ['toString']);
  var _data = dart.privateName(dom, "_data");
  dom.Text = class Text extends dom.Node {
    get nodeType() {
      return 3;
    }
    get data() {
      return this[_data] = this[_data][$toString]();
    }
    set data(value) {
      this[_data] = value === null ? "" : value;
    }
    toString() {
      return "\"" + this.data + "\"";
    }
    [_addOuterHtml](str) {
      return dom_parsing.writeTextNodeAsHtml(str, this);
    }
    clone(deep) {
      return new dom.Text.new(this.data);
    }
    appendData(data) {
      if (!core.StringBuffer.is(this[_data])) this[_data] = new core.StringBuffer.new(this[_data]);
      let sb = core.StringBuffer.as(this[_data]);
      sb.write(data);
    }
    get text() {
      return this.data;
    }
    set text(value) {
      core.String.as(value);
      this.data = value;
    }
  };
  (dom.Text.new = function(data) {
    let t6;
    this[_data] = (t6 = data, t6 == null ? "" : t6);
    dom.Text.__proto__.__.call(this);
    ;
  }).prototype = dom.Text.prototype;
  dart.addTypeTests(dom.Text);
  dart.addTypeCaches(dom.Text);
  dart.setMethodSignature(dom.Text, () => ({
    __proto__: dart.getMethods(dom.Text.__proto__),
    [_addOuterHtml]: dart.fnType(dart.void, [core.StringBuffer]),
    clone: dart.fnType(dom.Text, [core.bool]),
    appendData: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(dom.Text, () => ({
    __proto__: dart.getGetters(dom.Text.__proto__),
    nodeType: core.int,
    data: core.String,
    text: core.String
  }));
  dart.setSetterSignature(dom.Text, () => ({
    __proto__: dart.getSetters(dom.Text.__proto__),
    data: core.String,
    text: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(dom.Text, I[2]);
  dart.setFieldSignature(dom.Text, () => ({
    __proto__: dart.getFields(dom.Text.__proto__),
    [_data]: dart.fieldType(core.Object)
  }));
  dart.defineExtensionMethods(dom.Text, ['toString']);
  var data$0 = dart.privateName(dom, "Comment.data");
  dom.Comment = class Comment extends dom.Node {
    get data() {
      return this[data$0];
    }
    set data(value) {
      this[data$0] = value;
    }
    get nodeType() {
      return 8;
    }
    toString() {
      return "<!-- " + dart.str(this.data) + " -->";
    }
    [_addOuterHtml](str) {
      str.write("<!--" + dart.str(this.data) + "-->");
    }
    clone(deep) {
      return new dom.Comment.new(this.data);
    }
    get text() {
      return this.data;
    }
    set text(value) {
      this.data = value;
    }
  };
  (dom.Comment.new = function(data) {
    this[data$0] = data;
    dom.Comment.__proto__.__.call(this);
    ;
  }).prototype = dom.Comment.prototype;
  dart.addTypeTests(dom.Comment);
  dart.addTypeCaches(dom.Comment);
  dart.setMethodSignature(dom.Comment, () => ({
    __proto__: dart.getMethods(dom.Comment.__proto__),
    [_addOuterHtml]: dart.fnType(dart.void, [core.StringBuffer]),
    clone: dart.fnType(dom.Comment, [core.bool])
  }));
  dart.setGetterSignature(dom.Comment, () => ({
    __proto__: dart.getGetters(dom.Comment.__proto__),
    nodeType: core.int
  }));
  dart.setLibraryUri(dom.Comment, I[2]);
  dart.setFieldSignature(dom.Comment, () => ({
    __proto__: dart.getFields(dom.Comment.__proto__),
    data: dart.fieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(dom.Comment, ['toString']);
  var _parent$ = dart.privateName(dom, "_parent");
  var _setParent = dart.privateName(dom, "_setParent");
  var _flattenDocFragments = dart.privateName(dom, "_flattenDocFragments");
  dom.NodeList = class NodeList extends list_proxy.ListProxy$(dom.Node) {
    [_setParent](node) {
      node.remove();
      node.parentNode = this[_parent$];
      return node;
    }
    add(value) {
      dom.Node.as(value);
      if (dom.DocumentFragment.is(value)) {
        this.addAll(value.nodes);
      } else {
        super.add(this[_setParent](value));
      }
    }
    addLast(value) {
      return this.add(value);
    }
    addAll(collection) {
      T.IterableOfNode().as(collection);
      let list = this[_flattenDocFragments](collection);
      for (let node of list[$reversed]) {
        this[_setParent](node);
      }
      super.addAll(list);
    }
    insert(index, value) {
      dom.Node.as(value);
      if (dom.DocumentFragment.is(value)) {
        this.insertAll(index, value.nodes);
      } else {
        super.insert(index, this[_setParent](value));
      }
    }
    removeLast() {
      let t6;
      t6 = super.removeLast();
      return (() => {
        t6.parentNode = null;
        return t6;
      })();
    }
    removeAt(i) {
      let t6;
      t6 = super.removeAt(i);
      return (() => {
        t6.parentNode = null;
        return t6;
      })();
    }
    clear() {
      for (let node of this) {
        node.parentNode = null;
      }
      super.clear();
    }
    _set(index, value$) {
      let value = value$;
      dom.Node.as(value);
      if (dom.DocumentFragment.is(value)) {
        this.removeAt(index);
        this.insertAll(index, value.nodes);
      } else {
        this._get(index).parentNode = null;
        super._set(index, this[_setParent](value));
      }
      return value$;
    }
    setRange(start, rangeLength, from, startFrom = 0) {
      T.IterableOfNode().as(from);
      let fromVar = T.ListOfNode().as(from);
      if (dom.NodeList.is(fromVar)) {
        fromVar = fromVar[$sublist](startFrom, startFrom + rangeLength);
      }
      for (let i = rangeLength - 1; i >= 0; i = i - 1) {
        this._set(start + i, fromVar[$_get](startFrom + i));
      }
    }
    replaceRange(start, end, newContents) {
      T.IterableOfNode().as(newContents);
      this.removeRange(start, end);
      this.insertAll(start, newContents);
    }
    removeRange(start, rangeLength) {
      for (let i = start; i < rangeLength; i = i + 1) {
        this._get(i).parentNode = null;
      }
      super.removeRange(start, rangeLength);
    }
    removeWhere(test) {
      for (let node of this[$where](test)) {
        node.parentNode = null;
      }
      super.removeWhere(test);
    }
    retainWhere(test) {
      for (let node of this[$where](dart.fn(n => !test(n), T.NodeTobool()))) {
        node.parentNode = null;
      }
      super.retainWhere(test);
    }
    insertAll(index, collection) {
      T.IterableOfNode().as(collection);
      let list = this[_flattenDocFragments](collection);
      for (let node of list[$reversed]) {
        this[_setParent](node);
      }
      super.insertAll(index, list);
    }
    [_flattenDocFragments](collection) {
      let result = T.JSArrayOfNode().of([]);
      for (let node of collection) {
        if (dom.DocumentFragment.is(node)) {
          result[$addAll](node.nodes);
        } else {
          result[$add](node);
        }
      }
      return result;
    }
  };
  (dom.NodeList.__ = function(_parent) {
    this[_parent$] = _parent;
    dom.NodeList.__proto__.new.call(this);
    ;
  }).prototype = dom.NodeList.prototype;
  dart.addTypeTests(dom.NodeList);
  dart.addTypeCaches(dom.NodeList);
  dart.setMethodSignature(dom.NodeList, () => ({
    __proto__: dart.getMethods(dom.NodeList.__proto__),
    [_setParent]: dart.fnType(dom.Node, [dom.Node]),
    addLast: dart.fnType(dart.void, [dom.Node]),
    [_flattenDocFragments]: dart.fnType(core.List$(dom.Node), [core.Iterable$(dom.Node)])
  }));
  dart.setLibraryUri(dom.NodeList, I[2]);
  dart.setFieldSignature(dom.NodeList, () => ({
    __proto__: dart.getFields(dom.NodeList.__proto__),
    [_parent$]: dart.finalFieldType(dom.Node)
  }));
  dart.defineExtensionMethods(dom.NodeList, [
    'add',
    'addAll',
    'insert',
    'removeLast',
    'removeAt',
    'clear',
    '_set',
    'setRange',
    'replaceRange',
    'removeRange',
    'removeWhere',
    'retainWhere',
    'insertAll'
  ]);
  var _childNodes = dart.privateName(dom, "_childNodes");
  var _filtered = dart.privateName(dom, "_filtered");
  const IterableBase_ListMixin$36 = class IterableBase_ListMixin extends collection.IterableBase$(dom.Element) {};
  (IterableBase_ListMixin$36.new = function() {
    IterableBase_ListMixin$36.__proto__.new.call(this);
  }).prototype = IterableBase_ListMixin$36.prototype;
  dart.applyMixin(IterableBase_ListMixin$36, collection.ListMixin$(dom.Element));
  dom.FilteredElementList = class FilteredElementList extends IterableBase_ListMixin$36 {
    get [_filtered]() {
      return this[_childNodes][$whereType](dom.Element)[$toList]();
    }
    forEach(f) {
      this[_filtered][$forEach](f);
    }
    _set(index, value$) {
      let value = value$;
      dom.Element.as(value);
      this._get(index).replaceWith(value);
      return value$;
    }
    set length(newLength) {
      let len = this.length;
      if (newLength >= len) {
        return;
      } else if (newLength < 0) {
        dart.throw(new core.ArgumentError.new("Invalid list length"));
      }
      this.removeRange(newLength, len);
    }
    join(separator = "") {
      return this[_filtered][$join](separator);
    }
    add(value) {
      dom.Element.as(value);
      this[_childNodes][$add](value);
    }
    addAll(iterable) {
      T.IterableOfElement().as(iterable);
      for (let element of iterable) {
        this.add(element);
      }
    }
    contains(element) {
      return dom.Element.is(element) && this[_childNodes][$contains](element);
    }
    get reversed() {
      return this[_filtered][$reversed];
    }
    sort(compare = null) {
      dart.throw(new core.UnsupportedError.new("TODO(jacobr): should we impl?"));
    }
    setRange(start, end, iterable, skipCount = 0) {
      T.IterableOfElement().as(iterable);
      dart.throw(new core.UnimplementedError.new());
    }
    fillRange(start, end, fillValue = null) {
      T.ElementN().as(fillValue);
      dart.throw(new core.UnimplementedError.new());
    }
    replaceRange(start, end, iterable) {
      T.IterableOfElement().as(iterable);
      dart.throw(new core.UnimplementedError.new());
    }
    removeRange(start, end) {
      this[_filtered][$sublist](start, end)[$forEach](dart.fn(el => el.remove(), T.ElementTovoid()));
    }
    clear() {
      this[_childNodes][$clear]();
    }
    removeLast() {
      let t6;
      t6 = this.last;
      return (() => {
        t6.remove();
        return t6;
      })();
    }
    map(T, f) {
      return this[_filtered][$map](T, f);
    }
    where(f) {
      return this[_filtered][$where](f);
    }
    expand(T, f) {
      return this[_filtered][$expand](T, f);
    }
    insert(index, value) {
      dom.Element.as(value);
      this[_childNodes][$insert](index, value);
    }
    insertAll(index, iterable) {
      T.IterableOfElement().as(iterable);
      this[_childNodes][$insertAll](index, iterable);
    }
    removeAt(index) {
      let result = this._get(index);
      result.remove();
      return result;
    }
    remove(element) {
      if (!dom.Element.is(element)) return false;
      for (let i = 0; i < this.length; i = i + 1) {
        let indexElement = this._get(i);
        if (indexElement === element) {
          indexElement.remove();
          return true;
        }
      }
      return false;
    }
    reduce(combine) {
      T.ElementAndElementToElement().as(combine);
      return this[_filtered][$reduce](combine);
    }
    fold(T, initialValue, combine) {
      return this[_filtered][$fold](T, initialValue, combine);
    }
    every(f) {
      return this[_filtered][$every](f);
    }
    any(f) {
      return this[_filtered][$any](f);
    }
    toList(opts) {
      let growable = opts && 'growable' in opts ? opts.growable : true;
      return T.ListOfElement().from(this, {growable: growable});
    }
    toSet() {
      return T.LinkedHashSetOfElement().from(this);
    }
    firstWhere(test, opts) {
      let orElse = opts && 'orElse' in opts ? opts.orElse : null;
      T.VoidToNElement().as(orElse);
      return this[_filtered][$firstWhere](test, {orElse: orElse});
    }
    lastWhere(test, opts) {
      let orElse = opts && 'orElse' in opts ? opts.orElse : null;
      T.VoidToNElement().as(orElse);
      return this[_filtered][$lastWhere](test, {orElse: orElse});
    }
    singleWhere(test, opts) {
      let orElse = opts && 'orElse' in opts ? opts.orElse : null;
      T.VoidToNElement().as(orElse);
      if (orElse != null) dart.throw(new core.UnimplementedError.new("orElse"));
      return this[_filtered][$singleWhere](test);
    }
    elementAt(index) {
      return this._get(index);
    }
    get isEmpty() {
      return this[_filtered][$isEmpty];
    }
    get length() {
      return this[_filtered][$length];
    }
    _get(index) {
      return this[_filtered][$_get](index);
    }
    get iterator() {
      return this[_filtered][$iterator];
    }
    sublist(start, end = null) {
      return this[_filtered][$sublist](start, end);
    }
    getRange(start, end) {
      return this[_filtered][$getRange](start, end);
    }
    indexOf(element, start = 0) {
      return this[_filtered][$indexOf](dom.Element.as(element), start);
    }
    lastIndexOf(element, start = null) {
      start == null ? start = this.length - 1 : null;
      return this[_filtered][$lastIndexOf](dom.Element.as(element), start);
    }
    get first() {
      return this[_filtered][$first];
    }
    set first(value) {
      super.first = value;
    }
    get last() {
      return this[_filtered][$last];
    }
    set last(value) {
      super.last = value;
    }
    get single() {
      return this[_filtered][$single];
    }
  };
  (dom.FilteredElementList.new = function(node) {
    this[_childNodes] = node.nodes;
    dom.FilteredElementList.__proto__.new.call(this);
    ;
  }).prototype = dom.FilteredElementList.prototype;
  dom.FilteredElementList.prototype[dart.isList] = true;
  dart.addTypeTests(dom.FilteredElementList);
  dart.addTypeCaches(dom.FilteredElementList);
  dom.FilteredElementList[dart.implements] = () => [core.List$(dom.Element)];
  dart.setMethodSignature(dom.FilteredElementList, () => ({
    __proto__: dart.getMethods(dom.FilteredElementList.__proto__),
    _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
    [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
    map: dart.gFnType(T => [core.Iterable$(T), [dart.fnType(T, [dom.Element])]], T => [dart.nullable(core.Object)]),
    [$map]: dart.gFnType(T => [core.Iterable$(T), [dart.fnType(T, [dom.Element])]], T => [dart.nullable(core.Object)]),
    expand: dart.gFnType(T => [core.Iterable$(T), [dart.fnType(core.Iterable$(T), [dom.Element])]], T => [dart.nullable(core.Object)]),
    [$expand]: dart.gFnType(T => [core.Iterable$(T), [dart.fnType(core.Iterable$(T), [dom.Element])]], T => [dart.nullable(core.Object)]),
    fold: dart.gFnType(T => [T, [T, dart.fnType(T, [T, dom.Element])]], T => [dart.nullable(core.Object)]),
    [$fold]: dart.gFnType(T => [T, [T, dart.fnType(T, [T, dom.Element])]], T => [dart.nullable(core.Object)]),
    _get: dart.fnType(dom.Element, [core.int]),
    [$_get]: dart.fnType(dom.Element, [core.int])
  }));
  dart.setGetterSignature(dom.FilteredElementList, () => ({
    __proto__: dart.getGetters(dom.FilteredElementList.__proto__),
    [_filtered]: core.List$(dom.Element)
  }));
  dart.setSetterSignature(dom.FilteredElementList, () => ({
    __proto__: dart.getSetters(dom.FilteredElementList.__proto__),
    length: core.int,
    [$length]: core.int
  }));
  dart.setLibraryUri(dom.FilteredElementList, I[2]);
  dart.setFieldSignature(dom.FilteredElementList, () => ({
    __proto__: dart.getFields(dom.FilteredElementList.__proto__),
    [_childNodes]: dart.finalFieldType(core.List$(dom.Node))
  }));
  dart.defineExtensionMethods(dom.FilteredElementList, [
    'forEach',
    '_set',
    'join',
    'add',
    'addAll',
    'contains',
    'sort',
    'setRange',
    'fillRange',
    'replaceRange',
    'removeRange',
    'clear',
    'removeLast',
    'map',
    'where',
    'expand',
    'insert',
    'insertAll',
    'removeAt',
    'remove',
    'reduce',
    'fold',
    'every',
    'any',
    'toList',
    'toSet',
    'firstWhere',
    'lastWhere',
    'singleWhere',
    'elementAt',
    '_get',
    'sublist',
    'getRange',
    'indexOf',
    'lastIndexOf'
  ]);
  dart.defineExtensionAccessors(dom.FilteredElementList, [
    'length',
    'reversed',
    'isEmpty',
    'iterator',
    'first',
    'last',
    'single'
  ]);
  var _str$ = dart.privateName(dom, "_str");
  dom._ConcatTextVisitor = class _ConcatTextVisitor extends dom_parsing.TreeVisitor {
    toString() {
      return this[_str$].toString();
    }
    visitText(node) {
      this[_str$].write(node.data);
    }
  };
  (dom._ConcatTextVisitor.new = function() {
    this[_str$] = new core.StringBuffer.new();
    ;
  }).prototype = dom._ConcatTextVisitor.prototype;
  dart.addTypeTests(dom._ConcatTextVisitor);
  dart.addTypeCaches(dom._ConcatTextVisitor);
  dart.setLibraryUri(dom._ConcatTextVisitor, I[2]);
  dart.setFieldSignature(dom._ConcatTextVisitor, () => ({
    __proto__: dart.getFields(dom._ConcatTextVisitor.__proto__),
    [_str$]: dart.finalFieldType(core.StringBuffer)
  }));
  dart.defineExtensionMethods(dom._ConcatTextVisitor, ['toString']);
  dom._getText = function _getText(node) {
    let t6;
    return (t6 = new dom._ConcatTextVisitor.new(), (() => {
      t6.visit(node);
      return t6;
    })()).toString();
  };
  dom._setText = function _setText(node, value) {
    node.nodes.clear();
    node.append(new dom.Text.new(value));
  };
  dart.trackLibraries("packages/html/src/query_selector.dart", {
    "package:html/src/query_selector.dart": query_selector,
    "package:html/src/css_class_set.dart": css_class_set,
    "package:html/src/treebuilder.dart": treebuilder,
    "package:html/src/tokenizer.dart": tokenizer$,
    "package:html/parser.dart": parser$,
    "package:html/dom_parsing.dart": dom_parsing,
    "package:html/dom.dart": dom
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["query_selector.dart","css_class_set.dart","../dom.dart","treebuilder.dart","tokenizer.dart","../parser.dart","../dom_parsing.dart"],"names":[],"mappings":"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","file":"../../../../../../../../packages/html/src/query_selector.dart.lib.js"}');
  // Exports:
  return {
    src__query_selector: query_selector,
    src__css_class_set: css_class_set,
    src__treebuilder: treebuilder,
    src__tokenizer: tokenizer$,
    parser: parser$,
    dom_parsing: dom_parsing,
    dom: dom
  };
}));

//# sourceMappingURL=query_selector.dart.lib.js.map
